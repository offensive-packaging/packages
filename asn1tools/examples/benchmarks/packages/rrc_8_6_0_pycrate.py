# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class EUTRA_RRC_Definitions:

    _name_  = 'EUTRA-RRC-Definitions'
    _oid_   = []
    
    _obj_ = [
        'BCCH-BCH-Message',
        'BCCH-BCH-MessageType',
        'BCCH-DL-SCH-Message',
        'BCCH-DL-SCH-MessageType',
        'PCCH-Message',
        'PCCH-MessageType',
        'DL-CCCH-Message',
        'DL-CCCH-MessageType',
        'DL-DCCH-Message',
        'DL-DCCH-MessageType',
        'UL-CCCH-Message',
        'UL-CCCH-MessageType',
        'UL-DCCH-Message',
        'UL-DCCH-MessageType',
        'CounterCheck',
        'CounterCheck-r8-IEs',
        'DRB-CountMSB-InfoList',
        'DRB-CountMSB-Info',
        'CounterCheckResponse',
        'CounterCheckResponse-r8-IEs',
        'DRB-CountInfoList',
        'DRB-CountInfo',
        'CSFBParametersRequestCDMA2000',
        'CSFBParametersRequestCDMA2000-r8-IEs',
        'CSFBParametersResponseCDMA2000',
        'CSFBParametersResponseCDMA2000-r8-IEs',
        'DLInformationTransfer',
        'DLInformationTransfer-r8-IEs',
        'HandoverFromEUTRAPreparationRequest',
        'HandoverFromEUTRAPreparationRequest-r8-IEs',
        'MasterInformationBlock',
        'MeasurementReport',
        'MeasurementReport-r8-IEs',
        'MobilityFromEUTRACommand',
        'MobilityFromEUTRACommand-r8-IEs',
        'Handover',
        'CellChangeOrder',
        'SI-OrPSI-GERAN',
        'SystemInfoListGERAN',
        'Paging',
        'PagingRecordList',
        'PagingRecord',
        'PagingUE-Identity',
        'IMSI',
        'IMSI-Digit',
        'RRCConnectionReconfiguration',
        'RRCConnectionReconfiguration-r8-IEs',
        'SecurityConfigHO',
        'RRCConnectionReconfigurationComplete',
        'RRCConnectionReconfigurationComplete-r8-IEs',
        'RRCConnectionReestablishment',
        'RRCConnectionReestablishment-r8-IEs',
        'RRCConnectionReestablishmentComplete',
        'RRCConnectionReestablishmentComplete-r8-IEs',
        'RRCConnectionReestablishmentReject',
        'RRCConnectionReestablishmentReject-r8-IEs',
        'RRCConnectionReestablishmentRequest',
        'RRCConnectionReestablishmentRequest-r8-IEs',
        'ReestabUE-Identity',
        'ReestablishmentCause',
        'RRCConnectionReject',
        'RRCConnectionReject-r8-IEs',
        'RRCConnectionRelease',
        'RRCConnectionRelease-r8-IEs',
        'ReleaseCause',
        'RedirectedCarrierInfo',
        'IdleModeMobilityControlInfo',
        'FreqPriorityListEUTRA',
        'FreqPriorityEUTRA',
        'FreqsPriorityListGERAN',
        'FreqsPriorityGERAN',
        'FreqPriorityListUTRA-FDD',
        'FreqPriorityUTRA-FDD',
        'FreqPriorityListUTRA-TDD',
        'FreqPriorityUTRA-TDD',
        'BandClassPriorityListHRPD',
        'BandClassPriorityHRPD',
        'BandClassPriorityList1XRTT',
        'BandClassPriority1XRTT',
        'RRCConnectionRequest',
        'RRCConnectionRequest-r8-IEs',
        'InitialUE-Identity',
        'EstablishmentCause',
        'RRCConnectionSetup',
        'RRCConnectionSetup-r8-IEs',
        'RRCConnectionSetupComplete',
        'RRCConnectionSetupComplete-r8-IEs',
        'RegisteredMME',
        'SecurityModeCommand',
        'SecurityModeCommand-r8-IEs',
        'SecurityConfigSMC',
        'SecurityModeComplete',
        'SecurityModeComplete-r8-IEs',
        'SecurityModeFailure',
        'SecurityModeFailure-r8-IEs',
        'SystemInformation',
        'SystemInformation-r8-IEs',
        'SystemInformationBlockType1',
        'PLMN-IdentityList',
        'PLMN-IdentityInfo',
        'SchedulingInfoList',
        'SchedulingInfo',
        'SIB-MappingInfo',
        'SIB-Type',
        'UECapabilityEnquiry',
        'UECapabilityEnquiry-r8-IEs',
        'UE-CapabilityRequest',
        'UECapabilityInformation',
        'UECapabilityInformation-r8-IEs',
        'ULHandoverPreparationTransfer',
        'ULHandoverPreparationTransfer-r8-IEs',
        'ULInformationTransfer',
        'ULInformationTransfer-r8-IEs',
        'SystemInformationBlockType2',
        'AC-BarringConfig',
        'MBSFN-SubframeConfigList',
        'MBSFN-SubframeConfig',
        'SystemInformationBlockType3',
        'SystemInformationBlockType4',
        'IntraFreqNeighCellList',
        'IntraFreqNeighCellInfo',
        'IntraFreqBlackCellList',
        'SystemInformationBlockType5',
        'InterFreqCarrierFreqList',
        'InterFreqCarrierFreqInfo',
        'InterFreqNeighCellList',
        'InterFreqNeighCellInfo',
        'InterFreqBlackCellList',
        'SystemInformationBlockType6',
        'CarrierFreqListUTRA-FDD',
        'CarrierFreqUTRA-FDD',
        'CarrierFreqListUTRA-TDD',
        'CarrierFreqUTRA-TDD',
        'SystemInformationBlockType7',
        'CarrierFreqsInfoListGERAN',
        'CarrierFreqsInfoGERAN',
        'SystemInformationBlockType8',
        'CellReselectionParametersCDMA2000',
        'NeighCellListCDMA2000',
        'NeighCellCDMA2000',
        'NeighCellsPerBandclassListCDMA2000',
        'NeighCellsPerBandclassCDMA2000',
        'PhysCellIdListCDMA2000',
        'BandClassListCDMA2000',
        'BandClassInfoCDMA2000',
        'SystemInformationBlockType9',
        'SystemInformationBlockType10',
        'SystemInformationBlockType11',
        'AntennaInfoCommon',
        'AntennaInfoDedicated',
        'CQI-ReportConfig',
        'CQI-ReportPeriodic',
        'DRB-Identity',
        'LogicalChannelConfig',
        'MAC-MainConfig',
        'DRX-Config',
        'PDCP-Config',
        'PDSCH-ConfigCommon',
        'PDSCH-ConfigDedicated',
        'PHICH-Config',
        'PhysicalConfigDedicated',
        'P-Max',
        'PRACH-ConfigSIB',
        'PRACH-Config',
        'PRACH-ConfigInfo',
        'PresenceAntennaPort1',
        'PUCCH-ConfigCommon',
        'PUCCH-ConfigDedicated',
        'PUSCH-ConfigCommon',
        'PUSCH-ConfigDedicated',
        'UL-ReferenceSignalsPUSCH',
        'RACH-ConfigCommon',
        'RACH-ConfigDedicated',
        'RadioResourceConfigCommonSIB',
        'RadioResourceConfigCommon',
        'BCCH-Config',
        'PCCH-Config',
        'UL-CyclicPrefixLength',
        'RadioResourceConfigDedicated',
        'SRB-ToAddModList',
        'SRB-ToAddMod',
        'DRB-ToAddModList',
        'DRB-ToAddMod',
        'DRB-ToReleaseList',
        'RLC-Config',
        'UL-AM-RLC',
        'DL-AM-RLC',
        'UL-UM-RLC',
        'DL-UM-RLC',
        'SN-FieldLength',
        'T-PollRetransmit',
        'PollPDU',
        'PollByte',
        'T-Reordering',
        'T-StatusProhibit',
        'SchedulingRequestConfig',
        'SoundingRS-UL-ConfigCommon',
        'SoundingRS-UL-ConfigDedicated',
        'SPS-Config',
        'SPS-ConfigDL',
        'SPS-ConfigUL',
        'N1-PUCCH-AN-PersistentList',
        'TDD-Config',
        'TimeAlignmentTimer',
        'TPC-PDCCH-Config',
        'TPC-Index',
        'UplinkPowerControlCommon',
        'UplinkPowerControlDedicated',
        'DeltaFList-PUCCH',
        'NextHopChainingCount',
        'SecurityAlgorithmConfig',
        'ShortMAC-I',
        'AdditionalSpectrumEmission',
        'ARFCN-ValueCDMA2000',
        'ARFCN-ValueEUTRA',
        'ARFCN-ValueGERAN',
        'ARFCN-ValueUTRA',
        'BandclassCDMA2000',
        'BandIndicatorGERAN',
        'CarrierFreqCDMA2000',
        'CarrierFreqGERAN',
        'CarrierFreqsGERAN',
        'ExplicitListOfARFCNs',
        'CDMA2000-Type',
        'CellIdentity',
        'CellIndexList',
        'CellIndex',
        'CellReselectionPriority',
        'CSFB-RegistrationParam1XRTT',
        'CellGlobalIdEUTRA',
        'CellGlobalIdUTRA',
        'CellGlobalIdGERAN',
        'CellGlobalIdCDMA2000',
        'MobilityControlInfo',
        'CarrierBandwidthEUTRA',
        'CarrierFreqEUTRA',
        'MobilityParametersCDMA2000',
        'MobilityStateParameters',
        'PhysCellId',
        'PhysCellIdRange',
        'PhysCellIdCDMA2000',
        'PhysCellIdGERAN',
        'PhysCellIdUTRA-FDD',
        'PhysCellIdUTRA-TDD',
        'PLMN-Identity',
        'MCC',
        'MNC',
        'MCC-MNC-Digit',
        'PreRegistrationInfoHRPD',
        'SecondaryPreRegistrationZoneIdListHRPD',
        'PreRegistrationZoneIdHRPD',
        'Q-RxLevMin',
        'Q-OffsetRange',
        'Q-OffsetRangeInterRAT',
        'ReselectionThreshold',
        'SpeedStateScaleFactors',
        'SystemTimeInfoCDMA2000',
        'TrackingAreaCode',
        'T-Reselection',
        'AllowedMeasBandwidth',
        'Hysteresis',
        'MeasConfig',
        'MeasIdToRemoveList',
        'MeasObjectToRemoveList',
        'ReportConfigToRemoveList',
        'MeasGapConfig',
        'MeasId',
        'MeasIdToAddModList',
        'MeasIdToAddMod',
        'MeasObjectCDMA2000',
        'CellsToAddModListCDMA2000',
        'CellsToAddModCDMA2000',
        'MeasObjectEUTRA',
        'CellsToAddModList',
        'CellsToAddMod',
        'BlackCellsToAddModList',
        'BlackCellsToAddMod',
        'MeasObjectGERAN',
        'MeasObjectId',
        'MeasObjectToAddModList',
        'MeasObjectToAddMod',
        'MeasObjectUTRA',
        'CellsToAddModListUTRA-FDD',
        'CellsToAddModUTRA-FDD',
        'CellsToAddModListUTRA-TDD',
        'CellsToAddModUTRA-TDD',
        'MeasResults',
        'MeasResultListEUTRA',
        'MeasResultEUTRA',
        'MeasResultListUTRA',
        'MeasResultUTRA',
        'MeasResultListGERAN',
        'MeasResultGERAN',
        'MeasResultsCDMA2000',
        'MeasResultListCDMA2000',
        'MeasResultCDMA2000',
        'PLMN-IdentityList2',
        'QuantityConfig',
        'QuantityConfigEUTRA',
        'QuantityConfigUTRA',
        'QuantityConfigGERAN',
        'QuantityConfigCDMA2000',
        'ReportConfigEUTRA',
        'ThresholdEUTRA',
        'ReportConfigId',
        'ReportConfigInterRAT',
        'ThresholdUTRA',
        'ThresholdGERAN',
        'ThresholdCDMA2000',
        'ReportConfigToAddModList',
        'ReportConfigToAddMod',
        'ReportInterval',
        'RSRP-Range',
        'RSRQ-Range',
        'TimeToTrigger',
        'C-RNTI',
        'DedicatedInfoCDMA2000',
        'DedicatedInfoNAS',
        'FilterCoefficient',
        'MMEC',
        'NeighCellConfig',
        'RAND-CDMA2000',
        'RAT-Type',
        'RRC-TransactionIdentifier',
        'S-TMSI',
        'UE-CapabilityRAT-ContainerList',
        'UE-CapabilityRAT-Container',
        'UE-EUTRA-Capability',
        'AccessStratumRelease',
        'PDCP-Parameters',
        'PhyLayerParameters',
        'RF-Parameters',
        'SupportedBandListEUTRA',
        'SupportedBandEUTRA',
        'MeasParameters',
        'BandListEUTRA',
        'BandInfoEUTRA',
        'InterFreqBandList',
        'InterFreqBandInfo',
        'InterRAT-BandList',
        'InterRAT-BandInfo',
        'IRAT-ParametersUTRA-FDD',
        'SupportedBandListUTRA-FDD',
        'SupportedBandUTRA-FDD',
        'IRAT-ParametersUTRA-TDD128',
        'SupportedBandListUTRA-TDD128',
        'SupportedBandUTRA-TDD128',
        'IRAT-ParametersUTRA-TDD384',
        'SupportedBandListUTRA-TDD384',
        'SupportedBandUTRA-TDD384',
        'IRAT-ParametersUTRA-TDD768',
        'SupportedBandListUTRA-TDD768',
        'SupportedBandUTRA-TDD768',
        'IRAT-ParametersGERAN',
        'SupportedBandListGERAN',
        'SupportedBandGERAN',
        'IRAT-ParametersCDMA2000-HRPD',
        'SupportedBandListHRPD',
        'IRAT-ParametersCDMA2000-1XRTT',
        'SupportedBandList1XRTT',
        'UE-TimersAndConstants',
        'maxBands',
        'maxCDMA-BandClass',
        'maxCellBlack',
        'maxCellInter',
        'maxCellIntra',
        'maxCellMeas',
        'maxCellReport',
        'maxDRB',
        'maxEARFCN',
        'maxFreq',
        'maxGERAN-SI',
        'maxGNFG',
        'maxMBSFN-Allocations',
        'maxMCS-1',
        'maxMeasId',
        'maxObjectId',
        'maxPageRec',
        'maxPNOffset',
        'maxRAT-Capabilities',
        'maxReportConfigId',
        'maxSIB',
        'maxSIB-1',
        'maxSI-Message',
        'maxUTRA-FDD-Carrier',
        'maxUTRA-TDD-Carrier',
        ]
    _type_ = [
        'BCCH-BCH-Message',
        'BCCH-BCH-MessageType',
        'BCCH-DL-SCH-Message',
        'BCCH-DL-SCH-MessageType',
        'PCCH-Message',
        'PCCH-MessageType',
        'DL-CCCH-Message',
        'DL-CCCH-MessageType',
        'DL-DCCH-Message',
        'DL-DCCH-MessageType',
        'UL-CCCH-Message',
        'UL-CCCH-MessageType',
        'UL-DCCH-Message',
        'UL-DCCH-MessageType',
        'CounterCheck',
        'CounterCheck-r8-IEs',
        'DRB-CountMSB-InfoList',
        'DRB-CountMSB-Info',
        'CounterCheckResponse',
        'CounterCheckResponse-r8-IEs',
        'DRB-CountInfoList',
        'DRB-CountInfo',
        'CSFBParametersRequestCDMA2000',
        'CSFBParametersRequestCDMA2000-r8-IEs',
        'CSFBParametersResponseCDMA2000',
        'CSFBParametersResponseCDMA2000-r8-IEs',
        'DLInformationTransfer',
        'DLInformationTransfer-r8-IEs',
        'HandoverFromEUTRAPreparationRequest',
        'HandoverFromEUTRAPreparationRequest-r8-IEs',
        'MasterInformationBlock',
        'MeasurementReport',
        'MeasurementReport-r8-IEs',
        'MobilityFromEUTRACommand',
        'MobilityFromEUTRACommand-r8-IEs',
        'Handover',
        'CellChangeOrder',
        'SI-OrPSI-GERAN',
        'SystemInfoListGERAN',
        'Paging',
        'PagingRecordList',
        'PagingRecord',
        'PagingUE-Identity',
        'IMSI',
        'IMSI-Digit',
        'RRCConnectionReconfiguration',
        'RRCConnectionReconfiguration-r8-IEs',
        'SecurityConfigHO',
        'RRCConnectionReconfigurationComplete',
        'RRCConnectionReconfigurationComplete-r8-IEs',
        'RRCConnectionReestablishment',
        'RRCConnectionReestablishment-r8-IEs',
        'RRCConnectionReestablishmentComplete',
        'RRCConnectionReestablishmentComplete-r8-IEs',
        'RRCConnectionReestablishmentReject',
        'RRCConnectionReestablishmentReject-r8-IEs',
        'RRCConnectionReestablishmentRequest',
        'RRCConnectionReestablishmentRequest-r8-IEs',
        'ReestabUE-Identity',
        'ReestablishmentCause',
        'RRCConnectionReject',
        'RRCConnectionReject-r8-IEs',
        'RRCConnectionRelease',
        'RRCConnectionRelease-r8-IEs',
        'ReleaseCause',
        'RedirectedCarrierInfo',
        'IdleModeMobilityControlInfo',
        'FreqPriorityListEUTRA',
        'FreqPriorityEUTRA',
        'FreqsPriorityListGERAN',
        'FreqsPriorityGERAN',
        'FreqPriorityListUTRA-FDD',
        'FreqPriorityUTRA-FDD',
        'FreqPriorityListUTRA-TDD',
        'FreqPriorityUTRA-TDD',
        'BandClassPriorityListHRPD',
        'BandClassPriorityHRPD',
        'BandClassPriorityList1XRTT',
        'BandClassPriority1XRTT',
        'RRCConnectionRequest',
        'RRCConnectionRequest-r8-IEs',
        'InitialUE-Identity',
        'EstablishmentCause',
        'RRCConnectionSetup',
        'RRCConnectionSetup-r8-IEs',
        'RRCConnectionSetupComplete',
        'RRCConnectionSetupComplete-r8-IEs',
        'RegisteredMME',
        'SecurityModeCommand',
        'SecurityModeCommand-r8-IEs',
        'SecurityConfigSMC',
        'SecurityModeComplete',
        'SecurityModeComplete-r8-IEs',
        'SecurityModeFailure',
        'SecurityModeFailure-r8-IEs',
        'SystemInformation',
        'SystemInformation-r8-IEs',
        'SystemInformationBlockType1',
        'PLMN-IdentityList',
        'PLMN-IdentityInfo',
        'SchedulingInfoList',
        'SchedulingInfo',
        'SIB-MappingInfo',
        'SIB-Type',
        'UECapabilityEnquiry',
        'UECapabilityEnquiry-r8-IEs',
        'UE-CapabilityRequest',
        'UECapabilityInformation',
        'UECapabilityInformation-r8-IEs',
        'ULHandoverPreparationTransfer',
        'ULHandoverPreparationTransfer-r8-IEs',
        'ULInformationTransfer',
        'ULInformationTransfer-r8-IEs',
        'SystemInformationBlockType2',
        'AC-BarringConfig',
        'MBSFN-SubframeConfigList',
        'MBSFN-SubframeConfig',
        'SystemInformationBlockType3',
        'SystemInformationBlockType4',
        'IntraFreqNeighCellList',
        'IntraFreqNeighCellInfo',
        'IntraFreqBlackCellList',
        'SystemInformationBlockType5',
        'InterFreqCarrierFreqList',
        'InterFreqCarrierFreqInfo',
        'InterFreqNeighCellList',
        'InterFreqNeighCellInfo',
        'InterFreqBlackCellList',
        'SystemInformationBlockType6',
        'CarrierFreqListUTRA-FDD',
        'CarrierFreqUTRA-FDD',
        'CarrierFreqListUTRA-TDD',
        'CarrierFreqUTRA-TDD',
        'SystemInformationBlockType7',
        'CarrierFreqsInfoListGERAN',
        'CarrierFreqsInfoGERAN',
        'SystemInformationBlockType8',
        'CellReselectionParametersCDMA2000',
        'NeighCellListCDMA2000',
        'NeighCellCDMA2000',
        'NeighCellsPerBandclassListCDMA2000',
        'NeighCellsPerBandclassCDMA2000',
        'PhysCellIdListCDMA2000',
        'BandClassListCDMA2000',
        'BandClassInfoCDMA2000',
        'SystemInformationBlockType9',
        'SystemInformationBlockType10',
        'SystemInformationBlockType11',
        'AntennaInfoCommon',
        'AntennaInfoDedicated',
        'CQI-ReportConfig',
        'CQI-ReportPeriodic',
        'DRB-Identity',
        'LogicalChannelConfig',
        'MAC-MainConfig',
        'DRX-Config',
        'PDCP-Config',
        'PDSCH-ConfigCommon',
        'PDSCH-ConfigDedicated',
        'PHICH-Config',
        'PhysicalConfigDedicated',
        'P-Max',
        'PRACH-ConfigSIB',
        'PRACH-Config',
        'PRACH-ConfigInfo',
        'PresenceAntennaPort1',
        'PUCCH-ConfigCommon',
        'PUCCH-ConfigDedicated',
        'PUSCH-ConfigCommon',
        'PUSCH-ConfigDedicated',
        'UL-ReferenceSignalsPUSCH',
        'RACH-ConfigCommon',
        'RACH-ConfigDedicated',
        'RadioResourceConfigCommonSIB',
        'RadioResourceConfigCommon',
        'BCCH-Config',
        'PCCH-Config',
        'UL-CyclicPrefixLength',
        'RadioResourceConfigDedicated',
        'SRB-ToAddModList',
        'SRB-ToAddMod',
        'DRB-ToAddModList',
        'DRB-ToAddMod',
        'DRB-ToReleaseList',
        'RLC-Config',
        'UL-AM-RLC',
        'DL-AM-RLC',
        'UL-UM-RLC',
        'DL-UM-RLC',
        'SN-FieldLength',
        'T-PollRetransmit',
        'PollPDU',
        'PollByte',
        'T-Reordering',
        'T-StatusProhibit',
        'SchedulingRequestConfig',
        'SoundingRS-UL-ConfigCommon',
        'SoundingRS-UL-ConfigDedicated',
        'SPS-Config',
        'SPS-ConfigDL',
        'SPS-ConfigUL',
        'N1-PUCCH-AN-PersistentList',
        'TDD-Config',
        'TimeAlignmentTimer',
        'TPC-PDCCH-Config',
        'TPC-Index',
        'UplinkPowerControlCommon',
        'UplinkPowerControlDedicated',
        'DeltaFList-PUCCH',
        'NextHopChainingCount',
        'SecurityAlgorithmConfig',
        'ShortMAC-I',
        'AdditionalSpectrumEmission',
        'ARFCN-ValueCDMA2000',
        'ARFCN-ValueEUTRA',
        'ARFCN-ValueGERAN',
        'ARFCN-ValueUTRA',
        'BandclassCDMA2000',
        'BandIndicatorGERAN',
        'CarrierFreqCDMA2000',
        'CarrierFreqGERAN',
        'CarrierFreqsGERAN',
        'ExplicitListOfARFCNs',
        'CDMA2000-Type',
        'CellIdentity',
        'CellIndexList',
        'CellIndex',
        'CellReselectionPriority',
        'CSFB-RegistrationParam1XRTT',
        'CellGlobalIdEUTRA',
        'CellGlobalIdUTRA',
        'CellGlobalIdGERAN',
        'CellGlobalIdCDMA2000',
        'MobilityControlInfo',
        'CarrierBandwidthEUTRA',
        'CarrierFreqEUTRA',
        'MobilityParametersCDMA2000',
        'MobilityStateParameters',
        'PhysCellId',
        'PhysCellIdRange',
        'PhysCellIdCDMA2000',
        'PhysCellIdGERAN',
        'PhysCellIdUTRA-FDD',
        'PhysCellIdUTRA-TDD',
        'PLMN-Identity',
        'MCC',
        'MNC',
        'MCC-MNC-Digit',
        'PreRegistrationInfoHRPD',
        'SecondaryPreRegistrationZoneIdListHRPD',
        'PreRegistrationZoneIdHRPD',
        'Q-RxLevMin',
        'Q-OffsetRange',
        'Q-OffsetRangeInterRAT',
        'ReselectionThreshold',
        'SpeedStateScaleFactors',
        'SystemTimeInfoCDMA2000',
        'TrackingAreaCode',
        'T-Reselection',
        'AllowedMeasBandwidth',
        'Hysteresis',
        'MeasConfig',
        'MeasIdToRemoveList',
        'MeasObjectToRemoveList',
        'ReportConfigToRemoveList',
        'MeasGapConfig',
        'MeasId',
        'MeasIdToAddModList',
        'MeasIdToAddMod',
        'MeasObjectCDMA2000',
        'CellsToAddModListCDMA2000',
        'CellsToAddModCDMA2000',
        'MeasObjectEUTRA',
        'CellsToAddModList',
        'CellsToAddMod',
        'BlackCellsToAddModList',
        'BlackCellsToAddMod',
        'MeasObjectGERAN',
        'MeasObjectId',
        'MeasObjectToAddModList',
        'MeasObjectToAddMod',
        'MeasObjectUTRA',
        'CellsToAddModListUTRA-FDD',
        'CellsToAddModUTRA-FDD',
        'CellsToAddModListUTRA-TDD',
        'CellsToAddModUTRA-TDD',
        'MeasResults',
        'MeasResultListEUTRA',
        'MeasResultEUTRA',
        'MeasResultListUTRA',
        'MeasResultUTRA',
        'MeasResultListGERAN',
        'MeasResultGERAN',
        'MeasResultsCDMA2000',
        'MeasResultListCDMA2000',
        'MeasResultCDMA2000',
        'PLMN-IdentityList2',
        'QuantityConfig',
        'QuantityConfigEUTRA',
        'QuantityConfigUTRA',
        'QuantityConfigGERAN',
        'QuantityConfigCDMA2000',
        'ReportConfigEUTRA',
        'ThresholdEUTRA',
        'ReportConfigId',
        'ReportConfigInterRAT',
        'ThresholdUTRA',
        'ThresholdGERAN',
        'ThresholdCDMA2000',
        'ReportConfigToAddModList',
        'ReportConfigToAddMod',
        'ReportInterval',
        'RSRP-Range',
        'RSRQ-Range',
        'TimeToTrigger',
        'C-RNTI',
        'DedicatedInfoCDMA2000',
        'DedicatedInfoNAS',
        'FilterCoefficient',
        'MMEC',
        'NeighCellConfig',
        'RAND-CDMA2000',
        'RAT-Type',
        'RRC-TransactionIdentifier',
        'S-TMSI',
        'UE-CapabilityRAT-ContainerList',
        'UE-CapabilityRAT-Container',
        'UE-EUTRA-Capability',
        'AccessStratumRelease',
        'PDCP-Parameters',
        'PhyLayerParameters',
        'RF-Parameters',
        'SupportedBandListEUTRA',
        'SupportedBandEUTRA',
        'MeasParameters',
        'BandListEUTRA',
        'BandInfoEUTRA',
        'InterFreqBandList',
        'InterFreqBandInfo',
        'InterRAT-BandList',
        'InterRAT-BandInfo',
        'IRAT-ParametersUTRA-FDD',
        'SupportedBandListUTRA-FDD',
        'SupportedBandUTRA-FDD',
        'IRAT-ParametersUTRA-TDD128',
        'SupportedBandListUTRA-TDD128',
        'SupportedBandUTRA-TDD128',
        'IRAT-ParametersUTRA-TDD384',
        'SupportedBandListUTRA-TDD384',
        'SupportedBandUTRA-TDD384',
        'IRAT-ParametersUTRA-TDD768',
        'SupportedBandListUTRA-TDD768',
        'SupportedBandUTRA-TDD768',
        'IRAT-ParametersGERAN',
        'SupportedBandListGERAN',
        'SupportedBandGERAN',
        'IRAT-ParametersCDMA2000-HRPD',
        'SupportedBandListHRPD',
        'IRAT-ParametersCDMA2000-1XRTT',
        'SupportedBandList1XRTT',
        'UE-TimersAndConstants',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxBands',
        'maxCDMA-BandClass',
        'maxCellBlack',
        'maxCellInter',
        'maxCellIntra',
        'maxCellMeas',
        'maxCellReport',
        'maxDRB',
        'maxEARFCN',
        'maxFreq',
        'maxGERAN-SI',
        'maxGNFG',
        'maxMBSFN-Allocations',
        'maxMCS-1',
        'maxMeasId',
        'maxObjectId',
        'maxPageRec',
        'maxPNOffset',
        'maxRAT-Capabilities',
        'maxReportConfigId',
        'maxSIB',
        'maxSIB-1',
        'maxSI-Message',
        'maxUTRA-FDD-Carrier',
        'maxUTRA-TDD-Carrier',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< BCCH-BCH-Message >-----#
    BCCH_BCH_Message = SEQ(name='BCCH-BCH-Message', mode=MODE_TYPE)
    _BCCH_BCH_Message_message = SEQ(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BCCH-BCH-MessageType')))
    BCCH_BCH_Message._cont = ASN1Dict([
        ('message', _BCCH_BCH_Message_message),
        ])
    BCCH_BCH_Message._ext = None
    
    #-----< BCCH-BCH-MessageType >-----#
    BCCH_BCH_MessageType = SEQ(name='BCCH-BCH-MessageType', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MasterInformationBlock')))
    
    #-----< BCCH-DL-SCH-Message >-----#
    BCCH_DL_SCH_Message = SEQ(name='BCCH-DL-SCH-Message', mode=MODE_TYPE)
    _BCCH_DL_SCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BCCH-DL-SCH-MessageType')))
    BCCH_DL_SCH_Message._cont = ASN1Dict([
        ('message', _BCCH_DL_SCH_Message_message),
        ])
    BCCH_DL_SCH_Message._ext = None
    
    #-----< BCCH-DL-SCH-MessageType >-----#
    BCCH_DL_SCH_MessageType = CHOICE(name='BCCH-DL-SCH-MessageType', mode=MODE_TYPE)
    _BCCH_DL_SCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __BCCH_DL_SCH_MessageType_c1_systemInformation = SEQ(name='systemInformation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformation')))
    __BCCH_DL_SCH_MessageType_c1_systemInformationBlockType1 = SEQ(name='systemInformationBlockType1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType1')))
    _BCCH_DL_SCH_MessageType_c1._cont = ASN1Dict([
        ('systemInformation', __BCCH_DL_SCH_MessageType_c1_systemInformation),
        ('systemInformationBlockType1', __BCCH_DL_SCH_MessageType_c1_systemInformationBlockType1),
        ])
    _BCCH_DL_SCH_MessageType_c1._ext = None
    _BCCH_DL_SCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BCCH_DL_SCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _BCCH_DL_SCH_MessageType_messageClassExtension._ext = None
    BCCH_DL_SCH_MessageType._cont = ASN1Dict([
        ('c1', _BCCH_DL_SCH_MessageType_c1),
        ('messageClassExtension', _BCCH_DL_SCH_MessageType_messageClassExtension),
        ])
    BCCH_DL_SCH_MessageType._ext = None
    
    #-----< PCCH-Message >-----#
    PCCH_Message = SEQ(name='PCCH-Message', mode=MODE_TYPE)
    _PCCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PCCH-MessageType')))
    PCCH_Message._cont = ASN1Dict([
        ('message', _PCCH_Message_message),
        ])
    PCCH_Message._ext = None
    
    #-----< PCCH-MessageType >-----#
    PCCH_MessageType = CHOICE(name='PCCH-MessageType', mode=MODE_TYPE)
    _PCCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PCCH_MessageType_c1_paging = SEQ(name='paging', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Paging')))
    _PCCH_MessageType_c1._cont = ASN1Dict([
        ('paging', __PCCH_MessageType_c1_paging),
        ])
    _PCCH_MessageType_c1._ext = None
    _PCCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PCCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _PCCH_MessageType_messageClassExtension._ext = None
    PCCH_MessageType._cont = ASN1Dict([
        ('c1', _PCCH_MessageType_c1),
        ('messageClassExtension', _PCCH_MessageType_messageClassExtension),
        ])
    PCCH_MessageType._ext = None
    
    #-----< DL-CCCH-Message >-----#
    DL_CCCH_Message = SEQ(name='DL-CCCH-Message', mode=MODE_TYPE)
    _DL_CCCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DL-CCCH-MessageType')))
    DL_CCCH_Message._cont = ASN1Dict([
        ('message', _DL_CCCH_Message_message),
        ])
    DL_CCCH_Message._ext = None
    
    #-----< DL-CCCH-MessageType >-----#
    DL_CCCH_MessageType = CHOICE(name='DL-CCCH-MessageType', mode=MODE_TYPE)
    _DL_CCCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DL_CCCH_MessageType_c1_rrcConnectionReestablishment = SEQ(name='rrcConnectionReestablishment', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReestablishment')))
    __DL_CCCH_MessageType_c1_rrcConnectionReestablishmentReject = SEQ(name='rrcConnectionReestablishmentReject', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReestablishmentReject')))
    __DL_CCCH_MessageType_c1_rrcConnectionReject = SEQ(name='rrcConnectionReject', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReject')))
    __DL_CCCH_MessageType_c1_rrcConnectionSetup = SEQ(name='rrcConnectionSetup', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionSetup')))
    _DL_CCCH_MessageType_c1._cont = ASN1Dict([
        ('rrcConnectionReestablishment', __DL_CCCH_MessageType_c1_rrcConnectionReestablishment),
        ('rrcConnectionReestablishmentReject', __DL_CCCH_MessageType_c1_rrcConnectionReestablishmentReject),
        ('rrcConnectionReject', __DL_CCCH_MessageType_c1_rrcConnectionReject),
        ('rrcConnectionSetup', __DL_CCCH_MessageType_c1_rrcConnectionSetup),
        ])
    _DL_CCCH_MessageType_c1._ext = None
    _DL_CCCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DL_CCCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _DL_CCCH_MessageType_messageClassExtension._ext = None
    DL_CCCH_MessageType._cont = ASN1Dict([
        ('c1', _DL_CCCH_MessageType_c1),
        ('messageClassExtension', _DL_CCCH_MessageType_messageClassExtension),
        ])
    DL_CCCH_MessageType._ext = None
    
    #-----< DL-DCCH-Message >-----#
    DL_DCCH_Message = SEQ(name='DL-DCCH-Message', mode=MODE_TYPE)
    _DL_DCCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DL-DCCH-MessageType')))
    DL_DCCH_Message._cont = ASN1Dict([
        ('message', _DL_DCCH_Message_message),
        ])
    DL_DCCH_Message._ext = None
    
    #-----< DL-DCCH-MessageType >-----#
    DL_DCCH_MessageType = CHOICE(name='DL-DCCH-MessageType', mode=MODE_TYPE)
    _DL_DCCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DL_DCCH_MessageType_c1_csfbParametersResponseCDMA2000 = SEQ(name='csfbParametersResponseCDMA2000', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CSFBParametersResponseCDMA2000')))
    __DL_DCCH_MessageType_c1_dlInformationTransfer = SEQ(name='dlInformationTransfer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DLInformationTransfer')))
    __DL_DCCH_MessageType_c1_handoverFromEUTRAPreparationRequest = SEQ(name='handoverFromEUTRAPreparationRequest', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'HandoverFromEUTRAPreparationRequest')))
    __DL_DCCH_MessageType_c1_mobilityFromEUTRACommand = SEQ(name='mobilityFromEUTRACommand', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MobilityFromEUTRACommand')))
    __DL_DCCH_MessageType_c1_rrcConnectionReconfiguration = SEQ(name='rrcConnectionReconfiguration', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReconfiguration')))
    __DL_DCCH_MessageType_c1_rrcConnectionRelease = SEQ(name='rrcConnectionRelease', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionRelease')))
    __DL_DCCH_MessageType_c1_securityModeCommand = SEQ(name='securityModeCommand', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityModeCommand')))
    __DL_DCCH_MessageType_c1_ueCapabilityEnquiry = SEQ(name='ueCapabilityEnquiry', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UECapabilityEnquiry')))
    __DL_DCCH_MessageType_c1_counterCheck = SEQ(name='counterCheck', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CounterCheck')))
    __DL_DCCH_MessageType_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DL_DCCH_MessageType_c1._cont = ASN1Dict([
        ('csfbParametersResponseCDMA2000', __DL_DCCH_MessageType_c1_csfbParametersResponseCDMA2000),
        ('dlInformationTransfer', __DL_DCCH_MessageType_c1_dlInformationTransfer),
        ('handoverFromEUTRAPreparationRequest', __DL_DCCH_MessageType_c1_handoverFromEUTRAPreparationRequest),
        ('mobilityFromEUTRACommand', __DL_DCCH_MessageType_c1_mobilityFromEUTRACommand),
        ('rrcConnectionReconfiguration', __DL_DCCH_MessageType_c1_rrcConnectionReconfiguration),
        ('rrcConnectionRelease', __DL_DCCH_MessageType_c1_rrcConnectionRelease),
        ('securityModeCommand', __DL_DCCH_MessageType_c1_securityModeCommand),
        ('ueCapabilityEnquiry', __DL_DCCH_MessageType_c1_ueCapabilityEnquiry),
        ('counterCheck', __DL_DCCH_MessageType_c1_counterCheck),
        ('spare7', __DL_DCCH_MessageType_c1_spare7),
        ('spare6', __DL_DCCH_MessageType_c1_spare6),
        ('spare5', __DL_DCCH_MessageType_c1_spare5),
        ('spare4', __DL_DCCH_MessageType_c1_spare4),
        ('spare3', __DL_DCCH_MessageType_c1_spare3),
        ('spare2', __DL_DCCH_MessageType_c1_spare2),
        ('spare1', __DL_DCCH_MessageType_c1_spare1),
        ])
    _DL_DCCH_MessageType_c1._ext = None
    _DL_DCCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DL_DCCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _DL_DCCH_MessageType_messageClassExtension._ext = None
    DL_DCCH_MessageType._cont = ASN1Dict([
        ('c1', _DL_DCCH_MessageType_c1),
        ('messageClassExtension', _DL_DCCH_MessageType_messageClassExtension),
        ])
    DL_DCCH_MessageType._ext = None
    
    #-----< UL-CCCH-Message >-----#
    UL_CCCH_Message = SEQ(name='UL-CCCH-Message', mode=MODE_TYPE)
    _UL_CCCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UL-CCCH-MessageType')))
    UL_CCCH_Message._cont = ASN1Dict([
        ('message', _UL_CCCH_Message_message),
        ])
    UL_CCCH_Message._ext = None
    
    #-----< UL-CCCH-MessageType >-----#
    UL_CCCH_MessageType = CHOICE(name='UL-CCCH-MessageType', mode=MODE_TYPE)
    _UL_CCCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __UL_CCCH_MessageType_c1_rrcConnectionReestablishmentRequest = SEQ(name='rrcConnectionReestablishmentRequest', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReestablishmentRequest')))
    __UL_CCCH_MessageType_c1_rrcConnectionRequest = SEQ(name='rrcConnectionRequest', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionRequest')))
    _UL_CCCH_MessageType_c1._cont = ASN1Dict([
        ('rrcConnectionReestablishmentRequest', __UL_CCCH_MessageType_c1_rrcConnectionReestablishmentRequest),
        ('rrcConnectionRequest', __UL_CCCH_MessageType_c1_rrcConnectionRequest),
        ])
    _UL_CCCH_MessageType_c1._ext = None
    _UL_CCCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_CCCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _UL_CCCH_MessageType_messageClassExtension._ext = None
    UL_CCCH_MessageType._cont = ASN1Dict([
        ('c1', _UL_CCCH_MessageType_c1),
        ('messageClassExtension', _UL_CCCH_MessageType_messageClassExtension),
        ])
    UL_CCCH_MessageType._ext = None
    
    #-----< UL-DCCH-Message >-----#
    UL_DCCH_Message = SEQ(name='UL-DCCH-Message', mode=MODE_TYPE)
    _UL_DCCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UL-DCCH-MessageType')))
    UL_DCCH_Message._cont = ASN1Dict([
        ('message', _UL_DCCH_Message_message),
        ])
    UL_DCCH_Message._ext = None
    
    #-----< UL-DCCH-MessageType >-----#
    UL_DCCH_MessageType = CHOICE(name='UL-DCCH-MessageType', mode=MODE_TYPE)
    _UL_DCCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __UL_DCCH_MessageType_c1_csfbParametersRequestCDMA2000 = SEQ(name='csfbParametersRequestCDMA2000', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CSFBParametersRequestCDMA2000')))
    __UL_DCCH_MessageType_c1_measurementReport = SEQ(name='measurementReport', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasurementReport')))
    __UL_DCCH_MessageType_c1_rrcConnectionReconfigurationComplete = SEQ(name='rrcConnectionReconfigurationComplete', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReconfigurationComplete')))
    __UL_DCCH_MessageType_c1_rrcConnectionReestablishmentComplete = SEQ(name='rrcConnectionReestablishmentComplete', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReestablishmentComplete')))
    __UL_DCCH_MessageType_c1_rrcConnectionSetupComplete = SEQ(name='rrcConnectionSetupComplete', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionSetupComplete')))
    __UL_DCCH_MessageType_c1_securityModeComplete = SEQ(name='securityModeComplete', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityModeComplete')))
    __UL_DCCH_MessageType_c1_securityModeFailure = SEQ(name='securityModeFailure', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityModeFailure')))
    __UL_DCCH_MessageType_c1_ueCapabilityInformation = SEQ(name='ueCapabilityInformation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UECapabilityInformation')))
    __UL_DCCH_MessageType_c1_ulHandoverPreparationTransfer = SEQ(name='ulHandoverPreparationTransfer', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ULHandoverPreparationTransfer')))
    __UL_DCCH_MessageType_c1_ulInformationTransfer = SEQ(name='ulInformationTransfer', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ULInformationTransfer')))
    __UL_DCCH_MessageType_c1_counterCheckResponse = SEQ(name='counterCheckResponse', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CounterCheckResponse')))
    __UL_DCCH_MessageType_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_DCCH_MessageType_c1._cont = ASN1Dict([
        ('csfbParametersRequestCDMA2000', __UL_DCCH_MessageType_c1_csfbParametersRequestCDMA2000),
        ('measurementReport', __UL_DCCH_MessageType_c1_measurementReport),
        ('rrcConnectionReconfigurationComplete', __UL_DCCH_MessageType_c1_rrcConnectionReconfigurationComplete),
        ('rrcConnectionReestablishmentComplete', __UL_DCCH_MessageType_c1_rrcConnectionReestablishmentComplete),
        ('rrcConnectionSetupComplete', __UL_DCCH_MessageType_c1_rrcConnectionSetupComplete),
        ('securityModeComplete', __UL_DCCH_MessageType_c1_securityModeComplete),
        ('securityModeFailure', __UL_DCCH_MessageType_c1_securityModeFailure),
        ('ueCapabilityInformation', __UL_DCCH_MessageType_c1_ueCapabilityInformation),
        ('ulHandoverPreparationTransfer', __UL_DCCH_MessageType_c1_ulHandoverPreparationTransfer),
        ('ulInformationTransfer', __UL_DCCH_MessageType_c1_ulInformationTransfer),
        ('counterCheckResponse', __UL_DCCH_MessageType_c1_counterCheckResponse),
        ('spare5', __UL_DCCH_MessageType_c1_spare5),
        ('spare4', __UL_DCCH_MessageType_c1_spare4),
        ('spare3', __UL_DCCH_MessageType_c1_spare3),
        ('spare2', __UL_DCCH_MessageType_c1_spare2),
        ('spare1', __UL_DCCH_MessageType_c1_spare1),
        ])
    _UL_DCCH_MessageType_c1._ext = None
    _UL_DCCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_DCCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _UL_DCCH_MessageType_messageClassExtension._ext = None
    UL_DCCH_MessageType._cont = ASN1Dict([
        ('c1', _UL_DCCH_MessageType_c1),
        ('messageClassExtension', _UL_DCCH_MessageType_messageClassExtension),
        ])
    UL_DCCH_MessageType._ext = None
    
    #-----< CounterCheck >-----#
    CounterCheck = SEQ(name='CounterCheck', mode=MODE_TYPE)
    _CounterCheck_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _CounterCheck_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CounterCheck_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CounterCheck_criticalExtensions_c1_counterCheck_r8 = SEQ(name='counterCheck-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CounterCheck-r8-IEs')))
    ___CounterCheck_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CounterCheck_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CounterCheck_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CounterCheck_criticalExtensions_c1._cont = ASN1Dict([
        ('counterCheck-r8', ___CounterCheck_criticalExtensions_c1_counterCheck_r8),
        ('spare3', ___CounterCheck_criticalExtensions_c1_spare3),
        ('spare2', ___CounterCheck_criticalExtensions_c1_spare2),
        ('spare1', ___CounterCheck_criticalExtensions_c1_spare1),
        ])
    __CounterCheck_criticalExtensions_c1._ext = None
    __CounterCheck_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CounterCheck_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __CounterCheck_criticalExtensions_criticalExtensionsFuture._ext = None
    _CounterCheck_criticalExtensions._cont = ASN1Dict([
        ('c1', __CounterCheck_criticalExtensions_c1),
        ('criticalExtensionsFuture', __CounterCheck_criticalExtensions_criticalExtensionsFuture),
        ])
    _CounterCheck_criticalExtensions._ext = None
    CounterCheck._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _CounterCheck_rrc_TransactionIdentifier),
        ('criticalExtensions', _CounterCheck_criticalExtensions),
        ])
    CounterCheck._ext = None
    
    #-----< CounterCheck-r8-IEs >-----#
    CounterCheck_r8_IEs = SEQ(name='CounterCheck-r8-IEs', mode=MODE_TYPE)
    _CounterCheck_r8_IEs_drb_CountMSB_InfoList = SEQ_OF(name='drb-CountMSB-InfoList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRB-CountMSB-InfoList')))
    _CounterCheck_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CounterCheck_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _CounterCheck_r8_IEs_nonCriticalExtension._ext = None
    CounterCheck_r8_IEs._cont = ASN1Dict([
        ('drb-CountMSB-InfoList', _CounterCheck_r8_IEs_drb_CountMSB_InfoList),
        ('nonCriticalExtension', _CounterCheck_r8_IEs_nonCriticalExtension),
        ])
    CounterCheck_r8_IEs._ext = None
    
    #-----< DRB-CountMSB-InfoList >-----#
    DRB_CountMSB_InfoList = SEQ_OF(name='DRB-CountMSB-InfoList', mode=MODE_TYPE)
    _DRB_CountMSB_InfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRB-CountMSB-Info')))
    DRB_CountMSB_InfoList._cont = _DRB_CountMSB_InfoList__item_
    DRB_CountMSB_InfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=11)], ev=None, er=[])
    
    #-----< DRB-CountMSB-Info >-----#
    DRB_CountMSB_Info = SEQ(name='DRB-CountMSB-Info', mode=MODE_TYPE)
    _DRB_CountMSB_Info_drb_Identity = INT(name='drb-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRB-Identity')))
    _DRB_CountMSB_Info_countMSB_Uplink = INT(name='countMSB-Uplink', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DRB_CountMSB_Info_countMSB_Uplink._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=33554431)], ev=None, er=[])
    _DRB_CountMSB_Info_countMSB_Downlink = INT(name='countMSB-Downlink', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DRB_CountMSB_Info_countMSB_Downlink._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=33554431)], ev=None, er=[])
    DRB_CountMSB_Info._cont = ASN1Dict([
        ('drb-Identity', _DRB_CountMSB_Info_drb_Identity),
        ('countMSB-Uplink', _DRB_CountMSB_Info_countMSB_Uplink),
        ('countMSB-Downlink', _DRB_CountMSB_Info_countMSB_Downlink),
        ])
    DRB_CountMSB_Info._ext = None
    
    #-----< CounterCheckResponse >-----#
    CounterCheckResponse = SEQ(name='CounterCheckResponse', mode=MODE_TYPE)
    _CounterCheckResponse_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _CounterCheckResponse_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CounterCheckResponse_criticalExtensions_counterCheckResponse_r8 = SEQ(name='counterCheckResponse-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CounterCheckResponse-r8-IEs')))
    __CounterCheckResponse_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CounterCheckResponse_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __CounterCheckResponse_criticalExtensions_criticalExtensionsFuture._ext = None
    _CounterCheckResponse_criticalExtensions._cont = ASN1Dict([
        ('counterCheckResponse-r8', __CounterCheckResponse_criticalExtensions_counterCheckResponse_r8),
        ('criticalExtensionsFuture', __CounterCheckResponse_criticalExtensions_criticalExtensionsFuture),
        ])
    _CounterCheckResponse_criticalExtensions._ext = None
    CounterCheckResponse._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _CounterCheckResponse_rrc_TransactionIdentifier),
        ('criticalExtensions', _CounterCheckResponse_criticalExtensions),
        ])
    CounterCheckResponse._ext = None
    
    #-----< CounterCheckResponse-r8-IEs >-----#
    CounterCheckResponse_r8_IEs = SEQ(name='CounterCheckResponse-r8-IEs', mode=MODE_TYPE)
    _CounterCheckResponse_r8_IEs_drb_CountInfoList = SEQ_OF(name='drb-CountInfoList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRB-CountInfoList')))
    _CounterCheckResponse_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CounterCheckResponse_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _CounterCheckResponse_r8_IEs_nonCriticalExtension._ext = None
    CounterCheckResponse_r8_IEs._cont = ASN1Dict([
        ('drb-CountInfoList', _CounterCheckResponse_r8_IEs_drb_CountInfoList),
        ('nonCriticalExtension', _CounterCheckResponse_r8_IEs_nonCriticalExtension),
        ])
    CounterCheckResponse_r8_IEs._ext = None
    
    #-----< DRB-CountInfoList >-----#
    DRB_CountInfoList = SEQ_OF(name='DRB-CountInfoList', mode=MODE_TYPE)
    _DRB_CountInfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRB-CountInfo')))
    DRB_CountInfoList._cont = _DRB_CountInfoList__item_
    DRB_CountInfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=11)], ev=None, er=[])
    
    #-----< DRB-CountInfo >-----#
    DRB_CountInfo = SEQ(name='DRB-CountInfo', mode=MODE_TYPE)
    _DRB_CountInfo_drb_Identity = INT(name='drb-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRB-Identity')))
    _DRB_CountInfo_count_Uplink = INT(name='count-Uplink', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DRB_CountInfo_count_Uplink._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    _DRB_CountInfo_count_Downlink = INT(name='count-Downlink', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DRB_CountInfo_count_Downlink._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    DRB_CountInfo._cont = ASN1Dict([
        ('drb-Identity', _DRB_CountInfo_drb_Identity),
        ('count-Uplink', _DRB_CountInfo_count_Uplink),
        ('count-Downlink', _DRB_CountInfo_count_Downlink),
        ])
    DRB_CountInfo._ext = None
    
    #-----< CSFBParametersRequestCDMA2000 >-----#
    CSFBParametersRequestCDMA2000 = SEQ(name='CSFBParametersRequestCDMA2000', mode=MODE_TYPE)
    _CSFBParametersRequestCDMA2000_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CSFBParametersRequestCDMA2000_criticalExtensions_csfbParametersRequestCDMA2000_r8 = SEQ(name='csfbParametersRequestCDMA2000-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CSFBParametersRequestCDMA2000-r8-IEs')))
    __CSFBParametersRequestCDMA2000_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSFBParametersRequestCDMA2000_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __CSFBParametersRequestCDMA2000_criticalExtensions_criticalExtensionsFuture._ext = None
    _CSFBParametersRequestCDMA2000_criticalExtensions._cont = ASN1Dict([
        ('csfbParametersRequestCDMA2000-r8', __CSFBParametersRequestCDMA2000_criticalExtensions_csfbParametersRequestCDMA2000_r8),
        ('criticalExtensionsFuture', __CSFBParametersRequestCDMA2000_criticalExtensions_criticalExtensionsFuture),
        ])
    _CSFBParametersRequestCDMA2000_criticalExtensions._ext = None
    CSFBParametersRequestCDMA2000._cont = ASN1Dict([
        ('criticalExtensions', _CSFBParametersRequestCDMA2000_criticalExtensions),
        ])
    CSFBParametersRequestCDMA2000._ext = None
    
    #-----< CSFBParametersRequestCDMA2000-r8-IEs >-----#
    CSFBParametersRequestCDMA2000_r8_IEs = SEQ(name='CSFBParametersRequestCDMA2000-r8-IEs', mode=MODE_TYPE)
    _CSFBParametersRequestCDMA2000_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CSFBParametersRequestCDMA2000_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _CSFBParametersRequestCDMA2000_r8_IEs_nonCriticalExtension._ext = None
    CSFBParametersRequestCDMA2000_r8_IEs._cont = ASN1Dict([
        ('nonCriticalExtension', _CSFBParametersRequestCDMA2000_r8_IEs_nonCriticalExtension),
        ])
    CSFBParametersRequestCDMA2000_r8_IEs._ext = None
    
    #-----< CSFBParametersResponseCDMA2000 >-----#
    CSFBParametersResponseCDMA2000 = SEQ(name='CSFBParametersResponseCDMA2000', mode=MODE_TYPE)
    _CSFBParametersResponseCDMA2000_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _CSFBParametersResponseCDMA2000_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CSFBParametersResponseCDMA2000_criticalExtensions_csfbParametersResponseCDMA2000_r8 = SEQ(name='csfbParametersResponseCDMA2000-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CSFBParametersResponseCDMA2000-r8-IEs')))
    __CSFBParametersResponseCDMA2000_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSFBParametersResponseCDMA2000_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __CSFBParametersResponseCDMA2000_criticalExtensions_criticalExtensionsFuture._ext = None
    _CSFBParametersResponseCDMA2000_criticalExtensions._cont = ASN1Dict([
        ('csfbParametersResponseCDMA2000-r8', __CSFBParametersResponseCDMA2000_criticalExtensions_csfbParametersResponseCDMA2000_r8),
        ('criticalExtensionsFuture', __CSFBParametersResponseCDMA2000_criticalExtensions_criticalExtensionsFuture),
        ])
    _CSFBParametersResponseCDMA2000_criticalExtensions._ext = None
    CSFBParametersResponseCDMA2000._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _CSFBParametersResponseCDMA2000_rrc_TransactionIdentifier),
        ('criticalExtensions', _CSFBParametersResponseCDMA2000_criticalExtensions),
        ])
    CSFBParametersResponseCDMA2000._ext = None
    
    #-----< CSFBParametersResponseCDMA2000-r8-IEs >-----#
    CSFBParametersResponseCDMA2000_r8_IEs = SEQ(name='CSFBParametersResponseCDMA2000-r8-IEs', mode=MODE_TYPE)
    _CSFBParametersResponseCDMA2000_r8_IEs_rand = BIT_STR(name='rand', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RAND-CDMA2000')))
    _CSFBParametersResponseCDMA2000_r8_IEs_mobilityParameters = OCT_STR(name='mobilityParameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MobilityParametersCDMA2000')))
    _CSFBParametersResponseCDMA2000_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CSFBParametersResponseCDMA2000_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _CSFBParametersResponseCDMA2000_r8_IEs_nonCriticalExtension._ext = None
    CSFBParametersResponseCDMA2000_r8_IEs._cont = ASN1Dict([
        ('rand', _CSFBParametersResponseCDMA2000_r8_IEs_rand),
        ('mobilityParameters', _CSFBParametersResponseCDMA2000_r8_IEs_mobilityParameters),
        ('nonCriticalExtension', _CSFBParametersResponseCDMA2000_r8_IEs_nonCriticalExtension),
        ])
    CSFBParametersResponseCDMA2000_r8_IEs._ext = None
    
    #-----< DLInformationTransfer >-----#
    DLInformationTransfer = SEQ(name='DLInformationTransfer', mode=MODE_TYPE)
    _DLInformationTransfer_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _DLInformationTransfer_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DLInformationTransfer_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___DLInformationTransfer_criticalExtensions_c1_dlInformationTransfer_r8 = SEQ(name='dlInformationTransfer-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DLInformationTransfer-r8-IEs')))
    ___DLInformationTransfer_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DLInformationTransfer_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DLInformationTransfer_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DLInformationTransfer_criticalExtensions_c1._cont = ASN1Dict([
        ('dlInformationTransfer-r8', ___DLInformationTransfer_criticalExtensions_c1_dlInformationTransfer_r8),
        ('spare3', ___DLInformationTransfer_criticalExtensions_c1_spare3),
        ('spare2', ___DLInformationTransfer_criticalExtensions_c1_spare2),
        ('spare1', ___DLInformationTransfer_criticalExtensions_c1_spare1),
        ])
    __DLInformationTransfer_criticalExtensions_c1._ext = None
    __DLInformationTransfer_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DLInformationTransfer_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __DLInformationTransfer_criticalExtensions_criticalExtensionsFuture._ext = None
    _DLInformationTransfer_criticalExtensions._cont = ASN1Dict([
        ('c1', __DLInformationTransfer_criticalExtensions_c1),
        ('criticalExtensionsFuture', __DLInformationTransfer_criticalExtensions_criticalExtensionsFuture),
        ])
    _DLInformationTransfer_criticalExtensions._ext = None
    DLInformationTransfer._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _DLInformationTransfer_rrc_TransactionIdentifier),
        ('criticalExtensions', _DLInformationTransfer_criticalExtensions),
        ])
    DLInformationTransfer._ext = None
    
    #-----< DLInformationTransfer-r8-IEs >-----#
    DLInformationTransfer_r8_IEs = SEQ(name='DLInformationTransfer-r8-IEs', mode=MODE_TYPE)
    _DLInformationTransfer_r8_IEs_dedicatedInfoType = CHOICE(name='dedicatedInfoType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DLInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoNAS = OCT_STR(name='dedicatedInfoNAS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DedicatedInfoNAS')))
    __DLInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_1XRTT = OCT_STR(name='dedicatedInfoCDMA2000-1XRTT', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DedicatedInfoCDMA2000')))
    __DLInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_HRPD = OCT_STR(name='dedicatedInfoCDMA2000-HRPD', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DedicatedInfoCDMA2000')))
    _DLInformationTransfer_r8_IEs_dedicatedInfoType._cont = ASN1Dict([
        ('dedicatedInfoNAS', __DLInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoNAS),
        ('dedicatedInfoCDMA2000-1XRTT', __DLInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_1XRTT),
        ('dedicatedInfoCDMA2000-HRPD', __DLInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_HRPD),
        ])
    _DLInformationTransfer_r8_IEs_dedicatedInfoType._ext = None
    _DLInformationTransfer_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DLInformationTransfer_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _DLInformationTransfer_r8_IEs_nonCriticalExtension._ext = None
    DLInformationTransfer_r8_IEs._cont = ASN1Dict([
        ('dedicatedInfoType', _DLInformationTransfer_r8_IEs_dedicatedInfoType),
        ('nonCriticalExtension', _DLInformationTransfer_r8_IEs_nonCriticalExtension),
        ])
    DLInformationTransfer_r8_IEs._ext = None
    
    #-----< HandoverFromEUTRAPreparationRequest >-----#
    HandoverFromEUTRAPreparationRequest = SEQ(name='HandoverFromEUTRAPreparationRequest', mode=MODE_TYPE)
    _HandoverFromEUTRAPreparationRequest_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _HandoverFromEUTRAPreparationRequest_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __HandoverFromEUTRAPreparationRequest_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_handoverFromEUTRAPreparationRequest_r8 = SEQ(name='handoverFromEUTRAPreparationRequest-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'HandoverFromEUTRAPreparationRequest-r8-IEs')))
    ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverFromEUTRAPreparationRequest_criticalExtensions_c1._cont = ASN1Dict([
        ('handoverFromEUTRAPreparationRequest-r8', ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_handoverFromEUTRAPreparationRequest_r8),
        ('spare3', ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_spare3),
        ('spare2', ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_spare2),
        ('spare1', ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_spare1),
        ])
    __HandoverFromEUTRAPreparationRequest_criticalExtensions_c1._ext = None
    __HandoverFromEUTRAPreparationRequest_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverFromEUTRAPreparationRequest_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __HandoverFromEUTRAPreparationRequest_criticalExtensions_criticalExtensionsFuture._ext = None
    _HandoverFromEUTRAPreparationRequest_criticalExtensions._cont = ASN1Dict([
        ('c1', __HandoverFromEUTRAPreparationRequest_criticalExtensions_c1),
        ('criticalExtensionsFuture', __HandoverFromEUTRAPreparationRequest_criticalExtensions_criticalExtensionsFuture),
        ])
    _HandoverFromEUTRAPreparationRequest_criticalExtensions._ext = None
    HandoverFromEUTRAPreparationRequest._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _HandoverFromEUTRAPreparationRequest_rrc_TransactionIdentifier),
        ('criticalExtensions', _HandoverFromEUTRAPreparationRequest_criticalExtensions),
        ])
    HandoverFromEUTRAPreparationRequest._ext = None
    
    #-----< HandoverFromEUTRAPreparationRequest-r8-IEs >-----#
    HandoverFromEUTRAPreparationRequest_r8_IEs = SEQ(name='HandoverFromEUTRAPreparationRequest-r8-IEs', mode=MODE_TYPE)
    _HandoverFromEUTRAPreparationRequest_r8_IEs_cdma2000_Type = ENUM(name='cdma2000-Type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CDMA2000-Type')))
    _HandoverFromEUTRAPreparationRequest_r8_IEs_rand = BIT_STR(name='rand', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RAND-CDMA2000')), opt=True)
    _HandoverFromEUTRAPreparationRequest_r8_IEs_mobilityParameters = OCT_STR(name='mobilityParameters', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MobilityParametersCDMA2000')), opt=True)
    _HandoverFromEUTRAPreparationRequest_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HandoverFromEUTRAPreparationRequest_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _HandoverFromEUTRAPreparationRequest_r8_IEs_nonCriticalExtension._ext = None
    HandoverFromEUTRAPreparationRequest_r8_IEs._cont = ASN1Dict([
        ('cdma2000-Type', _HandoverFromEUTRAPreparationRequest_r8_IEs_cdma2000_Type),
        ('rand', _HandoverFromEUTRAPreparationRequest_r8_IEs_rand),
        ('mobilityParameters', _HandoverFromEUTRAPreparationRequest_r8_IEs_mobilityParameters),
        ('nonCriticalExtension', _HandoverFromEUTRAPreparationRequest_r8_IEs_nonCriticalExtension),
        ])
    HandoverFromEUTRAPreparationRequest_r8_IEs._ext = None
    
    #-----< MasterInformationBlock >-----#
    MasterInformationBlock = SEQ(name='MasterInformationBlock', mode=MODE_TYPE)
    _MasterInformationBlock_dl_Bandwidth = ENUM(name='dl-Bandwidth', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MasterInformationBlock_dl_Bandwidth._cont = ASN1Dict([('n6', 0), ('n15', 1), ('n25', 2), ('n50', 3), ('n75', 4), ('n100', 5)])
    _MasterInformationBlock_dl_Bandwidth._ext = None
    _MasterInformationBlock_phich_Config = SEQ(name='phich-Config', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PHICH-Config')))
    _MasterInformationBlock_systemFrameNumber = BIT_STR(name='systemFrameNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MasterInformationBlock_systemFrameNumber._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _MasterInformationBlock_spare = BIT_STR(name='spare', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MasterInformationBlock_spare._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    MasterInformationBlock._cont = ASN1Dict([
        ('dl-Bandwidth', _MasterInformationBlock_dl_Bandwidth),
        ('phich-Config', _MasterInformationBlock_phich_Config),
        ('systemFrameNumber', _MasterInformationBlock_systemFrameNumber),
        ('spare', _MasterInformationBlock_spare),
        ])
    MasterInformationBlock._ext = None
    
    #-----< MeasurementReport >-----#
    MeasurementReport = SEQ(name='MeasurementReport', mode=MODE_TYPE)
    _MeasurementReport_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __MeasurementReport_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___MeasurementReport_criticalExtensions_c1_measurementReport_r8 = SEQ(name='measurementReport-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasurementReport-r8-IEs')))
    ___MeasurementReport_criticalExtensions_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasurementReport_criticalExtensions_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasurementReport_criticalExtensions_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasurementReport_criticalExtensions_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasurementReport_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasurementReport_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasurementReport_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasurementReport_criticalExtensions_c1._cont = ASN1Dict([
        ('measurementReport-r8', ___MeasurementReport_criticalExtensions_c1_measurementReport_r8),
        ('spare7', ___MeasurementReport_criticalExtensions_c1_spare7),
        ('spare6', ___MeasurementReport_criticalExtensions_c1_spare6),
        ('spare5', ___MeasurementReport_criticalExtensions_c1_spare5),
        ('spare4', ___MeasurementReport_criticalExtensions_c1_spare4),
        ('spare3', ___MeasurementReport_criticalExtensions_c1_spare3),
        ('spare2', ___MeasurementReport_criticalExtensions_c1_spare2),
        ('spare1', ___MeasurementReport_criticalExtensions_c1_spare1),
        ])
    __MeasurementReport_criticalExtensions_c1._ext = None
    __MeasurementReport_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasurementReport_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __MeasurementReport_criticalExtensions_criticalExtensionsFuture._ext = None
    _MeasurementReport_criticalExtensions._cont = ASN1Dict([
        ('c1', __MeasurementReport_criticalExtensions_c1),
        ('criticalExtensionsFuture', __MeasurementReport_criticalExtensions_criticalExtensionsFuture),
        ])
    _MeasurementReport_criticalExtensions._ext = None
    MeasurementReport._cont = ASN1Dict([
        ('criticalExtensions', _MeasurementReport_criticalExtensions),
        ])
    MeasurementReport._ext = None
    
    #-----< MeasurementReport-r8-IEs >-----#
    MeasurementReport_r8_IEs = SEQ(name='MeasurementReport-r8-IEs', mode=MODE_TYPE)
    _MeasurementReport_r8_IEs_measResults = SEQ(name='measResults', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasResults')))
    _MeasurementReport_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasurementReport_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _MeasurementReport_r8_IEs_nonCriticalExtension._ext = None
    MeasurementReport_r8_IEs._cont = ASN1Dict([
        ('measResults', _MeasurementReport_r8_IEs_measResults),
        ('nonCriticalExtension', _MeasurementReport_r8_IEs_nonCriticalExtension),
        ])
    MeasurementReport_r8_IEs._ext = None
    
    #-----< MobilityFromEUTRACommand >-----#
    MobilityFromEUTRACommand = SEQ(name='MobilityFromEUTRACommand', mode=MODE_TYPE)
    _MobilityFromEUTRACommand_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _MobilityFromEUTRACommand_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __MobilityFromEUTRACommand_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___MobilityFromEUTRACommand_criticalExtensions_c1_mobilityFromEUTRACommand_r8 = SEQ(name='mobilityFromEUTRACommand-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MobilityFromEUTRACommand-r8-IEs')))
    ___MobilityFromEUTRACommand_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MobilityFromEUTRACommand_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MobilityFromEUTRACommand_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MobilityFromEUTRACommand_criticalExtensions_c1._cont = ASN1Dict([
        ('mobilityFromEUTRACommand-r8', ___MobilityFromEUTRACommand_criticalExtensions_c1_mobilityFromEUTRACommand_r8),
        ('spare3', ___MobilityFromEUTRACommand_criticalExtensions_c1_spare3),
        ('spare2', ___MobilityFromEUTRACommand_criticalExtensions_c1_spare2),
        ('spare1', ___MobilityFromEUTRACommand_criticalExtensions_c1_spare1),
        ])
    __MobilityFromEUTRACommand_criticalExtensions_c1._ext = None
    __MobilityFromEUTRACommand_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MobilityFromEUTRACommand_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __MobilityFromEUTRACommand_criticalExtensions_criticalExtensionsFuture._ext = None
    _MobilityFromEUTRACommand_criticalExtensions._cont = ASN1Dict([
        ('c1', __MobilityFromEUTRACommand_criticalExtensions_c1),
        ('criticalExtensionsFuture', __MobilityFromEUTRACommand_criticalExtensions_criticalExtensionsFuture),
        ])
    _MobilityFromEUTRACommand_criticalExtensions._ext = None
    MobilityFromEUTRACommand._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _MobilityFromEUTRACommand_rrc_TransactionIdentifier),
        ('criticalExtensions', _MobilityFromEUTRACommand_criticalExtensions),
        ])
    MobilityFromEUTRACommand._ext = None
    
    #-----< MobilityFromEUTRACommand-r8-IEs >-----#
    MobilityFromEUTRACommand_r8_IEs = SEQ(name='MobilityFromEUTRACommand-r8-IEs', mode=MODE_TYPE)
    _MobilityFromEUTRACommand_r8_IEs_cs_FallbackIndicator = BOOL(name='cs-FallbackIndicator', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MobilityFromEUTRACommand_r8_IEs_purpose = CHOICE(name='purpose', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __MobilityFromEUTRACommand_r8_IEs_purpose_handover = SEQ(name='handover', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Handover')))
    __MobilityFromEUTRACommand_r8_IEs_purpose_cellChangeOrder = SEQ(name='cellChangeOrder', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellChangeOrder')))
    _MobilityFromEUTRACommand_r8_IEs_purpose._cont = ASN1Dict([
        ('handover', __MobilityFromEUTRACommand_r8_IEs_purpose_handover),
        ('cellChangeOrder', __MobilityFromEUTRACommand_r8_IEs_purpose_cellChangeOrder),
        ])
    _MobilityFromEUTRACommand_r8_IEs_purpose._ext = None
    _MobilityFromEUTRACommand_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MobilityFromEUTRACommand_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _MobilityFromEUTRACommand_r8_IEs_nonCriticalExtension._ext = None
    MobilityFromEUTRACommand_r8_IEs._cont = ASN1Dict([
        ('cs-FallbackIndicator', _MobilityFromEUTRACommand_r8_IEs_cs_FallbackIndicator),
        ('purpose', _MobilityFromEUTRACommand_r8_IEs_purpose),
        ('nonCriticalExtension', _MobilityFromEUTRACommand_r8_IEs_nonCriticalExtension),
        ])
    MobilityFromEUTRACommand_r8_IEs._ext = None
    
    #-----< Handover >-----#
    Handover = SEQ(name='Handover', mode=MODE_TYPE)
    _Handover_targetRAT_Type = ENUM(name='targetRAT-Type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Handover_targetRAT_Type._cont = ASN1Dict([('utra', 0), ('geran', 1), ('cdma2000-1XRTT', 2), ('cdma2000-HRPD', 3), ('spare4', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    _Handover_targetRAT_Type._ext = []
    _Handover_targetRAT_MessageContainer = OCT_STR(name='targetRAT-MessageContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Handover_nas_SecurityParamFromEUTRA = OCT_STR(name='nas-SecurityParamFromEUTRA', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Handover_nas_SecurityParamFromEUTRA._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Handover_systemInformation = CHOICE(name='systemInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SI-OrPSI-GERAN')), opt=True)
    Handover._cont = ASN1Dict([
        ('targetRAT-Type', _Handover_targetRAT_Type),
        ('targetRAT-MessageContainer', _Handover_targetRAT_MessageContainer),
        ('nas-SecurityParamFromEUTRA', _Handover_nas_SecurityParamFromEUTRA),
        ('systemInformation', _Handover_systemInformation),
        ])
    Handover._ext = None
    
    #-----< CellChangeOrder >-----#
    CellChangeOrder = SEQ(name='CellChangeOrder', mode=MODE_TYPE)
    _CellChangeOrder_t304 = ENUM(name='t304', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CellChangeOrder_t304._cont = ASN1Dict([('ms100', 0), ('ms200', 1), ('ms500', 2), ('ms1000', 3), ('ms2000', 4), ('ms4000', 5), ('ms8000', 6), ('spare1', 7)])
    _CellChangeOrder_t304._ext = None
    _CellChangeOrder_targetRAT_Type = CHOICE(name='targetRAT-Type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CellChangeOrder_targetRAT_Type_geran = SEQ(name='geran', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CellChangeOrder_targetRAT_Type_geran_physCellId = SEQ(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdGERAN')))
    ___CellChangeOrder_targetRAT_Type_geran_carrierFreq = SEQ(name='carrierFreq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqGERAN')))
    ___CellChangeOrder_targetRAT_Type_geran_networkControlOrder = BIT_STR(name='networkControlOrder', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___CellChangeOrder_targetRAT_Type_geran_networkControlOrder._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    ___CellChangeOrder_targetRAT_Type_geran_systemInformation = CHOICE(name='systemInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SI-OrPSI-GERAN')), opt=True)
    __CellChangeOrder_targetRAT_Type_geran._cont = ASN1Dict([
        ('physCellId', ___CellChangeOrder_targetRAT_Type_geran_physCellId),
        ('carrierFreq', ___CellChangeOrder_targetRAT_Type_geran_carrierFreq),
        ('networkControlOrder', ___CellChangeOrder_targetRAT_Type_geran_networkControlOrder),
        ('systemInformation', ___CellChangeOrder_targetRAT_Type_geran_systemInformation),
        ])
    __CellChangeOrder_targetRAT_Type_geran._ext = None
    _CellChangeOrder_targetRAT_Type._cont = ASN1Dict([
        ('geran', __CellChangeOrder_targetRAT_Type_geran),
        ])
    _CellChangeOrder_targetRAT_Type._ext = []
    CellChangeOrder._cont = ASN1Dict([
        ('t304', _CellChangeOrder_t304),
        ('targetRAT-Type', _CellChangeOrder_targetRAT_Type),
        ])
    CellChangeOrder._ext = None
    
    #-----< SI-OrPSI-GERAN >-----#
    SI_OrPSI_GERAN = CHOICE(name='SI-OrPSI-GERAN', mode=MODE_TYPE)
    _SI_OrPSI_GERAN_si = SEQ_OF(name='si', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInfoListGERAN')))
    _SI_OrPSI_GERAN_psi = SEQ_OF(name='psi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInfoListGERAN')))
    SI_OrPSI_GERAN._cont = ASN1Dict([
        ('si', _SI_OrPSI_GERAN_si),
        ('psi', _SI_OrPSI_GERAN_psi),
        ])
    SI_OrPSI_GERAN._ext = None
    
    #-----< SystemInfoListGERAN >-----#
    SystemInfoListGERAN = SEQ_OF(name='SystemInfoListGERAN', mode=MODE_TYPE)
    _SystemInfoListGERAN__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _SystemInfoListGERAN__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=23)], ev=None, er=[])
    SystemInfoListGERAN._cont = _SystemInfoListGERAN__item_
    SystemInfoListGERAN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< Paging >-----#
    Paging = SEQ(name='Paging', mode=MODE_TYPE)
    _Paging_pagingRecordList = SEQ_OF(name='pagingRecordList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PagingRecordList')), opt=True)
    _Paging_systemInfoModification = ENUM(name='systemInfoModification', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Paging_systemInfoModification._cont = ASN1Dict([('true', 0)])
    _Paging_systemInfoModification._ext = None
    _Paging_etws_Indication = ENUM(name='etws-Indication', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Paging_etws_Indication._cont = ASN1Dict([('true', 0)])
    _Paging_etws_Indication._ext = None
    _Paging_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Paging_nonCriticalExtension._cont = ASN1Dict([
        ])
    _Paging_nonCriticalExtension._ext = None
    Paging._cont = ASN1Dict([
        ('pagingRecordList', _Paging_pagingRecordList),
        ('systemInfoModification', _Paging_systemInfoModification),
        ('etws-Indication', _Paging_etws_Indication),
        ('nonCriticalExtension', _Paging_nonCriticalExtension),
        ])
    Paging._ext = None
    
    #-----< PagingRecordList >-----#
    PagingRecordList = SEQ_OF(name='PagingRecordList', mode=MODE_TYPE)
    _PagingRecordList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PagingRecord')))
    PagingRecordList._cont = _PagingRecordList__item_
    PagingRecordList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< PagingRecord >-----#
    PagingRecord = SEQ(name='PagingRecord', mode=MODE_TYPE)
    _PagingRecord_ue_Identity = CHOICE(name='ue-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PagingUE-Identity')))
    _PagingRecord_cn_Domain = ENUM(name='cn-Domain', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PagingRecord_cn_Domain._cont = ASN1Dict([('ps', 0), ('cs', 1)])
    _PagingRecord_cn_Domain._ext = None
    PagingRecord._cont = ASN1Dict([
        ('ue-Identity', _PagingRecord_ue_Identity),
        ('cn-Domain', _PagingRecord_cn_Domain),
        ])
    PagingRecord._ext = []
    
    #-----< PagingUE-Identity >-----#
    PagingUE_Identity = CHOICE(name='PagingUE-Identity', mode=MODE_TYPE)
    _PagingUE_Identity_s_TMSI = SEQ(name='s-TMSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'S-TMSI')))
    _PagingUE_Identity_imsi = SEQ_OF(name='imsi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IMSI')))
    PagingUE_Identity._cont = ASN1Dict([
        ('s-TMSI', _PagingUE_Identity_s_TMSI),
        ('imsi', _PagingUE_Identity_imsi),
        ])
    PagingUE_Identity._ext = []
    
    #-----< IMSI >-----#
    IMSI = SEQ_OF(name='IMSI', mode=MODE_TYPE)
    _IMSI__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IMSI-Digit')))
    IMSI._cont = _IMSI__item_
    IMSI._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=6, ub=21)], ev=None, er=[])
    
    #-----< IMSI-Digit >-----#
    IMSI_Digit = INT(name='IMSI-Digit', mode=MODE_TYPE)
    IMSI_Digit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    
    #-----< RRCConnectionReconfiguration >-----#
    RRCConnectionReconfiguration = SEQ(name='RRCConnectionReconfiguration', mode=MODE_TYPE)
    _RRCConnectionReconfiguration_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _RRCConnectionReconfiguration_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCConnectionReconfiguration_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCConnectionReconfiguration_criticalExtensions_c1_rrcConnectionReconfiguration_r8 = SEQ(name='rrcConnectionReconfiguration-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReconfiguration-r8-IEs')))
    ___RRCConnectionReconfiguration_criticalExtensions_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReconfiguration_criticalExtensions_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReconfiguration_criticalExtensions_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReconfiguration_criticalExtensions_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReconfiguration_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReconfiguration_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReconfiguration_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionReconfiguration_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcConnectionReconfiguration-r8', ___RRCConnectionReconfiguration_criticalExtensions_c1_rrcConnectionReconfiguration_r8),
        ('spare7', ___RRCConnectionReconfiguration_criticalExtensions_c1_spare7),
        ('spare6', ___RRCConnectionReconfiguration_criticalExtensions_c1_spare6),
        ('spare5', ___RRCConnectionReconfiguration_criticalExtensions_c1_spare5),
        ('spare4', ___RRCConnectionReconfiguration_criticalExtensions_c1_spare4),
        ('spare3', ___RRCConnectionReconfiguration_criticalExtensions_c1_spare3),
        ('spare2', ___RRCConnectionReconfiguration_criticalExtensions_c1_spare2),
        ('spare1', ___RRCConnectionReconfiguration_criticalExtensions_c1_spare1),
        ])
    __RRCConnectionReconfiguration_criticalExtensions_c1._ext = None
    __RRCConnectionReconfiguration_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionReconfiguration_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCConnectionReconfiguration_criticalExtensions_criticalExtensionsFuture._ext = None
    _RRCConnectionReconfiguration_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCConnectionReconfiguration_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCConnectionReconfiguration_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCConnectionReconfiguration_criticalExtensions._ext = None
    RRCConnectionReconfiguration._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCConnectionReconfiguration_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCConnectionReconfiguration_criticalExtensions),
        ])
    RRCConnectionReconfiguration._ext = None
    
    #-----< RRCConnectionReconfiguration-r8-IEs >-----#
    RRCConnectionReconfiguration_r8_IEs = SEQ(name='RRCConnectionReconfiguration-r8-IEs', mode=MODE_TYPE)
    _RRCConnectionReconfiguration_r8_IEs_measConfig = SEQ(name='measConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasConfig')), opt=True)
    _RRCConnectionReconfiguration_r8_IEs_mobilityControlInfo = SEQ(name='mobilityControlInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MobilityControlInfo')), opt=True)
    _RRCConnectionReconfiguration_r8_IEs_dedicatedInfoNASList = SEQ_OF(name='dedicatedInfoNASList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RRCConnectionReconfiguration_r8_IEs_dedicatedInfoNASList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DedicatedInfoNAS')))
    _RRCConnectionReconfiguration_r8_IEs_dedicatedInfoNASList._cont = __RRCConnectionReconfiguration_r8_IEs_dedicatedInfoNASList__item_
    _RRCConnectionReconfiguration_r8_IEs_dedicatedInfoNASList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=11)], ev=None, er=[])
    _RRCConnectionReconfiguration_r8_IEs_radioResourceConfigDedicated = SEQ(name='radioResourceConfigDedicated', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RadioResourceConfigDedicated')), opt=True)
    _RRCConnectionReconfiguration_r8_IEs_securityConfigHO = SEQ(name='securityConfigHO', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityConfigHO')), opt=True)
    _RRCConnectionReconfiguration_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCConnectionReconfiguration_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCConnectionReconfiguration_r8_IEs_nonCriticalExtension._ext = None
    RRCConnectionReconfiguration_r8_IEs._cont = ASN1Dict([
        ('measConfig', _RRCConnectionReconfiguration_r8_IEs_measConfig),
        ('mobilityControlInfo', _RRCConnectionReconfiguration_r8_IEs_mobilityControlInfo),
        ('dedicatedInfoNASList', _RRCConnectionReconfiguration_r8_IEs_dedicatedInfoNASList),
        ('radioResourceConfigDedicated', _RRCConnectionReconfiguration_r8_IEs_radioResourceConfigDedicated),
        ('securityConfigHO', _RRCConnectionReconfiguration_r8_IEs_securityConfigHO),
        ('nonCriticalExtension', _RRCConnectionReconfiguration_r8_IEs_nonCriticalExtension),
        ])
    RRCConnectionReconfiguration_r8_IEs._ext = None
    
    #-----< SecurityConfigHO >-----#
    SecurityConfigHO = SEQ(name='SecurityConfigHO', mode=MODE_TYPE)
    _SecurityConfigHO_handoverType = CHOICE(name='handoverType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SecurityConfigHO_handoverType_intraLTE = SEQ(name='intraLTE', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SecurityConfigHO_handoverType_intraLTE_securityAlgorithmConfig = SEQ(name='securityAlgorithmConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityAlgorithmConfig')), opt=True)
    ___SecurityConfigHO_handoverType_intraLTE_keyChangeIndicator = BOOL(name='keyChangeIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SecurityConfigHO_handoverType_intraLTE_nextHopChainingCount = INT(name='nextHopChainingCount', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'NextHopChainingCount')))
    __SecurityConfigHO_handoverType_intraLTE._cont = ASN1Dict([
        ('securityAlgorithmConfig', ___SecurityConfigHO_handoverType_intraLTE_securityAlgorithmConfig),
        ('keyChangeIndicator', ___SecurityConfigHO_handoverType_intraLTE_keyChangeIndicator),
        ('nextHopChainingCount', ___SecurityConfigHO_handoverType_intraLTE_nextHopChainingCount),
        ])
    __SecurityConfigHO_handoverType_intraLTE._ext = None
    __SecurityConfigHO_handoverType_interRAT = SEQ(name='interRAT', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SecurityConfigHO_handoverType_interRAT_securityAlgorithmConfig = SEQ(name='securityAlgorithmConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityAlgorithmConfig')))
    ___SecurityConfigHO_handoverType_interRAT_nas_SecurityParamToEUTRA = OCT_STR(name='nas-SecurityParamToEUTRA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SecurityConfigHO_handoverType_interRAT_nas_SecurityParamToEUTRA._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    __SecurityConfigHO_handoverType_interRAT._cont = ASN1Dict([
        ('securityAlgorithmConfig', ___SecurityConfigHO_handoverType_interRAT_securityAlgorithmConfig),
        ('nas-SecurityParamToEUTRA', ___SecurityConfigHO_handoverType_interRAT_nas_SecurityParamToEUTRA),
        ])
    __SecurityConfigHO_handoverType_interRAT._ext = None
    _SecurityConfigHO_handoverType._cont = ASN1Dict([
        ('intraLTE', __SecurityConfigHO_handoverType_intraLTE),
        ('interRAT', __SecurityConfigHO_handoverType_interRAT),
        ])
    _SecurityConfigHO_handoverType._ext = None
    SecurityConfigHO._cont = ASN1Dict([
        ('handoverType', _SecurityConfigHO_handoverType),
        ])
    SecurityConfigHO._ext = []
    
    #-----< RRCConnectionReconfigurationComplete >-----#
    RRCConnectionReconfigurationComplete = SEQ(name='RRCConnectionReconfigurationComplete', mode=MODE_TYPE)
    _RRCConnectionReconfigurationComplete_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _RRCConnectionReconfigurationComplete_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCConnectionReconfigurationComplete_criticalExtensions_rrcConnectionReconfigurationComplete_r8 = SEQ(name='rrcConnectionReconfigurationComplete-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReconfigurationComplete-r8-IEs')))
    __RRCConnectionReconfigurationComplete_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionReconfigurationComplete_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCConnectionReconfigurationComplete_criticalExtensions_criticalExtensionsFuture._ext = None
    _RRCConnectionReconfigurationComplete_criticalExtensions._cont = ASN1Dict([
        ('rrcConnectionReconfigurationComplete-r8', __RRCConnectionReconfigurationComplete_criticalExtensions_rrcConnectionReconfigurationComplete_r8),
        ('criticalExtensionsFuture', __RRCConnectionReconfigurationComplete_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCConnectionReconfigurationComplete_criticalExtensions._ext = None
    RRCConnectionReconfigurationComplete._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCConnectionReconfigurationComplete_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCConnectionReconfigurationComplete_criticalExtensions),
        ])
    RRCConnectionReconfigurationComplete._ext = None
    
    #-----< RRCConnectionReconfigurationComplete-r8-IEs >-----#
    RRCConnectionReconfigurationComplete_r8_IEs = SEQ(name='RRCConnectionReconfigurationComplete-r8-IEs', mode=MODE_TYPE)
    _RRCConnectionReconfigurationComplete_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCConnectionReconfigurationComplete_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCConnectionReconfigurationComplete_r8_IEs_nonCriticalExtension._ext = None
    RRCConnectionReconfigurationComplete_r8_IEs._cont = ASN1Dict([
        ('nonCriticalExtension', _RRCConnectionReconfigurationComplete_r8_IEs_nonCriticalExtension),
        ])
    RRCConnectionReconfigurationComplete_r8_IEs._ext = None
    
    #-----< RRCConnectionReestablishment >-----#
    RRCConnectionReestablishment = SEQ(name='RRCConnectionReestablishment', mode=MODE_TYPE)
    _RRCConnectionReestablishment_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _RRCConnectionReestablishment_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCConnectionReestablishment_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCConnectionReestablishment_criticalExtensions_c1_rrcConnectionReestablishment_r8 = SEQ(name='rrcConnectionReestablishment-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReestablishment-r8-IEs')))
    ___RRCConnectionReestablishment_criticalExtensions_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReestablishment_criticalExtensions_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReestablishment_criticalExtensions_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReestablishment_criticalExtensions_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReestablishment_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReestablishment_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReestablishment_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionReestablishment_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcConnectionReestablishment-r8', ___RRCConnectionReestablishment_criticalExtensions_c1_rrcConnectionReestablishment_r8),
        ('spare7', ___RRCConnectionReestablishment_criticalExtensions_c1_spare7),
        ('spare6', ___RRCConnectionReestablishment_criticalExtensions_c1_spare6),
        ('spare5', ___RRCConnectionReestablishment_criticalExtensions_c1_spare5),
        ('spare4', ___RRCConnectionReestablishment_criticalExtensions_c1_spare4),
        ('spare3', ___RRCConnectionReestablishment_criticalExtensions_c1_spare3),
        ('spare2', ___RRCConnectionReestablishment_criticalExtensions_c1_spare2),
        ('spare1', ___RRCConnectionReestablishment_criticalExtensions_c1_spare1),
        ])
    __RRCConnectionReestablishment_criticalExtensions_c1._ext = None
    __RRCConnectionReestablishment_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionReestablishment_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCConnectionReestablishment_criticalExtensions_criticalExtensionsFuture._ext = None
    _RRCConnectionReestablishment_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCConnectionReestablishment_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCConnectionReestablishment_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCConnectionReestablishment_criticalExtensions._ext = None
    RRCConnectionReestablishment._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCConnectionReestablishment_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCConnectionReestablishment_criticalExtensions),
        ])
    RRCConnectionReestablishment._ext = None
    
    #-----< RRCConnectionReestablishment-r8-IEs >-----#
    RRCConnectionReestablishment_r8_IEs = SEQ(name='RRCConnectionReestablishment-r8-IEs', mode=MODE_TYPE)
    _RRCConnectionReestablishment_r8_IEs_radioResourceConfigDedicated = SEQ(name='radioResourceConfigDedicated', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RadioResourceConfigDedicated')))
    _RRCConnectionReestablishment_r8_IEs_nextHopChainingCount = INT(name='nextHopChainingCount', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'NextHopChainingCount')))
    _RRCConnectionReestablishment_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCConnectionReestablishment_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCConnectionReestablishment_r8_IEs_nonCriticalExtension._ext = None
    RRCConnectionReestablishment_r8_IEs._cont = ASN1Dict([
        ('radioResourceConfigDedicated', _RRCConnectionReestablishment_r8_IEs_radioResourceConfigDedicated),
        ('nextHopChainingCount', _RRCConnectionReestablishment_r8_IEs_nextHopChainingCount),
        ('nonCriticalExtension', _RRCConnectionReestablishment_r8_IEs_nonCriticalExtension),
        ])
    RRCConnectionReestablishment_r8_IEs._ext = None
    
    #-----< RRCConnectionReestablishmentComplete >-----#
    RRCConnectionReestablishmentComplete = SEQ(name='RRCConnectionReestablishmentComplete', mode=MODE_TYPE)
    _RRCConnectionReestablishmentComplete_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _RRCConnectionReestablishmentComplete_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCConnectionReestablishmentComplete_criticalExtensions_rrcConnectionReestablishmentComplete_r8 = SEQ(name='rrcConnectionReestablishmentComplete-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReestablishmentComplete-r8-IEs')))
    __RRCConnectionReestablishmentComplete_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionReestablishmentComplete_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCConnectionReestablishmentComplete_criticalExtensions_criticalExtensionsFuture._ext = None
    _RRCConnectionReestablishmentComplete_criticalExtensions._cont = ASN1Dict([
        ('rrcConnectionReestablishmentComplete-r8', __RRCConnectionReestablishmentComplete_criticalExtensions_rrcConnectionReestablishmentComplete_r8),
        ('criticalExtensionsFuture', __RRCConnectionReestablishmentComplete_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCConnectionReestablishmentComplete_criticalExtensions._ext = None
    RRCConnectionReestablishmentComplete._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCConnectionReestablishmentComplete_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCConnectionReestablishmentComplete_criticalExtensions),
        ])
    RRCConnectionReestablishmentComplete._ext = None
    
    #-----< RRCConnectionReestablishmentComplete-r8-IEs >-----#
    RRCConnectionReestablishmentComplete_r8_IEs = SEQ(name='RRCConnectionReestablishmentComplete-r8-IEs', mode=MODE_TYPE)
    _RRCConnectionReestablishmentComplete_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCConnectionReestablishmentComplete_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCConnectionReestablishmentComplete_r8_IEs_nonCriticalExtension._ext = None
    RRCConnectionReestablishmentComplete_r8_IEs._cont = ASN1Dict([
        ('nonCriticalExtension', _RRCConnectionReestablishmentComplete_r8_IEs_nonCriticalExtension),
        ])
    RRCConnectionReestablishmentComplete_r8_IEs._ext = None
    
    #-----< RRCConnectionReestablishmentReject >-----#
    RRCConnectionReestablishmentReject = SEQ(name='RRCConnectionReestablishmentReject', mode=MODE_TYPE)
    _RRCConnectionReestablishmentReject_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCConnectionReestablishmentReject_criticalExtensions_rrcConnectionReestablishmentReject_r8 = SEQ(name='rrcConnectionReestablishmentReject-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReestablishmentReject-r8-IEs')))
    __RRCConnectionReestablishmentReject_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionReestablishmentReject_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCConnectionReestablishmentReject_criticalExtensions_criticalExtensionsFuture._ext = None
    _RRCConnectionReestablishmentReject_criticalExtensions._cont = ASN1Dict([
        ('rrcConnectionReestablishmentReject-r8', __RRCConnectionReestablishmentReject_criticalExtensions_rrcConnectionReestablishmentReject_r8),
        ('criticalExtensionsFuture', __RRCConnectionReestablishmentReject_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCConnectionReestablishmentReject_criticalExtensions._ext = None
    RRCConnectionReestablishmentReject._cont = ASN1Dict([
        ('criticalExtensions', _RRCConnectionReestablishmentReject_criticalExtensions),
        ])
    RRCConnectionReestablishmentReject._ext = None
    
    #-----< RRCConnectionReestablishmentReject-r8-IEs >-----#
    RRCConnectionReestablishmentReject_r8_IEs = SEQ(name='RRCConnectionReestablishmentReject-r8-IEs', mode=MODE_TYPE)
    _RRCConnectionReestablishmentReject_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCConnectionReestablishmentReject_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCConnectionReestablishmentReject_r8_IEs_nonCriticalExtension._ext = None
    RRCConnectionReestablishmentReject_r8_IEs._cont = ASN1Dict([
        ('nonCriticalExtension', _RRCConnectionReestablishmentReject_r8_IEs_nonCriticalExtension),
        ])
    RRCConnectionReestablishmentReject_r8_IEs._ext = None
    
    #-----< RRCConnectionReestablishmentRequest >-----#
    RRCConnectionReestablishmentRequest = SEQ(name='RRCConnectionReestablishmentRequest', mode=MODE_TYPE)
    _RRCConnectionReestablishmentRequest_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCConnectionReestablishmentRequest_criticalExtensions_rrcConnectionReestablishmentRequest_r8 = SEQ(name='rrcConnectionReestablishmentRequest-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReestablishmentRequest-r8-IEs')))
    __RRCConnectionReestablishmentRequest_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionReestablishmentRequest_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCConnectionReestablishmentRequest_criticalExtensions_criticalExtensionsFuture._ext = None
    _RRCConnectionReestablishmentRequest_criticalExtensions._cont = ASN1Dict([
        ('rrcConnectionReestablishmentRequest-r8', __RRCConnectionReestablishmentRequest_criticalExtensions_rrcConnectionReestablishmentRequest_r8),
        ('criticalExtensionsFuture', __RRCConnectionReestablishmentRequest_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCConnectionReestablishmentRequest_criticalExtensions._ext = None
    RRCConnectionReestablishmentRequest._cont = ASN1Dict([
        ('criticalExtensions', _RRCConnectionReestablishmentRequest_criticalExtensions),
        ])
    RRCConnectionReestablishmentRequest._ext = None
    
    #-----< RRCConnectionReestablishmentRequest-r8-IEs >-----#
    RRCConnectionReestablishmentRequest_r8_IEs = SEQ(name='RRCConnectionReestablishmentRequest-r8-IEs', mode=MODE_TYPE)
    _RRCConnectionReestablishmentRequest_r8_IEs_ue_Identity = SEQ(name='ue-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReestabUE-Identity')))
    _RRCConnectionReestablishmentRequest_r8_IEs_reestablishmentCause = ENUM(name='reestablishmentCause', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReestablishmentCause')))
    _RRCConnectionReestablishmentRequest_r8_IEs_spare = BIT_STR(name='spare', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RRCConnectionReestablishmentRequest_r8_IEs_spare._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    RRCConnectionReestablishmentRequest_r8_IEs._cont = ASN1Dict([
        ('ue-Identity', _RRCConnectionReestablishmentRequest_r8_IEs_ue_Identity),
        ('reestablishmentCause', _RRCConnectionReestablishmentRequest_r8_IEs_reestablishmentCause),
        ('spare', _RRCConnectionReestablishmentRequest_r8_IEs_spare),
        ])
    RRCConnectionReestablishmentRequest_r8_IEs._ext = None
    
    #-----< ReestabUE-Identity >-----#
    ReestabUE_Identity = SEQ(name='ReestabUE-Identity', mode=MODE_TYPE)
    _ReestabUE_Identity_c_RNTI = BIT_STR(name='c-RNTI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'C-RNTI')))
    _ReestabUE_Identity_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellId')))
    _ReestabUE_Identity_shortMAC_I = BIT_STR(name='shortMAC-I', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ShortMAC-I')))
    ReestabUE_Identity._cont = ASN1Dict([
        ('c-RNTI', _ReestabUE_Identity_c_RNTI),
        ('physCellId', _ReestabUE_Identity_physCellId),
        ('shortMAC-I', _ReestabUE_Identity_shortMAC_I),
        ])
    ReestabUE_Identity._ext = None
    
    #-----< ReestablishmentCause >-----#
    ReestablishmentCause = ENUM(name='ReestablishmentCause', mode=MODE_TYPE)
    ReestablishmentCause._cont = ASN1Dict([('reconfigurationFailure', 0), ('handoverFailure', 1), ('otherFailure', 2), ('spare1', 3)])
    ReestablishmentCause._ext = None
    
    #-----< RRCConnectionReject >-----#
    RRCConnectionReject = SEQ(name='RRCConnectionReject', mode=MODE_TYPE)
    _RRCConnectionReject_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCConnectionReject_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCConnectionReject_criticalExtensions_c1_rrcConnectionReject_r8 = SEQ(name='rrcConnectionReject-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionReject-r8-IEs')))
    ___RRCConnectionReject_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReject_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionReject_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionReject_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcConnectionReject-r8', ___RRCConnectionReject_criticalExtensions_c1_rrcConnectionReject_r8),
        ('spare3', ___RRCConnectionReject_criticalExtensions_c1_spare3),
        ('spare2', ___RRCConnectionReject_criticalExtensions_c1_spare2),
        ('spare1', ___RRCConnectionReject_criticalExtensions_c1_spare1),
        ])
    __RRCConnectionReject_criticalExtensions_c1._ext = None
    __RRCConnectionReject_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionReject_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCConnectionReject_criticalExtensions_criticalExtensionsFuture._ext = None
    _RRCConnectionReject_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCConnectionReject_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCConnectionReject_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCConnectionReject_criticalExtensions._ext = None
    RRCConnectionReject._cont = ASN1Dict([
        ('criticalExtensions', _RRCConnectionReject_criticalExtensions),
        ])
    RRCConnectionReject._ext = None
    
    #-----< RRCConnectionReject-r8-IEs >-----#
    RRCConnectionReject_r8_IEs = SEQ(name='RRCConnectionReject-r8-IEs', mode=MODE_TYPE)
    _RRCConnectionReject_r8_IEs_waitTime = INT(name='waitTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RRCConnectionReject_r8_IEs_waitTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _RRCConnectionReject_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCConnectionReject_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCConnectionReject_r8_IEs_nonCriticalExtension._ext = None
    RRCConnectionReject_r8_IEs._cont = ASN1Dict([
        ('waitTime', _RRCConnectionReject_r8_IEs_waitTime),
        ('nonCriticalExtension', _RRCConnectionReject_r8_IEs_nonCriticalExtension),
        ])
    RRCConnectionReject_r8_IEs._ext = None
    
    #-----< RRCConnectionRelease >-----#
    RRCConnectionRelease = SEQ(name='RRCConnectionRelease', mode=MODE_TYPE)
    _RRCConnectionRelease_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _RRCConnectionRelease_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCConnectionRelease_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCConnectionRelease_criticalExtensions_c1_rrcConnectionRelease_r8 = SEQ(name='rrcConnectionRelease-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionRelease-r8-IEs')))
    ___RRCConnectionRelease_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionRelease_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionRelease_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionRelease_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcConnectionRelease-r8', ___RRCConnectionRelease_criticalExtensions_c1_rrcConnectionRelease_r8),
        ('spare3', ___RRCConnectionRelease_criticalExtensions_c1_spare3),
        ('spare2', ___RRCConnectionRelease_criticalExtensions_c1_spare2),
        ('spare1', ___RRCConnectionRelease_criticalExtensions_c1_spare1),
        ])
    __RRCConnectionRelease_criticalExtensions_c1._ext = None
    __RRCConnectionRelease_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionRelease_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCConnectionRelease_criticalExtensions_criticalExtensionsFuture._ext = None
    _RRCConnectionRelease_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCConnectionRelease_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCConnectionRelease_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCConnectionRelease_criticalExtensions._ext = None
    RRCConnectionRelease._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCConnectionRelease_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCConnectionRelease_criticalExtensions),
        ])
    RRCConnectionRelease._ext = None
    
    #-----< RRCConnectionRelease-r8-IEs >-----#
    RRCConnectionRelease_r8_IEs = SEQ(name='RRCConnectionRelease-r8-IEs', mode=MODE_TYPE)
    _RRCConnectionRelease_r8_IEs_releaseCause = ENUM(name='releaseCause', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReleaseCause')))
    _RRCConnectionRelease_r8_IEs_redirectedCarrierInfo = CHOICE(name='redirectedCarrierInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RedirectedCarrierInfo')), opt=True)
    _RRCConnectionRelease_r8_IEs_idleModeMobilityControlInfo = SEQ(name='idleModeMobilityControlInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IdleModeMobilityControlInfo')), opt=True)
    _RRCConnectionRelease_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCConnectionRelease_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCConnectionRelease_r8_IEs_nonCriticalExtension._ext = None
    RRCConnectionRelease_r8_IEs._cont = ASN1Dict([
        ('releaseCause', _RRCConnectionRelease_r8_IEs_releaseCause),
        ('redirectedCarrierInfo', _RRCConnectionRelease_r8_IEs_redirectedCarrierInfo),
        ('idleModeMobilityControlInfo', _RRCConnectionRelease_r8_IEs_idleModeMobilityControlInfo),
        ('nonCriticalExtension', _RRCConnectionRelease_r8_IEs_nonCriticalExtension),
        ])
    RRCConnectionRelease_r8_IEs._ext = None
    
    #-----< ReleaseCause >-----#
    ReleaseCause = ENUM(name='ReleaseCause', mode=MODE_TYPE)
    ReleaseCause._cont = ASN1Dict([('loadBalancingTAUrequired', 0), ('other', 1), ('spare2', 2), ('spare1', 3)])
    ReleaseCause._ext = None
    
    #-----< RedirectedCarrierInfo >-----#
    RedirectedCarrierInfo = CHOICE(name='RedirectedCarrierInfo', mode=MODE_TYPE)
    _RedirectedCarrierInfo_eutra = INT(name='eutra', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueEUTRA')))
    _RedirectedCarrierInfo_geran = SEQ(name='geran', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqsGERAN')))
    _RedirectedCarrierInfo_utra_FDD = INT(name='utra-FDD', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueUTRA')))
    _RedirectedCarrierInfo_utra_TDD = INT(name='utra-TDD', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueUTRA')))
    _RedirectedCarrierInfo_cdma2000_HRPD = SEQ(name='cdma2000-HRPD', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqCDMA2000')))
    _RedirectedCarrierInfo_cdma2000_1xRTT = SEQ(name='cdma2000-1xRTT', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqCDMA2000')))
    RedirectedCarrierInfo._cont = ASN1Dict([
        ('eutra', _RedirectedCarrierInfo_eutra),
        ('geran', _RedirectedCarrierInfo_geran),
        ('utra-FDD', _RedirectedCarrierInfo_utra_FDD),
        ('utra-TDD', _RedirectedCarrierInfo_utra_TDD),
        ('cdma2000-HRPD', _RedirectedCarrierInfo_cdma2000_HRPD),
        ('cdma2000-1xRTT', _RedirectedCarrierInfo_cdma2000_1xRTT),
        ])
    RedirectedCarrierInfo._ext = []
    
    #-----< IdleModeMobilityControlInfo >-----#
    IdleModeMobilityControlInfo = SEQ(name='IdleModeMobilityControlInfo', mode=MODE_TYPE)
    _IdleModeMobilityControlInfo_freqPriorityListEUTRA = SEQ_OF(name='freqPriorityListEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FreqPriorityListEUTRA')), opt=True)
    _IdleModeMobilityControlInfo_freqPriorityListGERAN = SEQ_OF(name='freqPriorityListGERAN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FreqsPriorityListGERAN')), opt=True)
    _IdleModeMobilityControlInfo_freqPriorityListUTRA_FDD = SEQ_OF(name='freqPriorityListUTRA-FDD', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FreqPriorityListUTRA-FDD')), opt=True)
    _IdleModeMobilityControlInfo_freqPriorityListUTRA_TDD = SEQ_OF(name='freqPriorityListUTRA-TDD', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FreqPriorityListUTRA-TDD')), opt=True)
    _IdleModeMobilityControlInfo_bandClassPriorityListHRPD = SEQ_OF(name='bandClassPriorityListHRPD', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandClassPriorityListHRPD')), opt=True)
    _IdleModeMobilityControlInfo_bandClassPriorityList1XRTT = SEQ_OF(name='bandClassPriorityList1XRTT', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandClassPriorityList1XRTT')), opt=True)
    _IdleModeMobilityControlInfo_t320 = ENUM(name='t320', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IdleModeMobilityControlInfo_t320._cont = ASN1Dict([('min5', 0), ('min10', 1), ('min20', 2), ('min30', 3), ('min60', 4), ('min120', 5), ('min180', 6), ('spare1', 7)])
    _IdleModeMobilityControlInfo_t320._ext = None
    IdleModeMobilityControlInfo._cont = ASN1Dict([
        ('freqPriorityListEUTRA', _IdleModeMobilityControlInfo_freqPriorityListEUTRA),
        ('freqPriorityListGERAN', _IdleModeMobilityControlInfo_freqPriorityListGERAN),
        ('freqPriorityListUTRA-FDD', _IdleModeMobilityControlInfo_freqPriorityListUTRA_FDD),
        ('freqPriorityListUTRA-TDD', _IdleModeMobilityControlInfo_freqPriorityListUTRA_TDD),
        ('bandClassPriorityListHRPD', _IdleModeMobilityControlInfo_bandClassPriorityListHRPD),
        ('bandClassPriorityList1XRTT', _IdleModeMobilityControlInfo_bandClassPriorityList1XRTT),
        ('t320', _IdleModeMobilityControlInfo_t320),
        ])
    IdleModeMobilityControlInfo._ext = []
    
    #-----< FreqPriorityListEUTRA >-----#
    FreqPriorityListEUTRA = SEQ_OF(name='FreqPriorityListEUTRA', mode=MODE_TYPE)
    _FreqPriorityListEUTRA__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FreqPriorityEUTRA')))
    FreqPriorityListEUTRA._cont = _FreqPriorityListEUTRA__item_
    FreqPriorityListEUTRA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< FreqPriorityEUTRA >-----#
    FreqPriorityEUTRA = SEQ(name='FreqPriorityEUTRA', mode=MODE_TYPE)
    _FreqPriorityEUTRA_carrierFreq = INT(name='carrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueEUTRA')))
    _FreqPriorityEUTRA_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')))
    FreqPriorityEUTRA._cont = ASN1Dict([
        ('carrierFreq', _FreqPriorityEUTRA_carrierFreq),
        ('cellReselectionPriority', _FreqPriorityEUTRA_cellReselectionPriority),
        ])
    FreqPriorityEUTRA._ext = None
    
    #-----< FreqsPriorityListGERAN >-----#
    FreqsPriorityListGERAN = SEQ_OF(name='FreqsPriorityListGERAN', mode=MODE_TYPE)
    _FreqsPriorityListGERAN__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FreqsPriorityGERAN')))
    FreqsPriorityListGERAN._cont = _FreqsPriorityListGERAN__item_
    FreqsPriorityListGERAN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< FreqsPriorityGERAN >-----#
    FreqsPriorityGERAN = SEQ(name='FreqsPriorityGERAN', mode=MODE_TYPE)
    _FreqsPriorityGERAN_carrierFreqs = SEQ(name='carrierFreqs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqsGERAN')))
    _FreqsPriorityGERAN_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')))
    FreqsPriorityGERAN._cont = ASN1Dict([
        ('carrierFreqs', _FreqsPriorityGERAN_carrierFreqs),
        ('cellReselectionPriority', _FreqsPriorityGERAN_cellReselectionPriority),
        ])
    FreqsPriorityGERAN._ext = None
    
    #-----< FreqPriorityListUTRA-FDD >-----#
    FreqPriorityListUTRA_FDD = SEQ_OF(name='FreqPriorityListUTRA-FDD', mode=MODE_TYPE)
    _FreqPriorityListUTRA_FDD__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FreqPriorityUTRA-FDD')))
    FreqPriorityListUTRA_FDD._cont = _FreqPriorityListUTRA_FDD__item_
    FreqPriorityListUTRA_FDD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< FreqPriorityUTRA-FDD >-----#
    FreqPriorityUTRA_FDD = SEQ(name='FreqPriorityUTRA-FDD', mode=MODE_TYPE)
    _FreqPriorityUTRA_FDD_carrierFreq = INT(name='carrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueUTRA')))
    _FreqPriorityUTRA_FDD_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')))
    FreqPriorityUTRA_FDD._cont = ASN1Dict([
        ('carrierFreq', _FreqPriorityUTRA_FDD_carrierFreq),
        ('cellReselectionPriority', _FreqPriorityUTRA_FDD_cellReselectionPriority),
        ])
    FreqPriorityUTRA_FDD._ext = None
    
    #-----< FreqPriorityListUTRA-TDD >-----#
    FreqPriorityListUTRA_TDD = SEQ_OF(name='FreqPriorityListUTRA-TDD', mode=MODE_TYPE)
    _FreqPriorityListUTRA_TDD__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FreqPriorityUTRA-TDD')))
    FreqPriorityListUTRA_TDD._cont = _FreqPriorityListUTRA_TDD__item_
    FreqPriorityListUTRA_TDD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< FreqPriorityUTRA-TDD >-----#
    FreqPriorityUTRA_TDD = SEQ(name='FreqPriorityUTRA-TDD', mode=MODE_TYPE)
    _FreqPriorityUTRA_TDD_carrierFreq = INT(name='carrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueUTRA')))
    _FreqPriorityUTRA_TDD_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')))
    FreqPriorityUTRA_TDD._cont = ASN1Dict([
        ('carrierFreq', _FreqPriorityUTRA_TDD_carrierFreq),
        ('cellReselectionPriority', _FreqPriorityUTRA_TDD_cellReselectionPriority),
        ])
    FreqPriorityUTRA_TDD._ext = None
    
    #-----< BandClassPriorityListHRPD >-----#
    BandClassPriorityListHRPD = SEQ_OF(name='BandClassPriorityListHRPD', mode=MODE_TYPE)
    _BandClassPriorityListHRPD__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandClassPriorityHRPD')))
    BandClassPriorityListHRPD._cont = _BandClassPriorityListHRPD__item_
    BandClassPriorityListHRPD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< BandClassPriorityHRPD >-----#
    BandClassPriorityHRPD = SEQ(name='BandClassPriorityHRPD', mode=MODE_TYPE)
    _BandClassPriorityHRPD_bandClass = ENUM(name='bandClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandclassCDMA2000')))
    _BandClassPriorityHRPD_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')))
    BandClassPriorityHRPD._cont = ASN1Dict([
        ('bandClass', _BandClassPriorityHRPD_bandClass),
        ('cellReselectionPriority', _BandClassPriorityHRPD_cellReselectionPriority),
        ])
    BandClassPriorityHRPD._ext = None
    
    #-----< BandClassPriorityList1XRTT >-----#
    BandClassPriorityList1XRTT = SEQ_OF(name='BandClassPriorityList1XRTT', mode=MODE_TYPE)
    _BandClassPriorityList1XRTT__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandClassPriority1XRTT')))
    BandClassPriorityList1XRTT._cont = _BandClassPriorityList1XRTT__item_
    BandClassPriorityList1XRTT._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< BandClassPriority1XRTT >-----#
    BandClassPriority1XRTT = SEQ(name='BandClassPriority1XRTT', mode=MODE_TYPE)
    _BandClassPriority1XRTT_bandClass = ENUM(name='bandClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandclassCDMA2000')))
    _BandClassPriority1XRTT_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')))
    BandClassPriority1XRTT._cont = ASN1Dict([
        ('bandClass', _BandClassPriority1XRTT_bandClass),
        ('cellReselectionPriority', _BandClassPriority1XRTT_cellReselectionPriority),
        ])
    BandClassPriority1XRTT._ext = None
    
    #-----< RRCConnectionRequest >-----#
    RRCConnectionRequest = SEQ(name='RRCConnectionRequest', mode=MODE_TYPE)
    _RRCConnectionRequest_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCConnectionRequest_criticalExtensions_rrcConnectionRequest_r8 = SEQ(name='rrcConnectionRequest-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionRequest-r8-IEs')))
    __RRCConnectionRequest_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionRequest_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCConnectionRequest_criticalExtensions_criticalExtensionsFuture._ext = None
    _RRCConnectionRequest_criticalExtensions._cont = ASN1Dict([
        ('rrcConnectionRequest-r8', __RRCConnectionRequest_criticalExtensions_rrcConnectionRequest_r8),
        ('criticalExtensionsFuture', __RRCConnectionRequest_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCConnectionRequest_criticalExtensions._ext = None
    RRCConnectionRequest._cont = ASN1Dict([
        ('criticalExtensions', _RRCConnectionRequest_criticalExtensions),
        ])
    RRCConnectionRequest._ext = None
    
    #-----< RRCConnectionRequest-r8-IEs >-----#
    RRCConnectionRequest_r8_IEs = SEQ(name='RRCConnectionRequest-r8-IEs', mode=MODE_TYPE)
    _RRCConnectionRequest_r8_IEs_ue_Identity = CHOICE(name='ue-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'InitialUE-Identity')))
    _RRCConnectionRequest_r8_IEs_establishmentCause = ENUM(name='establishmentCause', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'EstablishmentCause')))
    _RRCConnectionRequest_r8_IEs_spare = BIT_STR(name='spare', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RRCConnectionRequest_r8_IEs_spare._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    RRCConnectionRequest_r8_IEs._cont = ASN1Dict([
        ('ue-Identity', _RRCConnectionRequest_r8_IEs_ue_Identity),
        ('establishmentCause', _RRCConnectionRequest_r8_IEs_establishmentCause),
        ('spare', _RRCConnectionRequest_r8_IEs_spare),
        ])
    RRCConnectionRequest_r8_IEs._ext = None
    
    #-----< InitialUE-Identity >-----#
    InitialUE_Identity = CHOICE(name='InitialUE-Identity', mode=MODE_TYPE)
    _InitialUE_Identity_s_TMSI = SEQ(name='s-TMSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'S-TMSI')))
    _InitialUE_Identity_randomValue = BIT_STR(name='randomValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _InitialUE_Identity_randomValue._const_sz = ASN1Set(rv=[40], rr=[], ev=None, er=[])
    InitialUE_Identity._cont = ASN1Dict([
        ('s-TMSI', _InitialUE_Identity_s_TMSI),
        ('randomValue', _InitialUE_Identity_randomValue),
        ])
    InitialUE_Identity._ext = None
    
    #-----< EstablishmentCause >-----#
    EstablishmentCause = ENUM(name='EstablishmentCause', mode=MODE_TYPE)
    EstablishmentCause._cont = ASN1Dict([('emergency', 0), ('highPriorityAccess', 1), ('mt-Access', 2), ('mo-Signalling', 3), ('mo-Data', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    EstablishmentCause._ext = None
    
    #-----< RRCConnectionSetup >-----#
    RRCConnectionSetup = SEQ(name='RRCConnectionSetup', mode=MODE_TYPE)
    _RRCConnectionSetup_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _RRCConnectionSetup_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCConnectionSetup_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCConnectionSetup_criticalExtensions_c1_rrcConnectionSetup_r8 = SEQ(name='rrcConnectionSetup-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionSetup-r8-IEs')))
    ___RRCConnectionSetup_criticalExtensions_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionSetup_criticalExtensions_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionSetup_criticalExtensions_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionSetup_criticalExtensions_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionSetup_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionSetup_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionSetup_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionSetup_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcConnectionSetup-r8', ___RRCConnectionSetup_criticalExtensions_c1_rrcConnectionSetup_r8),
        ('spare7', ___RRCConnectionSetup_criticalExtensions_c1_spare7),
        ('spare6', ___RRCConnectionSetup_criticalExtensions_c1_spare6),
        ('spare5', ___RRCConnectionSetup_criticalExtensions_c1_spare5),
        ('spare4', ___RRCConnectionSetup_criticalExtensions_c1_spare4),
        ('spare3', ___RRCConnectionSetup_criticalExtensions_c1_spare3),
        ('spare2', ___RRCConnectionSetup_criticalExtensions_c1_spare2),
        ('spare1', ___RRCConnectionSetup_criticalExtensions_c1_spare1),
        ])
    __RRCConnectionSetup_criticalExtensions_c1._ext = None
    __RRCConnectionSetup_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionSetup_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCConnectionSetup_criticalExtensions_criticalExtensionsFuture._ext = None
    _RRCConnectionSetup_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCConnectionSetup_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCConnectionSetup_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCConnectionSetup_criticalExtensions._ext = None
    RRCConnectionSetup._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCConnectionSetup_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCConnectionSetup_criticalExtensions),
        ])
    RRCConnectionSetup._ext = None
    
    #-----< RRCConnectionSetup-r8-IEs >-----#
    RRCConnectionSetup_r8_IEs = SEQ(name='RRCConnectionSetup-r8-IEs', mode=MODE_TYPE)
    _RRCConnectionSetup_r8_IEs_radioResourceConfigDedicated = SEQ(name='radioResourceConfigDedicated', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RadioResourceConfigDedicated')))
    _RRCConnectionSetup_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCConnectionSetup_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCConnectionSetup_r8_IEs_nonCriticalExtension._ext = None
    RRCConnectionSetup_r8_IEs._cont = ASN1Dict([
        ('radioResourceConfigDedicated', _RRCConnectionSetup_r8_IEs_radioResourceConfigDedicated),
        ('nonCriticalExtension', _RRCConnectionSetup_r8_IEs_nonCriticalExtension),
        ])
    RRCConnectionSetup_r8_IEs._ext = None
    
    #-----< RRCConnectionSetupComplete >-----#
    RRCConnectionSetupComplete = SEQ(name='RRCConnectionSetupComplete', mode=MODE_TYPE)
    _RRCConnectionSetupComplete_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _RRCConnectionSetupComplete_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCConnectionSetupComplete_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCConnectionSetupComplete_criticalExtensions_c1_rrcConnectionSetupComplete_r8 = SEQ(name='rrcConnectionSetupComplete-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRCConnectionSetupComplete-r8-IEs')))
    ___RRCConnectionSetupComplete_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionSetupComplete_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCConnectionSetupComplete_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionSetupComplete_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcConnectionSetupComplete-r8', ___RRCConnectionSetupComplete_criticalExtensions_c1_rrcConnectionSetupComplete_r8),
        ('spare3', ___RRCConnectionSetupComplete_criticalExtensions_c1_spare3),
        ('spare2', ___RRCConnectionSetupComplete_criticalExtensions_c1_spare2),
        ('spare1', ___RRCConnectionSetupComplete_criticalExtensions_c1_spare1),
        ])
    __RRCConnectionSetupComplete_criticalExtensions_c1._ext = None
    __RRCConnectionSetupComplete_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCConnectionSetupComplete_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCConnectionSetupComplete_criticalExtensions_criticalExtensionsFuture._ext = None
    _RRCConnectionSetupComplete_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCConnectionSetupComplete_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCConnectionSetupComplete_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCConnectionSetupComplete_criticalExtensions._ext = None
    RRCConnectionSetupComplete._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCConnectionSetupComplete_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCConnectionSetupComplete_criticalExtensions),
        ])
    RRCConnectionSetupComplete._ext = None
    
    #-----< RRCConnectionSetupComplete-r8-IEs >-----#
    RRCConnectionSetupComplete_r8_IEs = SEQ(name='RRCConnectionSetupComplete-r8-IEs', mode=MODE_TYPE)
    _RRCConnectionSetupComplete_r8_IEs_selectedPLMN_Identity = INT(name='selectedPLMN-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RRCConnectionSetupComplete_r8_IEs_selectedPLMN_Identity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=6)], ev=None, er=[])
    _RRCConnectionSetupComplete_r8_IEs_registeredMME = SEQ(name='registeredMME', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RegisteredMME')), opt=True)
    _RRCConnectionSetupComplete_r8_IEs_dedicatedInfoNAS = OCT_STR(name='dedicatedInfoNAS', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DedicatedInfoNAS')))
    _RRCConnectionSetupComplete_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCConnectionSetupComplete_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCConnectionSetupComplete_r8_IEs_nonCriticalExtension._ext = None
    RRCConnectionSetupComplete_r8_IEs._cont = ASN1Dict([
        ('selectedPLMN-Identity', _RRCConnectionSetupComplete_r8_IEs_selectedPLMN_Identity),
        ('registeredMME', _RRCConnectionSetupComplete_r8_IEs_registeredMME),
        ('dedicatedInfoNAS', _RRCConnectionSetupComplete_r8_IEs_dedicatedInfoNAS),
        ('nonCriticalExtension', _RRCConnectionSetupComplete_r8_IEs_nonCriticalExtension),
        ])
    RRCConnectionSetupComplete_r8_IEs._ext = None
    
    #-----< RegisteredMME >-----#
    RegisteredMME = SEQ(name='RegisteredMME', mode=MODE_TYPE)
    _RegisteredMME_plmn_Identity = SEQ(name='plmn-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PLMN-Identity')), opt=True)
    _RegisteredMME_mmegi = BIT_STR(name='mmegi', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RegisteredMME_mmegi._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _RegisteredMME_mmec = BIT_STR(name='mmec', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MMEC')))
    RegisteredMME._cont = ASN1Dict([
        ('plmn-Identity', _RegisteredMME_plmn_Identity),
        ('mmegi', _RegisteredMME_mmegi),
        ('mmec', _RegisteredMME_mmec),
        ])
    RegisteredMME._ext = None
    
    #-----< SecurityModeCommand >-----#
    SecurityModeCommand = SEQ(name='SecurityModeCommand', mode=MODE_TYPE)
    _SecurityModeCommand_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _SecurityModeCommand_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SecurityModeCommand_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___SecurityModeCommand_criticalExtensions_c1_securityModeCommand_r8 = SEQ(name='securityModeCommand-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityModeCommand-r8-IEs')))
    ___SecurityModeCommand_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SecurityModeCommand_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SecurityModeCommand_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SecurityModeCommand_criticalExtensions_c1._cont = ASN1Dict([
        ('securityModeCommand-r8', ___SecurityModeCommand_criticalExtensions_c1_securityModeCommand_r8),
        ('spare3', ___SecurityModeCommand_criticalExtensions_c1_spare3),
        ('spare2', ___SecurityModeCommand_criticalExtensions_c1_spare2),
        ('spare1', ___SecurityModeCommand_criticalExtensions_c1_spare1),
        ])
    __SecurityModeCommand_criticalExtensions_c1._ext = None
    __SecurityModeCommand_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SecurityModeCommand_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __SecurityModeCommand_criticalExtensions_criticalExtensionsFuture._ext = None
    _SecurityModeCommand_criticalExtensions._cont = ASN1Dict([
        ('c1', __SecurityModeCommand_criticalExtensions_c1),
        ('criticalExtensionsFuture', __SecurityModeCommand_criticalExtensions_criticalExtensionsFuture),
        ])
    _SecurityModeCommand_criticalExtensions._ext = None
    SecurityModeCommand._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _SecurityModeCommand_rrc_TransactionIdentifier),
        ('criticalExtensions', _SecurityModeCommand_criticalExtensions),
        ])
    SecurityModeCommand._ext = None
    
    #-----< SecurityModeCommand-r8-IEs >-----#
    SecurityModeCommand_r8_IEs = SEQ(name='SecurityModeCommand-r8-IEs', mode=MODE_TYPE)
    _SecurityModeCommand_r8_IEs_securityConfigSMC = SEQ(name='securityConfigSMC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityConfigSMC')))
    _SecurityModeCommand_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SecurityModeCommand_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _SecurityModeCommand_r8_IEs_nonCriticalExtension._ext = None
    SecurityModeCommand_r8_IEs._cont = ASN1Dict([
        ('securityConfigSMC', _SecurityModeCommand_r8_IEs_securityConfigSMC),
        ('nonCriticalExtension', _SecurityModeCommand_r8_IEs_nonCriticalExtension),
        ])
    SecurityModeCommand_r8_IEs._ext = None
    
    #-----< SecurityConfigSMC >-----#
    SecurityConfigSMC = SEQ(name='SecurityConfigSMC', mode=MODE_TYPE)
    _SecurityConfigSMC_securityAlgorithmConfig = SEQ(name='securityAlgorithmConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityAlgorithmConfig')))
    SecurityConfigSMC._cont = ASN1Dict([
        ('securityAlgorithmConfig', _SecurityConfigSMC_securityAlgorithmConfig),
        ])
    SecurityConfigSMC._ext = []
    
    #-----< SecurityModeComplete >-----#
    SecurityModeComplete = SEQ(name='SecurityModeComplete', mode=MODE_TYPE)
    _SecurityModeComplete_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _SecurityModeComplete_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SecurityModeComplete_criticalExtensions_securityModeComplete_r8 = SEQ(name='securityModeComplete-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityModeComplete-r8-IEs')))
    __SecurityModeComplete_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SecurityModeComplete_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __SecurityModeComplete_criticalExtensions_criticalExtensionsFuture._ext = None
    _SecurityModeComplete_criticalExtensions._cont = ASN1Dict([
        ('securityModeComplete-r8', __SecurityModeComplete_criticalExtensions_securityModeComplete_r8),
        ('criticalExtensionsFuture', __SecurityModeComplete_criticalExtensions_criticalExtensionsFuture),
        ])
    _SecurityModeComplete_criticalExtensions._ext = None
    SecurityModeComplete._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _SecurityModeComplete_rrc_TransactionIdentifier),
        ('criticalExtensions', _SecurityModeComplete_criticalExtensions),
        ])
    SecurityModeComplete._ext = None
    
    #-----< SecurityModeComplete-r8-IEs >-----#
    SecurityModeComplete_r8_IEs = SEQ(name='SecurityModeComplete-r8-IEs', mode=MODE_TYPE)
    _SecurityModeComplete_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SecurityModeComplete_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _SecurityModeComplete_r8_IEs_nonCriticalExtension._ext = None
    SecurityModeComplete_r8_IEs._cont = ASN1Dict([
        ('nonCriticalExtension', _SecurityModeComplete_r8_IEs_nonCriticalExtension),
        ])
    SecurityModeComplete_r8_IEs._ext = None
    
    #-----< SecurityModeFailure >-----#
    SecurityModeFailure = SEQ(name='SecurityModeFailure', mode=MODE_TYPE)
    _SecurityModeFailure_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _SecurityModeFailure_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SecurityModeFailure_criticalExtensions_securityModeFailure_r8 = SEQ(name='securityModeFailure-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityModeFailure-r8-IEs')))
    __SecurityModeFailure_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SecurityModeFailure_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __SecurityModeFailure_criticalExtensions_criticalExtensionsFuture._ext = None
    _SecurityModeFailure_criticalExtensions._cont = ASN1Dict([
        ('securityModeFailure-r8', __SecurityModeFailure_criticalExtensions_securityModeFailure_r8),
        ('criticalExtensionsFuture', __SecurityModeFailure_criticalExtensions_criticalExtensionsFuture),
        ])
    _SecurityModeFailure_criticalExtensions._ext = None
    SecurityModeFailure._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _SecurityModeFailure_rrc_TransactionIdentifier),
        ('criticalExtensions', _SecurityModeFailure_criticalExtensions),
        ])
    SecurityModeFailure._ext = None
    
    #-----< SecurityModeFailure-r8-IEs >-----#
    SecurityModeFailure_r8_IEs = SEQ(name='SecurityModeFailure-r8-IEs', mode=MODE_TYPE)
    _SecurityModeFailure_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SecurityModeFailure_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _SecurityModeFailure_r8_IEs_nonCriticalExtension._ext = None
    SecurityModeFailure_r8_IEs._cont = ASN1Dict([
        ('nonCriticalExtension', _SecurityModeFailure_r8_IEs_nonCriticalExtension),
        ])
    SecurityModeFailure_r8_IEs._ext = None
    
    #-----< SystemInformation >-----#
    SystemInformation = SEQ(name='SystemInformation', mode=MODE_TYPE)
    _SystemInformation_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SystemInformation_criticalExtensions_systemInformation_r8 = SEQ(name='systemInformation-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformation-r8-IEs')))
    __SystemInformation_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformation_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __SystemInformation_criticalExtensions_criticalExtensionsFuture._ext = None
    _SystemInformation_criticalExtensions._cont = ASN1Dict([
        ('systemInformation-r8', __SystemInformation_criticalExtensions_systemInformation_r8),
        ('criticalExtensionsFuture', __SystemInformation_criticalExtensions_criticalExtensionsFuture),
        ])
    _SystemInformation_criticalExtensions._ext = None
    SystemInformation._cont = ASN1Dict([
        ('criticalExtensions', _SystemInformation_criticalExtensions),
        ])
    SystemInformation._ext = None
    
    #-----< SystemInformation-r8-IEs >-----#
    SystemInformation_r8_IEs = SEQ(name='SystemInformation-r8-IEs', mode=MODE_TYPE)
    _SystemInformation_r8_IEs_sib_TypeAndInfo = SEQ_OF(name='sib-TypeAndInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformation_r8_IEs_sib_TypeAndInfo__item_ = CHOICE(name='_item_', mode=MODE_TYPE)
    ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib2 = SEQ(name='sib2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType2')))
    ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib3 = SEQ(name='sib3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType3')))
    ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib4 = SEQ(name='sib4', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType4')))
    ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib5 = SEQ(name='sib5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType5')))
    ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib6 = SEQ(name='sib6', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType6')))
    ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib7 = SEQ(name='sib7', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType7')))
    ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib8 = SEQ(name='sib8', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType8')))
    ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib9 = SEQ(name='sib9', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType9')))
    ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib10 = SEQ(name='sib10', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType10')))
    ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib11 = SEQ(name='sib11', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType11')))
    __SystemInformation_r8_IEs_sib_TypeAndInfo__item_._cont = ASN1Dict([
        ('sib2', ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib2),
        ('sib3', ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib3),
        ('sib4', ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib4),
        ('sib5', ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib5),
        ('sib6', ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib6),
        ('sib7', ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib7),
        ('sib8', ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib8),
        ('sib9', ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib9),
        ('sib10', ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib10),
        ('sib11', ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib11),
        ])
    __SystemInformation_r8_IEs_sib_TypeAndInfo__item_._ext = []
    _SystemInformation_r8_IEs_sib_TypeAndInfo._cont = __SystemInformation_r8_IEs_sib_TypeAndInfo__item_
    _SystemInformation_r8_IEs_sib_TypeAndInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _SystemInformation_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SystemInformation_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _SystemInformation_r8_IEs_nonCriticalExtension._ext = None
    SystemInformation_r8_IEs._cont = ASN1Dict([
        ('sib-TypeAndInfo', _SystemInformation_r8_IEs_sib_TypeAndInfo),
        ('nonCriticalExtension', _SystemInformation_r8_IEs_nonCriticalExtension),
        ])
    SystemInformation_r8_IEs._ext = None
    
    #-----< SystemInformationBlockType1 >-----#
    SystemInformationBlockType1 = SEQ(name='SystemInformationBlockType1', mode=MODE_TYPE)
    _SystemInformationBlockType1_cellAccessRelatedInfo = SEQ(name='cellAccessRelatedInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformationBlockType1_cellAccessRelatedInfo_plmn_IdentityList = SEQ_OF(name='plmn-IdentityList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PLMN-IdentityList')))
    __SystemInformationBlockType1_cellAccessRelatedInfo_trackingAreaCode = BIT_STR(name='trackingAreaCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'TrackingAreaCode')))
    __SystemInformationBlockType1_cellAccessRelatedInfo_cellIdentity = BIT_STR(name='cellIdentity', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellIdentity')))
    __SystemInformationBlockType1_cellAccessRelatedInfo_cellBarred = ENUM(name='cellBarred', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformationBlockType1_cellAccessRelatedInfo_cellBarred._cont = ASN1Dict([('barred', 0), ('notBarred', 1)])
    __SystemInformationBlockType1_cellAccessRelatedInfo_cellBarred._ext = None
    __SystemInformationBlockType1_cellAccessRelatedInfo_intraFreqReselection = ENUM(name='intraFreqReselection', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformationBlockType1_cellAccessRelatedInfo_intraFreqReselection._cont = ASN1Dict([('allowed', 0), ('notAllowed', 1)])
    __SystemInformationBlockType1_cellAccessRelatedInfo_intraFreqReselection._ext = None
    __SystemInformationBlockType1_cellAccessRelatedInfo_csg_Indication = BOOL(name='csg-Indication', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformationBlockType1_cellAccessRelatedInfo_csg_Identity = BIT_STR(name='csg-Identity', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SystemInformationBlockType1_cellAccessRelatedInfo_csg_Identity._const_sz = ASN1Set(rv=[27], rr=[], ev=None, er=[])
    _SystemInformationBlockType1_cellAccessRelatedInfo._cont = ASN1Dict([
        ('plmn-IdentityList', __SystemInformationBlockType1_cellAccessRelatedInfo_plmn_IdentityList),
        ('trackingAreaCode', __SystemInformationBlockType1_cellAccessRelatedInfo_trackingAreaCode),
        ('cellIdentity', __SystemInformationBlockType1_cellAccessRelatedInfo_cellIdentity),
        ('cellBarred', __SystemInformationBlockType1_cellAccessRelatedInfo_cellBarred),
        ('intraFreqReselection', __SystemInformationBlockType1_cellAccessRelatedInfo_intraFreqReselection),
        ('csg-Indication', __SystemInformationBlockType1_cellAccessRelatedInfo_csg_Indication),
        ('csg-Identity', __SystemInformationBlockType1_cellAccessRelatedInfo_csg_Identity),
        ])
    _SystemInformationBlockType1_cellAccessRelatedInfo._ext = None
    _SystemInformationBlockType1_cellSelectionInfo = SEQ(name='cellSelectionInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformationBlockType1_cellSelectionInfo_q_RxLevMin = INT(name='q-RxLevMin', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Q-RxLevMin')))
    __SystemInformationBlockType1_cellSelectionInfo_q_RxLevMinOffset = INT(name='q-RxLevMinOffset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SystemInformationBlockType1_cellSelectionInfo_q_RxLevMinOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _SystemInformationBlockType1_cellSelectionInfo._cont = ASN1Dict([
        ('q-RxLevMin', __SystemInformationBlockType1_cellSelectionInfo_q_RxLevMin),
        ('q-RxLevMinOffset', __SystemInformationBlockType1_cellSelectionInfo_q_RxLevMinOffset),
        ])
    _SystemInformationBlockType1_cellSelectionInfo._ext = None
    _SystemInformationBlockType1_p_Max = INT(name='p-Max', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'P-Max')), opt=True)
    _SystemInformationBlockType1_freqBandIndicator = INT(name='freqBandIndicator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInformationBlockType1_freqBandIndicator._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _SystemInformationBlockType1_schedulingInfoList = SEQ_OF(name='schedulingInfoList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SchedulingInfoList')))
    _SystemInformationBlockType1_tdd_Config = SEQ(name='tdd-Config', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'TDD-Config')), opt=True)
    _SystemInformationBlockType1_si_WindowLength = ENUM(name='si-WindowLength', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInformationBlockType1_si_WindowLength._cont = ASN1Dict([('ms1', 0), ('ms2', 1), ('ms5', 2), ('ms10', 3), ('ms15', 4), ('ms20', 5), ('ms40', 6)])
    _SystemInformationBlockType1_si_WindowLength._ext = None
    _SystemInformationBlockType1_systemInfoValueTag = INT(name='systemInfoValueTag', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInformationBlockType1_systemInfoValueTag._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _SystemInformationBlockType1_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SystemInformationBlockType1_nonCriticalExtension._cont = ASN1Dict([
        ])
    _SystemInformationBlockType1_nonCriticalExtension._ext = None
    SystemInformationBlockType1._cont = ASN1Dict([
        ('cellAccessRelatedInfo', _SystemInformationBlockType1_cellAccessRelatedInfo),
        ('cellSelectionInfo', _SystemInformationBlockType1_cellSelectionInfo),
        ('p-Max', _SystemInformationBlockType1_p_Max),
        ('freqBandIndicator', _SystemInformationBlockType1_freqBandIndicator),
        ('schedulingInfoList', _SystemInformationBlockType1_schedulingInfoList),
        ('tdd-Config', _SystemInformationBlockType1_tdd_Config),
        ('si-WindowLength', _SystemInformationBlockType1_si_WindowLength),
        ('systemInfoValueTag', _SystemInformationBlockType1_systemInfoValueTag),
        ('nonCriticalExtension', _SystemInformationBlockType1_nonCriticalExtension),
        ])
    SystemInformationBlockType1._ext = None
    
    #-----< PLMN-IdentityList >-----#
    PLMN_IdentityList = SEQ_OF(name='PLMN-IdentityList', mode=MODE_TYPE)
    _PLMN_IdentityList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PLMN-IdentityInfo')))
    PLMN_IdentityList._cont = _PLMN_IdentityList__item_
    PLMN_IdentityList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=6)], ev=None, er=[])
    
    #-----< PLMN-IdentityInfo >-----#
    PLMN_IdentityInfo = SEQ(name='PLMN-IdentityInfo', mode=MODE_TYPE)
    _PLMN_IdentityInfo_plmn_Identity = SEQ(name='plmn-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PLMN-Identity')))
    _PLMN_IdentityInfo_cellReservedForOperatorUse = ENUM(name='cellReservedForOperatorUse', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PLMN_IdentityInfo_cellReservedForOperatorUse._cont = ASN1Dict([('reserved', 0), ('notReserved', 1)])
    _PLMN_IdentityInfo_cellReservedForOperatorUse._ext = None
    PLMN_IdentityInfo._cont = ASN1Dict([
        ('plmn-Identity', _PLMN_IdentityInfo_plmn_Identity),
        ('cellReservedForOperatorUse', _PLMN_IdentityInfo_cellReservedForOperatorUse),
        ])
    PLMN_IdentityInfo._ext = None
    
    #-----< SchedulingInfoList >-----#
    SchedulingInfoList = SEQ_OF(name='SchedulingInfoList', mode=MODE_TYPE)
    _SchedulingInfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SchedulingInfo')))
    SchedulingInfoList._cont = _SchedulingInfoList__item_
    SchedulingInfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< SchedulingInfo >-----#
    SchedulingInfo = SEQ(name='SchedulingInfo', mode=MODE_TYPE)
    _SchedulingInfo_si_Periodicity = ENUM(name='si-Periodicity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SchedulingInfo_si_Periodicity._cont = ASN1Dict([('rf8', 0), ('rf16', 1), ('rf32', 2), ('rf64', 3), ('rf128', 4), ('rf256', 5), ('rf512', 6)])
    _SchedulingInfo_si_Periodicity._ext = None
    _SchedulingInfo_sib_MappingInfo = SEQ_OF(name='sib-MappingInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SIB-MappingInfo')))
    SchedulingInfo._cont = ASN1Dict([
        ('si-Periodicity', _SchedulingInfo_si_Periodicity),
        ('sib-MappingInfo', _SchedulingInfo_sib_MappingInfo),
        ])
    SchedulingInfo._ext = None
    
    #-----< SIB-MappingInfo >-----#
    SIB_MappingInfo = SEQ_OF(name='SIB-MappingInfo', mode=MODE_TYPE)
    _SIB_MappingInfo__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SIB-Type')))
    SIB_MappingInfo._cont = _SIB_MappingInfo__item_
    SIB_MappingInfo._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< SIB-Type >-----#
    SIB_Type = ENUM(name='SIB-Type', mode=MODE_TYPE)
    SIB_Type._cont = ASN1Dict([('sibType3', 0), ('sibType4', 1), ('sibType5', 2), ('sibType6', 3), ('sibType7', 4), ('sibType8', 5), ('sibType9', 6), ('sibType10', 7), ('sibType11', 8), ('spare7', 9), ('spare6', 10), ('spare5', 11), ('spare4', 12), ('spare3', 13), ('spare2', 14), ('spare1', 15)])
    SIB_Type._ext = []
    
    #-----< UECapabilityEnquiry >-----#
    UECapabilityEnquiry = SEQ(name='UECapabilityEnquiry', mode=MODE_TYPE)
    _UECapabilityEnquiry_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _UECapabilityEnquiry_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __UECapabilityEnquiry_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___UECapabilityEnquiry_criticalExtensions_c1_ueCapabilityEnquiry_r8 = SEQ(name='ueCapabilityEnquiry-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UECapabilityEnquiry-r8-IEs')))
    ___UECapabilityEnquiry_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UECapabilityEnquiry_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UECapabilityEnquiry_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UECapabilityEnquiry_criticalExtensions_c1._cont = ASN1Dict([
        ('ueCapabilityEnquiry-r8', ___UECapabilityEnquiry_criticalExtensions_c1_ueCapabilityEnquiry_r8),
        ('spare3', ___UECapabilityEnquiry_criticalExtensions_c1_spare3),
        ('spare2', ___UECapabilityEnquiry_criticalExtensions_c1_spare2),
        ('spare1', ___UECapabilityEnquiry_criticalExtensions_c1_spare1),
        ])
    __UECapabilityEnquiry_criticalExtensions_c1._ext = None
    __UECapabilityEnquiry_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UECapabilityEnquiry_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __UECapabilityEnquiry_criticalExtensions_criticalExtensionsFuture._ext = None
    _UECapabilityEnquiry_criticalExtensions._cont = ASN1Dict([
        ('c1', __UECapabilityEnquiry_criticalExtensions_c1),
        ('criticalExtensionsFuture', __UECapabilityEnquiry_criticalExtensions_criticalExtensionsFuture),
        ])
    _UECapabilityEnquiry_criticalExtensions._ext = None
    UECapabilityEnquiry._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _UECapabilityEnquiry_rrc_TransactionIdentifier),
        ('criticalExtensions', _UECapabilityEnquiry_criticalExtensions),
        ])
    UECapabilityEnquiry._ext = None
    
    #-----< UECapabilityEnquiry-r8-IEs >-----#
    UECapabilityEnquiry_r8_IEs = SEQ(name='UECapabilityEnquiry-r8-IEs', mode=MODE_TYPE)
    _UECapabilityEnquiry_r8_IEs_ue_CapabilityRequest = SEQ_OF(name='ue-CapabilityRequest', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UE-CapabilityRequest')))
    _UECapabilityEnquiry_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UECapabilityEnquiry_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _UECapabilityEnquiry_r8_IEs_nonCriticalExtension._ext = None
    UECapabilityEnquiry_r8_IEs._cont = ASN1Dict([
        ('ue-CapabilityRequest', _UECapabilityEnquiry_r8_IEs_ue_CapabilityRequest),
        ('nonCriticalExtension', _UECapabilityEnquiry_r8_IEs_nonCriticalExtension),
        ])
    UECapabilityEnquiry_r8_IEs._ext = None
    
    #-----< UE-CapabilityRequest >-----#
    UE_CapabilityRequest = SEQ_OF(name='UE-CapabilityRequest', mode=MODE_TYPE)
    _UE_CapabilityRequest__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RAT-Type')))
    UE_CapabilityRequest._cont = _UE_CapabilityRequest__item_
    UE_CapabilityRequest._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< UECapabilityInformation >-----#
    UECapabilityInformation = SEQ(name='UECapabilityInformation', mode=MODE_TYPE)
    _UECapabilityInformation_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RRC-TransactionIdentifier')))
    _UECapabilityInformation_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __UECapabilityInformation_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___UECapabilityInformation_criticalExtensions_c1_ueCapabilityInformation_r8 = SEQ(name='ueCapabilityInformation-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UECapabilityInformation-r8-IEs')))
    ___UECapabilityInformation_criticalExtensions_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UECapabilityInformation_criticalExtensions_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UECapabilityInformation_criticalExtensions_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UECapabilityInformation_criticalExtensions_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UECapabilityInformation_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UECapabilityInformation_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UECapabilityInformation_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UECapabilityInformation_criticalExtensions_c1._cont = ASN1Dict([
        ('ueCapabilityInformation-r8', ___UECapabilityInformation_criticalExtensions_c1_ueCapabilityInformation_r8),
        ('spare7', ___UECapabilityInformation_criticalExtensions_c1_spare7),
        ('spare6', ___UECapabilityInformation_criticalExtensions_c1_spare6),
        ('spare5', ___UECapabilityInformation_criticalExtensions_c1_spare5),
        ('spare4', ___UECapabilityInformation_criticalExtensions_c1_spare4),
        ('spare3', ___UECapabilityInformation_criticalExtensions_c1_spare3),
        ('spare2', ___UECapabilityInformation_criticalExtensions_c1_spare2),
        ('spare1', ___UECapabilityInformation_criticalExtensions_c1_spare1),
        ])
    __UECapabilityInformation_criticalExtensions_c1._ext = None
    __UECapabilityInformation_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UECapabilityInformation_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __UECapabilityInformation_criticalExtensions_criticalExtensionsFuture._ext = None
    _UECapabilityInformation_criticalExtensions._cont = ASN1Dict([
        ('c1', __UECapabilityInformation_criticalExtensions_c1),
        ('criticalExtensionsFuture', __UECapabilityInformation_criticalExtensions_criticalExtensionsFuture),
        ])
    _UECapabilityInformation_criticalExtensions._ext = None
    UECapabilityInformation._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _UECapabilityInformation_rrc_TransactionIdentifier),
        ('criticalExtensions', _UECapabilityInformation_criticalExtensions),
        ])
    UECapabilityInformation._ext = None
    
    #-----< UECapabilityInformation-r8-IEs >-----#
    UECapabilityInformation_r8_IEs = SEQ(name='UECapabilityInformation-r8-IEs', mode=MODE_TYPE)
    _UECapabilityInformation_r8_IEs_ue_CapabilityRAT_ContainerList = SEQ_OF(name='ue-CapabilityRAT-ContainerList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UE-CapabilityRAT-ContainerList')))
    _UECapabilityInformation_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UECapabilityInformation_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _UECapabilityInformation_r8_IEs_nonCriticalExtension._ext = None
    UECapabilityInformation_r8_IEs._cont = ASN1Dict([
        ('ue-CapabilityRAT-ContainerList', _UECapabilityInformation_r8_IEs_ue_CapabilityRAT_ContainerList),
        ('nonCriticalExtension', _UECapabilityInformation_r8_IEs_nonCriticalExtension),
        ])
    UECapabilityInformation_r8_IEs._ext = None
    
    #-----< ULHandoverPreparationTransfer >-----#
    ULHandoverPreparationTransfer = SEQ(name='ULHandoverPreparationTransfer', mode=MODE_TYPE)
    _ULHandoverPreparationTransfer_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ULHandoverPreparationTransfer_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___ULHandoverPreparationTransfer_criticalExtensions_c1_ulHandoverPreparationTransfer_r8 = SEQ(name='ulHandoverPreparationTransfer-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ULHandoverPreparationTransfer-r8-IEs')))
    ___ULHandoverPreparationTransfer_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ULHandoverPreparationTransfer_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ULHandoverPreparationTransfer_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ULHandoverPreparationTransfer_criticalExtensions_c1._cont = ASN1Dict([
        ('ulHandoverPreparationTransfer-r8', ___ULHandoverPreparationTransfer_criticalExtensions_c1_ulHandoverPreparationTransfer_r8),
        ('spare3', ___ULHandoverPreparationTransfer_criticalExtensions_c1_spare3),
        ('spare2', ___ULHandoverPreparationTransfer_criticalExtensions_c1_spare2),
        ('spare1', ___ULHandoverPreparationTransfer_criticalExtensions_c1_spare1),
        ])
    __ULHandoverPreparationTransfer_criticalExtensions_c1._ext = None
    __ULHandoverPreparationTransfer_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ULHandoverPreparationTransfer_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __ULHandoverPreparationTransfer_criticalExtensions_criticalExtensionsFuture._ext = None
    _ULHandoverPreparationTransfer_criticalExtensions._cont = ASN1Dict([
        ('c1', __ULHandoverPreparationTransfer_criticalExtensions_c1),
        ('criticalExtensionsFuture', __ULHandoverPreparationTransfer_criticalExtensions_criticalExtensionsFuture),
        ])
    _ULHandoverPreparationTransfer_criticalExtensions._ext = None
    ULHandoverPreparationTransfer._cont = ASN1Dict([
        ('criticalExtensions', _ULHandoverPreparationTransfer_criticalExtensions),
        ])
    ULHandoverPreparationTransfer._ext = None
    
    #-----< ULHandoverPreparationTransfer-r8-IEs >-----#
    ULHandoverPreparationTransfer_r8_IEs = SEQ(name='ULHandoverPreparationTransfer-r8-IEs', mode=MODE_TYPE)
    _ULHandoverPreparationTransfer_r8_IEs_cdma2000_Type = ENUM(name='cdma2000-Type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CDMA2000-Type')))
    _ULHandoverPreparationTransfer_r8_IEs_meid = BIT_STR(name='meid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ULHandoverPreparationTransfer_r8_IEs_meid._const_sz = ASN1Set(rv=[56], rr=[], ev=None, er=[])
    _ULHandoverPreparationTransfer_r8_IEs_dedicatedInfo = OCT_STR(name='dedicatedInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DedicatedInfoCDMA2000')))
    _ULHandoverPreparationTransfer_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ULHandoverPreparationTransfer_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _ULHandoverPreparationTransfer_r8_IEs_nonCriticalExtension._ext = None
    ULHandoverPreparationTransfer_r8_IEs._cont = ASN1Dict([
        ('cdma2000-Type', _ULHandoverPreparationTransfer_r8_IEs_cdma2000_Type),
        ('meid', _ULHandoverPreparationTransfer_r8_IEs_meid),
        ('dedicatedInfo', _ULHandoverPreparationTransfer_r8_IEs_dedicatedInfo),
        ('nonCriticalExtension', _ULHandoverPreparationTransfer_r8_IEs_nonCriticalExtension),
        ])
    ULHandoverPreparationTransfer_r8_IEs._ext = None
    
    #-----< ULInformationTransfer >-----#
    ULInformationTransfer = SEQ(name='ULInformationTransfer', mode=MODE_TYPE)
    _ULInformationTransfer_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ULInformationTransfer_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___ULInformationTransfer_criticalExtensions_c1_ulInformationTransfer_r8 = SEQ(name='ulInformationTransfer-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ULInformationTransfer-r8-IEs')))
    ___ULInformationTransfer_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ULInformationTransfer_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ULInformationTransfer_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ULInformationTransfer_criticalExtensions_c1._cont = ASN1Dict([
        ('ulInformationTransfer-r8', ___ULInformationTransfer_criticalExtensions_c1_ulInformationTransfer_r8),
        ('spare3', ___ULInformationTransfer_criticalExtensions_c1_spare3),
        ('spare2', ___ULInformationTransfer_criticalExtensions_c1_spare2),
        ('spare1', ___ULInformationTransfer_criticalExtensions_c1_spare1),
        ])
    __ULInformationTransfer_criticalExtensions_c1._ext = None
    __ULInformationTransfer_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ULInformationTransfer_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __ULInformationTransfer_criticalExtensions_criticalExtensionsFuture._ext = None
    _ULInformationTransfer_criticalExtensions._cont = ASN1Dict([
        ('c1', __ULInformationTransfer_criticalExtensions_c1),
        ('criticalExtensionsFuture', __ULInformationTransfer_criticalExtensions_criticalExtensionsFuture),
        ])
    _ULInformationTransfer_criticalExtensions._ext = None
    ULInformationTransfer._cont = ASN1Dict([
        ('criticalExtensions', _ULInformationTransfer_criticalExtensions),
        ])
    ULInformationTransfer._ext = None
    
    #-----< ULInformationTransfer-r8-IEs >-----#
    ULInformationTransfer_r8_IEs = SEQ(name='ULInformationTransfer-r8-IEs', mode=MODE_TYPE)
    _ULInformationTransfer_r8_IEs_dedicatedInfoType = CHOICE(name='dedicatedInfoType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ULInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoNAS = OCT_STR(name='dedicatedInfoNAS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DedicatedInfoNAS')))
    __ULInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_1XRTT = OCT_STR(name='dedicatedInfoCDMA2000-1XRTT', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DedicatedInfoCDMA2000')))
    __ULInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_HRPD = OCT_STR(name='dedicatedInfoCDMA2000-HRPD', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DedicatedInfoCDMA2000')))
    _ULInformationTransfer_r8_IEs_dedicatedInfoType._cont = ASN1Dict([
        ('dedicatedInfoNAS', __ULInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoNAS),
        ('dedicatedInfoCDMA2000-1XRTT', __ULInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_1XRTT),
        ('dedicatedInfoCDMA2000-HRPD', __ULInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_HRPD),
        ])
    _ULInformationTransfer_r8_IEs_dedicatedInfoType._ext = None
    _ULInformationTransfer_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ULInformationTransfer_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _ULInformationTransfer_r8_IEs_nonCriticalExtension._ext = None
    ULInformationTransfer_r8_IEs._cont = ASN1Dict([
        ('dedicatedInfoType', _ULInformationTransfer_r8_IEs_dedicatedInfoType),
        ('nonCriticalExtension', _ULInformationTransfer_r8_IEs_nonCriticalExtension),
        ])
    ULInformationTransfer_r8_IEs._ext = None
    
    #-----< SystemInformationBlockType2 >-----#
    SystemInformationBlockType2 = SEQ(name='SystemInformationBlockType2', mode=MODE_TYPE)
    _SystemInformationBlockType2_ac_BarringInfo = SEQ(name='ac-BarringInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SystemInformationBlockType2_ac_BarringInfo_ac_BarringForEmergency = BOOL(name='ac-BarringForEmergency', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformationBlockType2_ac_BarringInfo_ac_BarringForMO_Signalling = SEQ(name='ac-BarringForMO-Signalling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'AC-BarringConfig')), opt=True)
    __SystemInformationBlockType2_ac_BarringInfo_ac_BarringForMO_Data = SEQ(name='ac-BarringForMO-Data', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'AC-BarringConfig')), opt=True)
    _SystemInformationBlockType2_ac_BarringInfo._cont = ASN1Dict([
        ('ac-BarringForEmergency', __SystemInformationBlockType2_ac_BarringInfo_ac_BarringForEmergency),
        ('ac-BarringForMO-Signalling', __SystemInformationBlockType2_ac_BarringInfo_ac_BarringForMO_Signalling),
        ('ac-BarringForMO-Data', __SystemInformationBlockType2_ac_BarringInfo_ac_BarringForMO_Data),
        ])
    _SystemInformationBlockType2_ac_BarringInfo._ext = None
    _SystemInformationBlockType2_radioResourceConfigCommon = SEQ(name='radioResourceConfigCommon', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RadioResourceConfigCommonSIB')))
    _SystemInformationBlockType2_ue_TimersAndConstants = SEQ(name='ue-TimersAndConstants', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UE-TimersAndConstants')))
    _SystemInformationBlockType2_freqInfo = SEQ(name='freqInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformationBlockType2_freqInfo_ul_CarrierFreq = INT(name='ul-CarrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueEUTRA')), opt=True)
    __SystemInformationBlockType2_freqInfo_ul_Bandwidth = ENUM(name='ul-Bandwidth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SystemInformationBlockType2_freqInfo_ul_Bandwidth._cont = ASN1Dict([('n6', 0), ('n15', 1), ('n25', 2), ('n50', 3), ('n75', 4), ('n100', 5)])
    __SystemInformationBlockType2_freqInfo_ul_Bandwidth._ext = None
    __SystemInformationBlockType2_freqInfo_additionalSpectrumEmission = INT(name='additionalSpectrumEmission', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'AdditionalSpectrumEmission')))
    _SystemInformationBlockType2_freqInfo._cont = ASN1Dict([
        ('ul-CarrierFreq', __SystemInformationBlockType2_freqInfo_ul_CarrierFreq),
        ('ul-Bandwidth', __SystemInformationBlockType2_freqInfo_ul_Bandwidth),
        ('additionalSpectrumEmission', __SystemInformationBlockType2_freqInfo_additionalSpectrumEmission),
        ])
    _SystemInformationBlockType2_freqInfo._ext = None
    _SystemInformationBlockType2_mbsfn_SubframeConfigList = SEQ_OF(name='mbsfn-SubframeConfigList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MBSFN-SubframeConfigList')), opt=True)
    _SystemInformationBlockType2_timeAlignmentTimerCommon = ENUM(name='timeAlignmentTimerCommon', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'TimeAlignmentTimer')))
    SystemInformationBlockType2._cont = ASN1Dict([
        ('ac-BarringInfo', _SystemInformationBlockType2_ac_BarringInfo),
        ('radioResourceConfigCommon', _SystemInformationBlockType2_radioResourceConfigCommon),
        ('ue-TimersAndConstants', _SystemInformationBlockType2_ue_TimersAndConstants),
        ('freqInfo', _SystemInformationBlockType2_freqInfo),
        ('mbsfn-SubframeConfigList', _SystemInformationBlockType2_mbsfn_SubframeConfigList),
        ('timeAlignmentTimerCommon', _SystemInformationBlockType2_timeAlignmentTimerCommon),
        ])
    SystemInformationBlockType2._ext = []
    
    #-----< AC-BarringConfig >-----#
    AC_BarringConfig = SEQ(name='AC-BarringConfig', mode=MODE_TYPE)
    _AC_BarringConfig_ac_BarringFactor = ENUM(name='ac-BarringFactor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AC_BarringConfig_ac_BarringFactor._cont = ASN1Dict([('p00', 0), ('p05', 1), ('p10', 2), ('p15', 3), ('p20', 4), ('p25', 5), ('p30', 6), ('p40', 7), ('p50', 8), ('p60', 9), ('p70', 10), ('p75', 11), ('p80', 12), ('p85', 13), ('p90', 14), ('p95', 15)])
    _AC_BarringConfig_ac_BarringFactor._ext = None
    _AC_BarringConfig_ac_BarringTime = ENUM(name='ac-BarringTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AC_BarringConfig_ac_BarringTime._cont = ASN1Dict([('s4', 0), ('s8', 1), ('s16', 2), ('s32', 3), ('s64', 4), ('s128', 5), ('s256', 6), ('s512', 7)])
    _AC_BarringConfig_ac_BarringTime._ext = None
    _AC_BarringConfig_ac_BarringForSpecialAC = BIT_STR(name='ac-BarringForSpecialAC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AC_BarringConfig_ac_BarringForSpecialAC._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    AC_BarringConfig._cont = ASN1Dict([
        ('ac-BarringFactor', _AC_BarringConfig_ac_BarringFactor),
        ('ac-BarringTime', _AC_BarringConfig_ac_BarringTime),
        ('ac-BarringForSpecialAC', _AC_BarringConfig_ac_BarringForSpecialAC),
        ])
    AC_BarringConfig._ext = None
    
    #-----< MBSFN-SubframeConfigList >-----#
    MBSFN_SubframeConfigList = SEQ_OF(name='MBSFN-SubframeConfigList', mode=MODE_TYPE)
    _MBSFN_SubframeConfigList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MBSFN-SubframeConfig')))
    MBSFN_SubframeConfigList._cont = _MBSFN_SubframeConfigList__item_
    MBSFN_SubframeConfigList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MBSFN-SubframeConfig >-----#
    MBSFN_SubframeConfig = SEQ(name='MBSFN-SubframeConfig', mode=MODE_TYPE)
    _MBSFN_SubframeConfig_radioframeAllocationPeriod = ENUM(name='radioframeAllocationPeriod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MBSFN_SubframeConfig_radioframeAllocationPeriod._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2), ('n8', 3), ('n16', 4), ('n32', 5)])
    _MBSFN_SubframeConfig_radioframeAllocationPeriod._ext = None
    _MBSFN_SubframeConfig_radioframeAllocationOffset = INT(name='radioframeAllocationOffset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MBSFN_SubframeConfig_radioframeAllocationOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _MBSFN_SubframeConfig_subframeAllocation = CHOICE(name='subframeAllocation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __MBSFN_SubframeConfig_subframeAllocation_oneFrame = BIT_STR(name='oneFrame', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MBSFN_SubframeConfig_subframeAllocation_oneFrame._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    __MBSFN_SubframeConfig_subframeAllocation_fourFrames = BIT_STR(name='fourFrames', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MBSFN_SubframeConfig_subframeAllocation_fourFrames._const_sz = ASN1Set(rv=[24], rr=[], ev=None, er=[])
    _MBSFN_SubframeConfig_subframeAllocation._cont = ASN1Dict([
        ('oneFrame', __MBSFN_SubframeConfig_subframeAllocation_oneFrame),
        ('fourFrames', __MBSFN_SubframeConfig_subframeAllocation_fourFrames),
        ])
    _MBSFN_SubframeConfig_subframeAllocation._ext = None
    MBSFN_SubframeConfig._cont = ASN1Dict([
        ('radioframeAllocationPeriod', _MBSFN_SubframeConfig_radioframeAllocationPeriod),
        ('radioframeAllocationOffset', _MBSFN_SubframeConfig_radioframeAllocationOffset),
        ('subframeAllocation', _MBSFN_SubframeConfig_subframeAllocation),
        ])
    MBSFN_SubframeConfig._ext = None
    
    #-----< SystemInformationBlockType3 >-----#
    SystemInformationBlockType3 = SEQ(name='SystemInformationBlockType3', mode=MODE_TYPE)
    _SystemInformationBlockType3_cellReselectionInfoCommon = SEQ(name='cellReselectionInfoCommon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformationBlockType3_cellReselectionInfoCommon_q_Hyst = ENUM(name='q-Hyst', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformationBlockType3_cellReselectionInfoCommon_q_Hyst._cont = ASN1Dict([('dB0', 0), ('dB1', 1), ('dB2', 2), ('dB3', 3), ('dB4', 4), ('dB5', 5), ('dB6', 6), ('dB8', 7), ('dB10', 8), ('dB12', 9), ('dB14', 10), ('dB16', 11), ('dB18', 12), ('dB20', 13), ('dB22', 14), ('dB24', 15)])
    __SystemInformationBlockType3_cellReselectionInfoCommon_q_Hyst._ext = None
    __SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars = SEQ(name='speedStateReselectionPars', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_mobilityStateParameters = SEQ(name='mobilityStateParameters', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MobilityStateParameters')))
    ___SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF = SEQ(name='q-HystSF', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF_sf_Medium = ENUM(name='sf-Medium', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF_sf_Medium._cont = ASN1Dict([('dB-6', 0), ('dB-4', 1), ('dB-2', 2), ('dB0', 3)])
    ____SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF_sf_Medium._ext = None
    ____SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF_sf_High = ENUM(name='sf-High', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF_sf_High._cont = ASN1Dict([('dB-6', 0), ('dB-4', 1), ('dB-2', 2), ('dB0', 3)])
    ____SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF_sf_High._ext = None
    ___SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF._cont = ASN1Dict([
        ('sf-Medium', ____SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF_sf_Medium),
        ('sf-High', ____SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF_sf_High),
        ])
    ___SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF._ext = None
    __SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars._cont = ASN1Dict([
        ('mobilityStateParameters', ___SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_mobilityStateParameters),
        ('q-HystSF', ___SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF),
        ])
    __SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars._ext = None
    _SystemInformationBlockType3_cellReselectionInfoCommon._cont = ASN1Dict([
        ('q-Hyst', __SystemInformationBlockType3_cellReselectionInfoCommon_q_Hyst),
        ('speedStateReselectionPars', __SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars),
        ])
    _SystemInformationBlockType3_cellReselectionInfoCommon._ext = None
    _SystemInformationBlockType3_cellReselectionServingFreqInfo = SEQ(name='cellReselectionServingFreqInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformationBlockType3_cellReselectionServingFreqInfo_s_NonIntraSearch = INT(name='s-NonIntraSearch', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReselectionThreshold')), opt=True)
    __SystemInformationBlockType3_cellReselectionServingFreqInfo_threshServingLow = INT(name='threshServingLow', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReselectionThreshold')))
    __SystemInformationBlockType3_cellReselectionServingFreqInfo_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')))
    _SystemInformationBlockType3_cellReselectionServingFreqInfo._cont = ASN1Dict([
        ('s-NonIntraSearch', __SystemInformationBlockType3_cellReselectionServingFreqInfo_s_NonIntraSearch),
        ('threshServingLow', __SystemInformationBlockType3_cellReselectionServingFreqInfo_threshServingLow),
        ('cellReselectionPriority', __SystemInformationBlockType3_cellReselectionServingFreqInfo_cellReselectionPriority),
        ])
    _SystemInformationBlockType3_cellReselectionServingFreqInfo._ext = None
    _SystemInformationBlockType3_intraFreqCellReselectionInfo = SEQ(name='intraFreqCellReselectionInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemInformationBlockType3_intraFreqCellReselectionInfo_q_RxLevMin = INT(name='q-RxLevMin', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Q-RxLevMin')))
    __SystemInformationBlockType3_intraFreqCellReselectionInfo_p_Max = INT(name='p-Max', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'P-Max')), opt=True)
    __SystemInformationBlockType3_intraFreqCellReselectionInfo_s_IntraSearch = INT(name='s-IntraSearch', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReselectionThreshold')), opt=True)
    __SystemInformationBlockType3_intraFreqCellReselectionInfo_allowedMeasBandwidth = ENUM(name='allowedMeasBandwidth', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'AllowedMeasBandwidth')), opt=True)
    __SystemInformationBlockType3_intraFreqCellReselectionInfo_presenceAntennaPort1 = BOOL(name='presenceAntennaPort1', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PresenceAntennaPort1')))
    __SystemInformationBlockType3_intraFreqCellReselectionInfo_neighCellConfig = BIT_STR(name='neighCellConfig', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'NeighCellConfig')))
    __SystemInformationBlockType3_intraFreqCellReselectionInfo_t_ReselectionEUTRA = INT(name='t-ReselectionEUTRA', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'T-Reselection')))
    __SystemInformationBlockType3_intraFreqCellReselectionInfo_t_ReselectionEUTRA_SF = SEQ(name='t-ReselectionEUTRA-SF', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SpeedStateScaleFactors')), opt=True)
    _SystemInformationBlockType3_intraFreqCellReselectionInfo._cont = ASN1Dict([
        ('q-RxLevMin', __SystemInformationBlockType3_intraFreqCellReselectionInfo_q_RxLevMin),
        ('p-Max', __SystemInformationBlockType3_intraFreqCellReselectionInfo_p_Max),
        ('s-IntraSearch', __SystemInformationBlockType3_intraFreqCellReselectionInfo_s_IntraSearch),
        ('allowedMeasBandwidth', __SystemInformationBlockType3_intraFreqCellReselectionInfo_allowedMeasBandwidth),
        ('presenceAntennaPort1', __SystemInformationBlockType3_intraFreqCellReselectionInfo_presenceAntennaPort1),
        ('neighCellConfig', __SystemInformationBlockType3_intraFreqCellReselectionInfo_neighCellConfig),
        ('t-ReselectionEUTRA', __SystemInformationBlockType3_intraFreqCellReselectionInfo_t_ReselectionEUTRA),
        ('t-ReselectionEUTRA-SF', __SystemInformationBlockType3_intraFreqCellReselectionInfo_t_ReselectionEUTRA_SF),
        ])
    _SystemInformationBlockType3_intraFreqCellReselectionInfo._ext = None
    SystemInformationBlockType3._cont = ASN1Dict([
        ('cellReselectionInfoCommon', _SystemInformationBlockType3_cellReselectionInfoCommon),
        ('cellReselectionServingFreqInfo', _SystemInformationBlockType3_cellReselectionServingFreqInfo),
        ('intraFreqCellReselectionInfo', _SystemInformationBlockType3_intraFreqCellReselectionInfo),
        ])
    SystemInformationBlockType3._ext = []
    
    #-----< SystemInformationBlockType4 >-----#
    SystemInformationBlockType4 = SEQ(name='SystemInformationBlockType4', mode=MODE_TYPE)
    _SystemInformationBlockType4_intraFreqNeighCellList = SEQ_OF(name='intraFreqNeighCellList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IntraFreqNeighCellList')), opt=True)
    _SystemInformationBlockType4_intraFreqBlackCellList = SEQ_OF(name='intraFreqBlackCellList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IntraFreqBlackCellList')), opt=True)
    _SystemInformationBlockType4_csg_PhysCellIdRange = SEQ(name='csg-PhysCellIdRange', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdRange')), opt=True)
    SystemInformationBlockType4._cont = ASN1Dict([
        ('intraFreqNeighCellList', _SystemInformationBlockType4_intraFreqNeighCellList),
        ('intraFreqBlackCellList', _SystemInformationBlockType4_intraFreqBlackCellList),
        ('csg-PhysCellIdRange', _SystemInformationBlockType4_csg_PhysCellIdRange),
        ])
    SystemInformationBlockType4._ext = []
    
    #-----< IntraFreqNeighCellList >-----#
    IntraFreqNeighCellList = SEQ_OF(name='IntraFreqNeighCellList', mode=MODE_TYPE)
    _IntraFreqNeighCellList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IntraFreqNeighCellInfo')))
    IntraFreqNeighCellList._cont = _IntraFreqNeighCellList__item_
    IntraFreqNeighCellList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< IntraFreqNeighCellInfo >-----#
    IntraFreqNeighCellInfo = SEQ(name='IntraFreqNeighCellInfo', mode=MODE_TYPE)
    _IntraFreqNeighCellInfo_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellId')))
    _IntraFreqNeighCellInfo_q_OffsetCell = ENUM(name='q-OffsetCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Q-OffsetRange')))
    IntraFreqNeighCellInfo._cont = ASN1Dict([
        ('physCellId', _IntraFreqNeighCellInfo_physCellId),
        ('q-OffsetCell', _IntraFreqNeighCellInfo_q_OffsetCell),
        ])
    IntraFreqNeighCellInfo._ext = []
    
    #-----< IntraFreqBlackCellList >-----#
    IntraFreqBlackCellList = SEQ_OF(name='IntraFreqBlackCellList', mode=MODE_TYPE)
    _IntraFreqBlackCellList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdRange')))
    IntraFreqBlackCellList._cont = _IntraFreqBlackCellList__item_
    IntraFreqBlackCellList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< SystemInformationBlockType5 >-----#
    SystemInformationBlockType5 = SEQ(name='SystemInformationBlockType5', mode=MODE_TYPE)
    _SystemInformationBlockType5_interFreqCarrierFreqList = SEQ_OF(name='interFreqCarrierFreqList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'InterFreqCarrierFreqList')))
    SystemInformationBlockType5._cont = ASN1Dict([
        ('interFreqCarrierFreqList', _SystemInformationBlockType5_interFreqCarrierFreqList),
        ])
    SystemInformationBlockType5._ext = []
    
    #-----< InterFreqCarrierFreqList >-----#
    InterFreqCarrierFreqList = SEQ_OF(name='InterFreqCarrierFreqList', mode=MODE_TYPE)
    _InterFreqCarrierFreqList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'InterFreqCarrierFreqInfo')))
    InterFreqCarrierFreqList._cont = _InterFreqCarrierFreqList__item_
    InterFreqCarrierFreqList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< InterFreqCarrierFreqInfo >-----#
    InterFreqCarrierFreqInfo = SEQ(name='InterFreqCarrierFreqInfo', mode=MODE_TYPE)
    _InterFreqCarrierFreqInfo_dl_CarrierFreq = INT(name='dl-CarrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueEUTRA')))
    _InterFreqCarrierFreqInfo_q_RxLevMin = INT(name='q-RxLevMin', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Q-RxLevMin')))
    _InterFreqCarrierFreqInfo_p_Max = INT(name='p-Max', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'P-Max')), opt=True)
    _InterFreqCarrierFreqInfo_t_ReselectionEUTRA = INT(name='t-ReselectionEUTRA', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'T-Reselection')))
    _InterFreqCarrierFreqInfo_t_ReselectionEUTRA_SF = SEQ(name='t-ReselectionEUTRA-SF', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SpeedStateScaleFactors')), opt=True)
    _InterFreqCarrierFreqInfo_threshX_High = INT(name='threshX-High', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReselectionThreshold')))
    _InterFreqCarrierFreqInfo_threshX_Low = INT(name='threshX-Low', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReselectionThreshold')))
    _InterFreqCarrierFreqInfo_allowedMeasBandwidth = ENUM(name='allowedMeasBandwidth', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'AllowedMeasBandwidth')))
    _InterFreqCarrierFreqInfo_presenceAntennaPort1 = BOOL(name='presenceAntennaPort1', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PresenceAntennaPort1')))
    _InterFreqCarrierFreqInfo_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')), opt=True)
    _InterFreqCarrierFreqInfo_neighCellConfig = BIT_STR(name='neighCellConfig', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'NeighCellConfig')))
    _InterFreqCarrierFreqInfo_q_OffsetFreq = ENUM(name='q-OffsetFreq', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Q-OffsetRange')), default='dB0')
    _InterFreqCarrierFreqInfo_interFreqNeighCellList = SEQ_OF(name='interFreqNeighCellList', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'InterFreqNeighCellList')), opt=True)
    _InterFreqCarrierFreqInfo_interFreqBlackCellList = SEQ_OF(name='interFreqBlackCellList', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'InterFreqBlackCellList')), opt=True)
    InterFreqCarrierFreqInfo._cont = ASN1Dict([
        ('dl-CarrierFreq', _InterFreqCarrierFreqInfo_dl_CarrierFreq),
        ('q-RxLevMin', _InterFreqCarrierFreqInfo_q_RxLevMin),
        ('p-Max', _InterFreqCarrierFreqInfo_p_Max),
        ('t-ReselectionEUTRA', _InterFreqCarrierFreqInfo_t_ReselectionEUTRA),
        ('t-ReselectionEUTRA-SF', _InterFreqCarrierFreqInfo_t_ReselectionEUTRA_SF),
        ('threshX-High', _InterFreqCarrierFreqInfo_threshX_High),
        ('threshX-Low', _InterFreqCarrierFreqInfo_threshX_Low),
        ('allowedMeasBandwidth', _InterFreqCarrierFreqInfo_allowedMeasBandwidth),
        ('presenceAntennaPort1', _InterFreqCarrierFreqInfo_presenceAntennaPort1),
        ('cellReselectionPriority', _InterFreqCarrierFreqInfo_cellReselectionPriority),
        ('neighCellConfig', _InterFreqCarrierFreqInfo_neighCellConfig),
        ('q-OffsetFreq', _InterFreqCarrierFreqInfo_q_OffsetFreq),
        ('interFreqNeighCellList', _InterFreqCarrierFreqInfo_interFreqNeighCellList),
        ('interFreqBlackCellList', _InterFreqCarrierFreqInfo_interFreqBlackCellList),
        ])
    InterFreqCarrierFreqInfo._ext = []
    
    #-----< InterFreqNeighCellList >-----#
    InterFreqNeighCellList = SEQ_OF(name='InterFreqNeighCellList', mode=MODE_TYPE)
    _InterFreqNeighCellList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'InterFreqNeighCellInfo')))
    InterFreqNeighCellList._cont = _InterFreqNeighCellList__item_
    InterFreqNeighCellList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< InterFreqNeighCellInfo >-----#
    InterFreqNeighCellInfo = SEQ(name='InterFreqNeighCellInfo', mode=MODE_TYPE)
    _InterFreqNeighCellInfo_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellId')))
    _InterFreqNeighCellInfo_q_OffsetCell = ENUM(name='q-OffsetCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Q-OffsetRange')))
    InterFreqNeighCellInfo._cont = ASN1Dict([
        ('physCellId', _InterFreqNeighCellInfo_physCellId),
        ('q-OffsetCell', _InterFreqNeighCellInfo_q_OffsetCell),
        ])
    InterFreqNeighCellInfo._ext = None
    
    #-----< InterFreqBlackCellList >-----#
    InterFreqBlackCellList = SEQ_OF(name='InterFreqBlackCellList', mode=MODE_TYPE)
    _InterFreqBlackCellList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdRange')))
    InterFreqBlackCellList._cont = _InterFreqBlackCellList__item_
    InterFreqBlackCellList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< SystemInformationBlockType6 >-----#
    SystemInformationBlockType6 = SEQ(name='SystemInformationBlockType6', mode=MODE_TYPE)
    _SystemInformationBlockType6_carrierFreqListUTRA_FDD = SEQ_OF(name='carrierFreqListUTRA-FDD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqListUTRA-FDD')), opt=True)
    _SystemInformationBlockType6_carrierFreqListUTRA_TDD = SEQ_OF(name='carrierFreqListUTRA-TDD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqListUTRA-TDD')), opt=True)
    _SystemInformationBlockType6_t_ReselectionUTRA = INT(name='t-ReselectionUTRA', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'T-Reselection')))
    _SystemInformationBlockType6_t_ReselectionUTRA_SF = SEQ(name='t-ReselectionUTRA-SF', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SpeedStateScaleFactors')), opt=True)
    SystemInformationBlockType6._cont = ASN1Dict([
        ('carrierFreqListUTRA-FDD', _SystemInformationBlockType6_carrierFreqListUTRA_FDD),
        ('carrierFreqListUTRA-TDD', _SystemInformationBlockType6_carrierFreqListUTRA_TDD),
        ('t-ReselectionUTRA', _SystemInformationBlockType6_t_ReselectionUTRA),
        ('t-ReselectionUTRA-SF', _SystemInformationBlockType6_t_ReselectionUTRA_SF),
        ])
    SystemInformationBlockType6._ext = []
    
    #-----< CarrierFreqListUTRA-FDD >-----#
    CarrierFreqListUTRA_FDD = SEQ_OF(name='CarrierFreqListUTRA-FDD', mode=MODE_TYPE)
    _CarrierFreqListUTRA_FDD__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqUTRA-FDD')))
    CarrierFreqListUTRA_FDD._cont = _CarrierFreqListUTRA_FDD__item_
    CarrierFreqListUTRA_FDD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< CarrierFreqUTRA-FDD >-----#
    CarrierFreqUTRA_FDD = SEQ(name='CarrierFreqUTRA-FDD', mode=MODE_TYPE)
    _CarrierFreqUTRA_FDD_carrierFreq = INT(name='carrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueUTRA')))
    _CarrierFreqUTRA_FDD_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')), opt=True)
    _CarrierFreqUTRA_FDD_threshX_High = INT(name='threshX-High', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReselectionThreshold')))
    _CarrierFreqUTRA_FDD_threshX_Low = INT(name='threshX-Low', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReselectionThreshold')))
    _CarrierFreqUTRA_FDD_q_RxLevMin = INT(name='q-RxLevMin', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CarrierFreqUTRA_FDD_q_RxLevMin._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-60, ub=-13)], ev=None, er=[])
    _CarrierFreqUTRA_FDD_p_MaxUTRA = INT(name='p-MaxUTRA', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CarrierFreqUTRA_FDD_p_MaxUTRA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-50, ub=33)], ev=None, er=[])
    _CarrierFreqUTRA_FDD_q_QualMin = INT(name='q-QualMin', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CarrierFreqUTRA_FDD_q_QualMin._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-24, ub=0)], ev=None, er=[])
    CarrierFreqUTRA_FDD._cont = ASN1Dict([
        ('carrierFreq', _CarrierFreqUTRA_FDD_carrierFreq),
        ('cellReselectionPriority', _CarrierFreqUTRA_FDD_cellReselectionPriority),
        ('threshX-High', _CarrierFreqUTRA_FDD_threshX_High),
        ('threshX-Low', _CarrierFreqUTRA_FDD_threshX_Low),
        ('q-RxLevMin', _CarrierFreqUTRA_FDD_q_RxLevMin),
        ('p-MaxUTRA', _CarrierFreqUTRA_FDD_p_MaxUTRA),
        ('q-QualMin', _CarrierFreqUTRA_FDD_q_QualMin),
        ])
    CarrierFreqUTRA_FDD._ext = []
    
    #-----< CarrierFreqListUTRA-TDD >-----#
    CarrierFreqListUTRA_TDD = SEQ_OF(name='CarrierFreqListUTRA-TDD', mode=MODE_TYPE)
    _CarrierFreqListUTRA_TDD__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqUTRA-TDD')))
    CarrierFreqListUTRA_TDD._cont = _CarrierFreqListUTRA_TDD__item_
    CarrierFreqListUTRA_TDD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< CarrierFreqUTRA-TDD >-----#
    CarrierFreqUTRA_TDD = SEQ(name='CarrierFreqUTRA-TDD', mode=MODE_TYPE)
    _CarrierFreqUTRA_TDD_carrierFreq = INT(name='carrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueUTRA')))
    _CarrierFreqUTRA_TDD_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')), opt=True)
    _CarrierFreqUTRA_TDD_threshX_High = INT(name='threshX-High', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReselectionThreshold')))
    _CarrierFreqUTRA_TDD_threshX_Low = INT(name='threshX-Low', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReselectionThreshold')))
    _CarrierFreqUTRA_TDD_q_RxLevMin = INT(name='q-RxLevMin', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CarrierFreqUTRA_TDD_q_RxLevMin._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-60, ub=-13)], ev=None, er=[])
    _CarrierFreqUTRA_TDD_p_MaxUTRA = INT(name='p-MaxUTRA', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CarrierFreqUTRA_TDD_p_MaxUTRA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-50, ub=33)], ev=None, er=[])
    CarrierFreqUTRA_TDD._cont = ASN1Dict([
        ('carrierFreq', _CarrierFreqUTRA_TDD_carrierFreq),
        ('cellReselectionPriority', _CarrierFreqUTRA_TDD_cellReselectionPriority),
        ('threshX-High', _CarrierFreqUTRA_TDD_threshX_High),
        ('threshX-Low', _CarrierFreqUTRA_TDD_threshX_Low),
        ('q-RxLevMin', _CarrierFreqUTRA_TDD_q_RxLevMin),
        ('p-MaxUTRA', _CarrierFreqUTRA_TDD_p_MaxUTRA),
        ])
    CarrierFreqUTRA_TDD._ext = []
    
    #-----< SystemInformationBlockType7 >-----#
    SystemInformationBlockType7 = SEQ(name='SystemInformationBlockType7', mode=MODE_TYPE)
    _SystemInformationBlockType7_t_ReselectionGERAN = INT(name='t-ReselectionGERAN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'T-Reselection')))
    _SystemInformationBlockType7_t_ReselectionGERAN_SF = SEQ(name='t-ReselectionGERAN-SF', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SpeedStateScaleFactors')), opt=True)
    _SystemInformationBlockType7_carrierFreqsInfoList = SEQ_OF(name='carrierFreqsInfoList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqsInfoListGERAN')), opt=True)
    SystemInformationBlockType7._cont = ASN1Dict([
        ('t-ReselectionGERAN', _SystemInformationBlockType7_t_ReselectionGERAN),
        ('t-ReselectionGERAN-SF', _SystemInformationBlockType7_t_ReselectionGERAN_SF),
        ('carrierFreqsInfoList', _SystemInformationBlockType7_carrierFreqsInfoList),
        ])
    SystemInformationBlockType7._ext = []
    
    #-----< CarrierFreqsInfoListGERAN >-----#
    CarrierFreqsInfoListGERAN = SEQ_OF(name='CarrierFreqsInfoListGERAN', mode=MODE_TYPE)
    _CarrierFreqsInfoListGERAN__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqsInfoGERAN')))
    CarrierFreqsInfoListGERAN._cont = _CarrierFreqsInfoListGERAN__item_
    CarrierFreqsInfoListGERAN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< CarrierFreqsInfoGERAN >-----#
    CarrierFreqsInfoGERAN = SEQ(name='CarrierFreqsInfoGERAN', mode=MODE_TYPE)
    _CarrierFreqsInfoGERAN_carrierFreqs = SEQ(name='carrierFreqs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqsGERAN')))
    _CarrierFreqsInfoGERAN_commonInfo = SEQ(name='commonInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CarrierFreqsInfoGERAN_commonInfo_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')), opt=True)
    __CarrierFreqsInfoGERAN_commonInfo_ncc_Permitted = BIT_STR(name='ncc-Permitted', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CarrierFreqsInfoGERAN_commonInfo_ncc_Permitted._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    __CarrierFreqsInfoGERAN_commonInfo_q_RxLevMin = INT(name='q-RxLevMin', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CarrierFreqsInfoGERAN_commonInfo_q_RxLevMin._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=45)], ev=None, er=[])
    __CarrierFreqsInfoGERAN_commonInfo_p_MaxGERAN = INT(name='p-MaxGERAN', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CarrierFreqsInfoGERAN_commonInfo_p_MaxGERAN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    __CarrierFreqsInfoGERAN_commonInfo_threshX_High = INT(name='threshX-High', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReselectionThreshold')))
    __CarrierFreqsInfoGERAN_commonInfo_threshX_Low = INT(name='threshX-Low', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReselectionThreshold')))
    _CarrierFreqsInfoGERAN_commonInfo._cont = ASN1Dict([
        ('cellReselectionPriority', __CarrierFreqsInfoGERAN_commonInfo_cellReselectionPriority),
        ('ncc-Permitted', __CarrierFreqsInfoGERAN_commonInfo_ncc_Permitted),
        ('q-RxLevMin', __CarrierFreqsInfoGERAN_commonInfo_q_RxLevMin),
        ('p-MaxGERAN', __CarrierFreqsInfoGERAN_commonInfo_p_MaxGERAN),
        ('threshX-High', __CarrierFreqsInfoGERAN_commonInfo_threshX_High),
        ('threshX-Low', __CarrierFreqsInfoGERAN_commonInfo_threshX_Low),
        ])
    _CarrierFreqsInfoGERAN_commonInfo._ext = None
    CarrierFreqsInfoGERAN._cont = ASN1Dict([
        ('carrierFreqs', _CarrierFreqsInfoGERAN_carrierFreqs),
        ('commonInfo', _CarrierFreqsInfoGERAN_commonInfo),
        ])
    CarrierFreqsInfoGERAN._ext = []
    
    #-----< SystemInformationBlockType8 >-----#
    SystemInformationBlockType8 = SEQ(name='SystemInformationBlockType8', mode=MODE_TYPE)
    _SystemInformationBlockType8_systemTimeInfo = SEQ(name='systemTimeInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemTimeInfoCDMA2000')), opt=True)
    _SystemInformationBlockType8_searchWindowSize = INT(name='searchWindowSize', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SystemInformationBlockType8_searchWindowSize._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _SystemInformationBlockType8_parametersHRPD = SEQ(name='parametersHRPD', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SystemInformationBlockType8_parametersHRPD_preRegistrationInfoHRPD = SEQ(name='preRegistrationInfoHRPD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PreRegistrationInfoHRPD')))
    __SystemInformationBlockType8_parametersHRPD_cellReselectionParametersHRPD = SEQ(name='cellReselectionParametersHRPD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionParametersCDMA2000')), opt=True)
    _SystemInformationBlockType8_parametersHRPD._cont = ASN1Dict([
        ('preRegistrationInfoHRPD', __SystemInformationBlockType8_parametersHRPD_preRegistrationInfoHRPD),
        ('cellReselectionParametersHRPD', __SystemInformationBlockType8_parametersHRPD_cellReselectionParametersHRPD),
        ])
    _SystemInformationBlockType8_parametersHRPD._ext = None
    _SystemInformationBlockType8_parameters1XRTT = SEQ(name='parameters1XRTT', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SystemInformationBlockType8_parameters1XRTT_csfb_RegistrationParam1XRTT = SEQ(name='csfb-RegistrationParam1XRTT', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CSFB-RegistrationParam1XRTT')), opt=True)
    __SystemInformationBlockType8_parameters1XRTT_longCodeState1XRTT = BIT_STR(name='longCodeState1XRTT', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SystemInformationBlockType8_parameters1XRTT_longCodeState1XRTT._const_sz = ASN1Set(rv=[42], rr=[], ev=None, er=[])
    __SystemInformationBlockType8_parameters1XRTT_cellReselectionParameters1XRTT = SEQ(name='cellReselectionParameters1XRTT', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionParametersCDMA2000')), opt=True)
    _SystemInformationBlockType8_parameters1XRTT._cont = ASN1Dict([
        ('csfb-RegistrationParam1XRTT', __SystemInformationBlockType8_parameters1XRTT_csfb_RegistrationParam1XRTT),
        ('longCodeState1XRTT', __SystemInformationBlockType8_parameters1XRTT_longCodeState1XRTT),
        ('cellReselectionParameters1XRTT', __SystemInformationBlockType8_parameters1XRTT_cellReselectionParameters1XRTT),
        ])
    _SystemInformationBlockType8_parameters1XRTT._ext = None
    SystemInformationBlockType8._cont = ASN1Dict([
        ('systemTimeInfo', _SystemInformationBlockType8_systemTimeInfo),
        ('searchWindowSize', _SystemInformationBlockType8_searchWindowSize),
        ('parametersHRPD', _SystemInformationBlockType8_parametersHRPD),
        ('parameters1XRTT', _SystemInformationBlockType8_parameters1XRTT),
        ])
    SystemInformationBlockType8._ext = []
    
    #-----< CellReselectionParametersCDMA2000 >-----#
    CellReselectionParametersCDMA2000 = SEQ(name='CellReselectionParametersCDMA2000', mode=MODE_TYPE)
    _CellReselectionParametersCDMA2000_bandClassList = SEQ_OF(name='bandClassList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandClassListCDMA2000')))
    _CellReselectionParametersCDMA2000_neighCellList = SEQ_OF(name='neighCellList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'NeighCellListCDMA2000')))
    _CellReselectionParametersCDMA2000_t_ReselectionCDMA2000 = INT(name='t-ReselectionCDMA2000', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'T-Reselection')))
    _CellReselectionParametersCDMA2000_t_ReselectionCDMA2000_SF = SEQ(name='t-ReselectionCDMA2000-SF', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SpeedStateScaleFactors')), opt=True)
    CellReselectionParametersCDMA2000._cont = ASN1Dict([
        ('bandClassList', _CellReselectionParametersCDMA2000_bandClassList),
        ('neighCellList', _CellReselectionParametersCDMA2000_neighCellList),
        ('t-ReselectionCDMA2000', _CellReselectionParametersCDMA2000_t_ReselectionCDMA2000),
        ('t-ReselectionCDMA2000-SF', _CellReselectionParametersCDMA2000_t_ReselectionCDMA2000_SF),
        ])
    CellReselectionParametersCDMA2000._ext = None
    
    #-----< NeighCellListCDMA2000 >-----#
    NeighCellListCDMA2000 = SEQ_OF(name='NeighCellListCDMA2000', mode=MODE_TYPE)
    _NeighCellListCDMA2000__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'NeighCellCDMA2000')))
    NeighCellListCDMA2000._cont = _NeighCellListCDMA2000__item_
    NeighCellListCDMA2000._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< NeighCellCDMA2000 >-----#
    NeighCellCDMA2000 = SEQ(name='NeighCellCDMA2000', mode=MODE_TYPE)
    _NeighCellCDMA2000_bandClass = ENUM(name='bandClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandclassCDMA2000')))
    _NeighCellCDMA2000_neighCellsPerFreqList = SEQ_OF(name='neighCellsPerFreqList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'NeighCellsPerBandclassListCDMA2000')))
    NeighCellCDMA2000._cont = ASN1Dict([
        ('bandClass', _NeighCellCDMA2000_bandClass),
        ('neighCellsPerFreqList', _NeighCellCDMA2000_neighCellsPerFreqList),
        ])
    NeighCellCDMA2000._ext = None
    
    #-----< NeighCellsPerBandclassListCDMA2000 >-----#
    NeighCellsPerBandclassListCDMA2000 = SEQ_OF(name='NeighCellsPerBandclassListCDMA2000', mode=MODE_TYPE)
    _NeighCellsPerBandclassListCDMA2000__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'NeighCellsPerBandclassCDMA2000')))
    NeighCellsPerBandclassListCDMA2000._cont = _NeighCellsPerBandclassListCDMA2000__item_
    NeighCellsPerBandclassListCDMA2000._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< NeighCellsPerBandclassCDMA2000 >-----#
    NeighCellsPerBandclassCDMA2000 = SEQ(name='NeighCellsPerBandclassCDMA2000', mode=MODE_TYPE)
    _NeighCellsPerBandclassCDMA2000_arfcn = INT(name='arfcn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueCDMA2000')))
    _NeighCellsPerBandclassCDMA2000_physCellIdList = SEQ_OF(name='physCellIdList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdListCDMA2000')))
    NeighCellsPerBandclassCDMA2000._cont = ASN1Dict([
        ('arfcn', _NeighCellsPerBandclassCDMA2000_arfcn),
        ('physCellIdList', _NeighCellsPerBandclassCDMA2000_physCellIdList),
        ])
    NeighCellsPerBandclassCDMA2000._ext = None
    
    #-----< PhysCellIdListCDMA2000 >-----#
    PhysCellIdListCDMA2000 = SEQ_OF(name='PhysCellIdListCDMA2000', mode=MODE_TYPE)
    _PhysCellIdListCDMA2000__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdCDMA2000')))
    PhysCellIdListCDMA2000._cont = _PhysCellIdListCDMA2000__item_
    PhysCellIdListCDMA2000._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< BandClassListCDMA2000 >-----#
    BandClassListCDMA2000 = SEQ_OF(name='BandClassListCDMA2000', mode=MODE_TYPE)
    _BandClassListCDMA2000__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandClassInfoCDMA2000')))
    BandClassListCDMA2000._cont = _BandClassListCDMA2000__item_
    BandClassListCDMA2000._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< BandClassInfoCDMA2000 >-----#
    BandClassInfoCDMA2000 = SEQ(name='BandClassInfoCDMA2000', mode=MODE_TYPE)
    _BandClassInfoCDMA2000_bandClass = ENUM(name='bandClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandclassCDMA2000')))
    _BandClassInfoCDMA2000_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellReselectionPriority')), opt=True)
    _BandClassInfoCDMA2000_threshX_High = INT(name='threshX-High', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BandClassInfoCDMA2000_threshX_High._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _BandClassInfoCDMA2000_threshX_Low = INT(name='threshX-Low', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BandClassInfoCDMA2000_threshX_Low._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    BandClassInfoCDMA2000._cont = ASN1Dict([
        ('bandClass', _BandClassInfoCDMA2000_bandClass),
        ('cellReselectionPriority', _BandClassInfoCDMA2000_cellReselectionPriority),
        ('threshX-High', _BandClassInfoCDMA2000_threshX_High),
        ('threshX-Low', _BandClassInfoCDMA2000_threshX_Low),
        ])
    BandClassInfoCDMA2000._ext = []
    
    #-----< SystemInformationBlockType9 >-----#
    SystemInformationBlockType9 = SEQ(name='SystemInformationBlockType9', mode=MODE_TYPE)
    _SystemInformationBlockType9_hnb_Name = OCT_STR(name='hnb-Name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SystemInformationBlockType9_hnb_Name._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=48)], ev=None, er=[])
    SystemInformationBlockType9._cont = ASN1Dict([
        ('hnb-Name', _SystemInformationBlockType9_hnb_Name),
        ])
    SystemInformationBlockType9._ext = []
    
    #-----< SystemInformationBlockType10 >-----#
    SystemInformationBlockType10 = SEQ(name='SystemInformationBlockType10', mode=MODE_TYPE)
    _SystemInformationBlockType10_messageIdentifier = BIT_STR(name='messageIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInformationBlockType10_messageIdentifier._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _SystemInformationBlockType10_serialNumber = BIT_STR(name='serialNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInformationBlockType10_serialNumber._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _SystemInformationBlockType10_warningType = OCT_STR(name='warningType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInformationBlockType10_warningType._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _SystemInformationBlockType10_warningSecurityInfo = OCT_STR(name='warningSecurityInfo', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SystemInformationBlockType10_warningSecurityInfo._const_sz = ASN1Set(rv=[50], rr=[], ev=None, er=[])
    SystemInformationBlockType10._cont = ASN1Dict([
        ('messageIdentifier', _SystemInformationBlockType10_messageIdentifier),
        ('serialNumber', _SystemInformationBlockType10_serialNumber),
        ('warningType', _SystemInformationBlockType10_warningType),
        ('warningSecurityInfo', _SystemInformationBlockType10_warningSecurityInfo),
        ])
    SystemInformationBlockType10._ext = []
    
    #-----< SystemInformationBlockType11 >-----#
    SystemInformationBlockType11 = SEQ(name='SystemInformationBlockType11', mode=MODE_TYPE)
    _SystemInformationBlockType11_messageIdentifier = BIT_STR(name='messageIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInformationBlockType11_messageIdentifier._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _SystemInformationBlockType11_serialNumber = BIT_STR(name='serialNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInformationBlockType11_serialNumber._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _SystemInformationBlockType11_warningMessageSegmentType = ENUM(name='warningMessageSegmentType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInformationBlockType11_warningMessageSegmentType._cont = ASN1Dict([('notLastSegment', 0), ('lastSegment', 1)])
    _SystemInformationBlockType11_warningMessageSegmentType._ext = None
    _SystemInformationBlockType11_warningMessageSegmentNumber = INT(name='warningMessageSegmentNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInformationBlockType11_warningMessageSegmentNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _SystemInformationBlockType11_warningMessageSegment = OCT_STR(name='warningMessageSegment', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemInformationBlockType11_dataCodingScheme = OCT_STR(name='dataCodingScheme', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SystemInformationBlockType11_dataCodingScheme._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    SystemInformationBlockType11._cont = ASN1Dict([
        ('messageIdentifier', _SystemInformationBlockType11_messageIdentifier),
        ('serialNumber', _SystemInformationBlockType11_serialNumber),
        ('warningMessageSegmentType', _SystemInformationBlockType11_warningMessageSegmentType),
        ('warningMessageSegmentNumber', _SystemInformationBlockType11_warningMessageSegmentNumber),
        ('warningMessageSegment', _SystemInformationBlockType11_warningMessageSegment),
        ('dataCodingScheme', _SystemInformationBlockType11_dataCodingScheme),
        ])
    SystemInformationBlockType11._ext = []
    
    #-----< AntennaInfoCommon >-----#
    AntennaInfoCommon = SEQ(name='AntennaInfoCommon', mode=MODE_TYPE)
    _AntennaInfoCommon_antennaPortsCount = ENUM(name='antennaPortsCount', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AntennaInfoCommon_antennaPortsCount._cont = ASN1Dict([('an1', 0), ('an2', 1), ('an4', 2), ('spare1', 3)])
    _AntennaInfoCommon_antennaPortsCount._ext = None
    AntennaInfoCommon._cont = ASN1Dict([
        ('antennaPortsCount', _AntennaInfoCommon_antennaPortsCount),
        ])
    AntennaInfoCommon._ext = None
    
    #-----< AntennaInfoDedicated >-----#
    AntennaInfoDedicated = SEQ(name='AntennaInfoDedicated', mode=MODE_TYPE)
    _AntennaInfoDedicated_transmissionMode = ENUM(name='transmissionMode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AntennaInfoDedicated_transmissionMode._cont = ASN1Dict([('tm1', 0), ('tm2', 1), ('tm3', 2), ('tm4', 3), ('tm5', 4), ('tm6', 5), ('tm7', 6), ('spare1', 7)])
    _AntennaInfoDedicated_transmissionMode._ext = None
    _AntennaInfoDedicated_codebookSubsetRestriction = CHOICE(name='codebookSubsetRestriction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm3 = BIT_STR(name='n2TxAntenna-tm3', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm3._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm3 = BIT_STR(name='n4TxAntenna-tm3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm3._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm4 = BIT_STR(name='n2TxAntenna-tm4', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm4._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm4 = BIT_STR(name='n4TxAntenna-tm4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm4._const_sz = ASN1Set(rv=[64], rr=[], ev=None, er=[])
    __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm5 = BIT_STR(name='n2TxAntenna-tm5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm5._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm5 = BIT_STR(name='n4TxAntenna-tm5', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm5._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm6 = BIT_STR(name='n2TxAntenna-tm6', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm6._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm6 = BIT_STR(name='n4TxAntenna-tm6', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm6._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _AntennaInfoDedicated_codebookSubsetRestriction._cont = ASN1Dict([
        ('n2TxAntenna-tm3', __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm3),
        ('n4TxAntenna-tm3', __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm3),
        ('n2TxAntenna-tm4', __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm4),
        ('n4TxAntenna-tm4', __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm4),
        ('n2TxAntenna-tm5', __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm5),
        ('n4TxAntenna-tm5', __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm5),
        ('n2TxAntenna-tm6', __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm6),
        ('n4TxAntenna-tm6', __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm6),
        ])
    _AntennaInfoDedicated_codebookSubsetRestriction._ext = None
    _AntennaInfoDedicated_ue_TransmitAntennaSelection = CHOICE(name='ue-TransmitAntennaSelection', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __AntennaInfoDedicated_ue_TransmitAntennaSelection_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AntennaInfoDedicated_ue_TransmitAntennaSelection_setup = ENUM(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AntennaInfoDedicated_ue_TransmitAntennaSelection_setup._cont = ASN1Dict([('closedLoop', 0), ('openLoop', 1)])
    __AntennaInfoDedicated_ue_TransmitAntennaSelection_setup._ext = None
    _AntennaInfoDedicated_ue_TransmitAntennaSelection._cont = ASN1Dict([
        ('release', __AntennaInfoDedicated_ue_TransmitAntennaSelection_release),
        ('setup', __AntennaInfoDedicated_ue_TransmitAntennaSelection_setup),
        ])
    _AntennaInfoDedicated_ue_TransmitAntennaSelection._ext = None
    AntennaInfoDedicated._cont = ASN1Dict([
        ('transmissionMode', _AntennaInfoDedicated_transmissionMode),
        ('codebookSubsetRestriction', _AntennaInfoDedicated_codebookSubsetRestriction),
        ('ue-TransmitAntennaSelection', _AntennaInfoDedicated_ue_TransmitAntennaSelection),
        ])
    AntennaInfoDedicated._ext = None
    
    #-----< CQI-ReportConfig >-----#
    CQI_ReportConfig = SEQ(name='CQI-ReportConfig', mode=MODE_TYPE)
    _CQI_ReportConfig_cqi_ReportModeAperiodic = ENUM(name='cqi-ReportModeAperiodic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CQI_ReportConfig_cqi_ReportModeAperiodic._cont = ASN1Dict([('rm12', 0), ('rm20', 1), ('rm22', 2), ('rm30', 3), ('rm31', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    _CQI_ReportConfig_cqi_ReportModeAperiodic._ext = None
    _CQI_ReportConfig_nomPDSCH_RS_EPRE_Offset = INT(name='nomPDSCH-RS-EPRE-Offset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CQI_ReportConfig_nomPDSCH_RS_EPRE_Offset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1, ub=6)], ev=None, er=[])
    _CQI_ReportConfig_cqi_ReportPeriodic = CHOICE(name='cqi-ReportPeriodic', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CQI-ReportPeriodic')), opt=True)
    CQI_ReportConfig._cont = ASN1Dict([
        ('cqi-ReportModeAperiodic', _CQI_ReportConfig_cqi_ReportModeAperiodic),
        ('nomPDSCH-RS-EPRE-Offset', _CQI_ReportConfig_nomPDSCH_RS_EPRE_Offset),
        ('cqi-ReportPeriodic', _CQI_ReportConfig_cqi_ReportPeriodic),
        ])
    CQI_ReportConfig._ext = None
    
    #-----< CQI-ReportPeriodic >-----#
    CQI_ReportPeriodic = CHOICE(name='CQI-ReportPeriodic', mode=MODE_TYPE)
    _CQI_ReportPeriodic_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CQI_ReportPeriodic_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CQI_ReportPeriodic_setup_cqi_PUCCH_ResourceIndex = INT(name='cqi-PUCCH-ResourceIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CQI_ReportPeriodic_setup_cqi_PUCCH_ResourceIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1185)], ev=None, er=[])
    __CQI_ReportPeriodic_setup_cqi_pmi_ConfigIndex = INT(name='cqi-pmi-ConfigIndex', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CQI_ReportPeriodic_setup_cqi_pmi_ConfigIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    __CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic = CHOICE(name='cqi-FormatIndicatorPeriodic', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_widebandCQI = NULL(name='widebandCQI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_subbandCQI = SEQ(name='subbandCQI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_subbandCQI_k = INT(name='k', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_subbandCQI_k._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    ___CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_subbandCQI._cont = ASN1Dict([
        ('k', ____CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_subbandCQI_k),
        ])
    ___CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_subbandCQI._ext = None
    __CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic._cont = ASN1Dict([
        ('widebandCQI', ___CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_widebandCQI),
        ('subbandCQI', ___CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_subbandCQI),
        ])
    __CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic._ext = None
    __CQI_ReportPeriodic_setup_ri_ConfigIndex = INT(name='ri-ConfigIndex', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CQI_ReportPeriodic_setup_ri_ConfigIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    __CQI_ReportPeriodic_setup_simultaneousAckNackAndCQI = BOOL(name='simultaneousAckNackAndCQI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CQI_ReportPeriodic_setup._cont = ASN1Dict([
        ('cqi-PUCCH-ResourceIndex', __CQI_ReportPeriodic_setup_cqi_PUCCH_ResourceIndex),
        ('cqi-pmi-ConfigIndex', __CQI_ReportPeriodic_setup_cqi_pmi_ConfigIndex),
        ('cqi-FormatIndicatorPeriodic', __CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic),
        ('ri-ConfigIndex', __CQI_ReportPeriodic_setup_ri_ConfigIndex),
        ('simultaneousAckNackAndCQI', __CQI_ReportPeriodic_setup_simultaneousAckNackAndCQI),
        ])
    _CQI_ReportPeriodic_setup._ext = None
    CQI_ReportPeriodic._cont = ASN1Dict([
        ('release', _CQI_ReportPeriodic_release),
        ('setup', _CQI_ReportPeriodic_setup),
        ])
    CQI_ReportPeriodic._ext = None
    
    #-----< DRB-Identity >-----#
    DRB_Identity = INT(name='DRB-Identity', mode=MODE_TYPE)
    DRB_Identity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< LogicalChannelConfig >-----#
    LogicalChannelConfig = SEQ(name='LogicalChannelConfig', mode=MODE_TYPE)
    _LogicalChannelConfig_ul_SpecificParameters = SEQ(name='ul-SpecificParameters', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __LogicalChannelConfig_ul_SpecificParameters_priority = INT(name='priority', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LogicalChannelConfig_ul_SpecificParameters_priority._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    __LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate = ENUM(name='prioritisedBitRate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate._cont = ASN1Dict([('kBps0', 0), ('kBps8', 1), ('kBps16', 2), ('kBps32', 3), ('kBps64', 4), ('kBps128', 5), ('kBps256', 6), ('infinity', 7), ('spare8', 8), ('spare7', 9), ('spare6', 10), ('spare5', 11), ('spare4', 12), ('spare3', 13), ('spare2', 14), ('spare1', 15)])
    __LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate._ext = None
    __LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration = ENUM(name='bucketSizeDuration', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration._cont = ASN1Dict([('ms50', 0), ('ms100', 1), ('ms150', 2), ('ms300', 3), ('ms500', 4), ('ms1000', 5), ('spare2', 6), ('spare1', 7)])
    __LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration._ext = None
    __LogicalChannelConfig_ul_SpecificParameters_logicalChannelGroup = INT(name='logicalChannelGroup', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __LogicalChannelConfig_ul_SpecificParameters_logicalChannelGroup._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _LogicalChannelConfig_ul_SpecificParameters._cont = ASN1Dict([
        ('priority', __LogicalChannelConfig_ul_SpecificParameters_priority),
        ('prioritisedBitRate', __LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate),
        ('bucketSizeDuration', __LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration),
        ('logicalChannelGroup', __LogicalChannelConfig_ul_SpecificParameters_logicalChannelGroup),
        ])
    _LogicalChannelConfig_ul_SpecificParameters._ext = None
    LogicalChannelConfig._cont = ASN1Dict([
        ('ul-SpecificParameters', _LogicalChannelConfig_ul_SpecificParameters),
        ])
    LogicalChannelConfig._ext = []
    
    #-----< MAC-MainConfig >-----#
    MAC_MainConfig = SEQ(name='MAC-MainConfig', mode=MODE_TYPE)
    _MAC_MainConfig_ul_SCH_Config = SEQ(name='ul-SCH-Config', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx = ENUM(name='maxHARQ-Tx', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n3', 2), ('n4', 3), ('n5', 4), ('n6', 5), ('n7', 6), ('n8', 7), ('n10', 8), ('n12', 9), ('n16', 10), ('n20', 11), ('n24', 12), ('n28', 13), ('spare2', 14), ('spare1', 15)])
    __MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx._ext = None
    __MAC_MainConfig_ul_SCH_Config_periodicBSR_Timer = ENUM(name='periodicBSR-Timer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MAC_MainConfig_ul_SCH_Config_periodicBSR_Timer._cont = ASN1Dict([('sf5', 0), ('sf10', 1), ('sf16', 2), ('sf20', 3), ('sf32', 4), ('sf40', 5), ('sf64', 6), ('sf80', 7), ('sf128', 8), ('sf160', 9), ('sf320', 10), ('sf640', 11), ('sf1280', 12), ('sf2560', 13), ('infinity', 14), ('spare1', 15)])
    __MAC_MainConfig_ul_SCH_Config_periodicBSR_Timer._ext = None
    __MAC_MainConfig_ul_SCH_Config_retxBSR_Timer = ENUM(name='retxBSR-Timer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MAC_MainConfig_ul_SCH_Config_retxBSR_Timer._cont = ASN1Dict([('sf320', 0), ('sf640', 1), ('sf1280', 2), ('sf2560', 3), ('sf5120', 4), ('sf10240', 5), ('spare2', 6), ('spare1', 7)])
    __MAC_MainConfig_ul_SCH_Config_retxBSR_Timer._ext = None
    __MAC_MainConfig_ul_SCH_Config_ttiBundling = BOOL(name='ttiBundling', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MAC_MainConfig_ul_SCH_Config._cont = ASN1Dict([
        ('maxHARQ-Tx', __MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx),
        ('periodicBSR-Timer', __MAC_MainConfig_ul_SCH_Config_periodicBSR_Timer),
        ('retxBSR-Timer', __MAC_MainConfig_ul_SCH_Config_retxBSR_Timer),
        ('ttiBundling', __MAC_MainConfig_ul_SCH_Config_ttiBundling),
        ])
    _MAC_MainConfig_ul_SCH_Config._ext = None
    _MAC_MainConfig_drx_Config = CHOICE(name='drx-Config', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRX-Config')), opt=True)
    _MAC_MainConfig_timeAlignmentTimerDedicated = ENUM(name='timeAlignmentTimerDedicated', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'TimeAlignmentTimer')))
    _MAC_MainConfig_phr_Config = CHOICE(name='phr-Config', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __MAC_MainConfig_phr_Config_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MAC_MainConfig_phr_Config_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MAC_MainConfig_phr_Config_setup_periodicPHR_Timer = ENUM(name='periodicPHR-Timer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MAC_MainConfig_phr_Config_setup_periodicPHR_Timer._cont = ASN1Dict([('sf10', 0), ('sf20', 1), ('sf50', 2), ('sf100', 3), ('sf200', 4), ('sf500', 5), ('sf1000', 6), ('infinity', 7)])
    ___MAC_MainConfig_phr_Config_setup_periodicPHR_Timer._ext = None
    ___MAC_MainConfig_phr_Config_setup_prohibitPHR_Timer = ENUM(name='prohibitPHR-Timer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MAC_MainConfig_phr_Config_setup_prohibitPHR_Timer._cont = ASN1Dict([('sf0', 0), ('sf10', 1), ('sf20', 2), ('sf50', 3), ('sf100', 4), ('sf200', 5), ('sf500', 6), ('sf1000', 7)])
    ___MAC_MainConfig_phr_Config_setup_prohibitPHR_Timer._ext = None
    ___MAC_MainConfig_phr_Config_setup_dl_PathlossChange = ENUM(name='dl-PathlossChange', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MAC_MainConfig_phr_Config_setup_dl_PathlossChange._cont = ASN1Dict([('dB1', 0), ('dB3', 1), ('dB6', 2), ('infinity', 3)])
    ___MAC_MainConfig_phr_Config_setup_dl_PathlossChange._ext = None
    __MAC_MainConfig_phr_Config_setup._cont = ASN1Dict([
        ('periodicPHR-Timer', ___MAC_MainConfig_phr_Config_setup_periodicPHR_Timer),
        ('prohibitPHR-Timer', ___MAC_MainConfig_phr_Config_setup_prohibitPHR_Timer),
        ('dl-PathlossChange', ___MAC_MainConfig_phr_Config_setup_dl_PathlossChange),
        ])
    __MAC_MainConfig_phr_Config_setup._ext = None
    _MAC_MainConfig_phr_Config._cont = ASN1Dict([
        ('release', __MAC_MainConfig_phr_Config_release),
        ('setup', __MAC_MainConfig_phr_Config_setup),
        ])
    _MAC_MainConfig_phr_Config._ext = None
    MAC_MainConfig._cont = ASN1Dict([
        ('ul-SCH-Config', _MAC_MainConfig_ul_SCH_Config),
        ('drx-Config', _MAC_MainConfig_drx_Config),
        ('timeAlignmentTimerDedicated', _MAC_MainConfig_timeAlignmentTimerDedicated),
        ('phr-Config', _MAC_MainConfig_phr_Config),
        ])
    MAC_MainConfig._ext = []
    
    #-----< DRX-Config >-----#
    DRX_Config = CHOICE(name='DRX-Config', mode=MODE_TYPE)
    _DRX_Config_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DRX_Config_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_setup_onDurationTimer = ENUM(name='onDurationTimer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_setup_onDurationTimer._cont = ASN1Dict([('psf1', 0), ('psf2', 1), ('psf3', 2), ('psf4', 3), ('psf5', 4), ('psf6', 5), ('psf8', 6), ('psf10', 7), ('psf20', 8), ('psf30', 9), ('psf40', 10), ('psf50', 11), ('psf60', 12), ('psf80', 13), ('psf100', 14), ('psf200', 15)])
    __DRX_Config_setup_onDurationTimer._ext = None
    __DRX_Config_setup_drx_InactivityTimer = ENUM(name='drx-InactivityTimer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_setup_drx_InactivityTimer._cont = ASN1Dict([('psf1', 0), ('psf2', 1), ('psf3', 2), ('psf4', 3), ('psf5', 4), ('psf6', 5), ('psf8', 6), ('psf10', 7), ('psf20', 8), ('psf30', 9), ('psf40', 10), ('psf50', 11), ('psf60', 12), ('psf80', 13), ('psf100', 14), ('psf200', 15), ('psf300', 16), ('psf500', 17), ('psf750', 18), ('psf1280', 19), ('psf1920', 20), ('psf2560', 21), ('spare10', 22), ('spare9', 23), ('spare8', 24), ('spare7', 25), ('spare6', 26), ('spare5', 27), ('spare4', 28), ('spare3', 29), ('spare2', 30), ('spare1', 31)])
    __DRX_Config_setup_drx_InactivityTimer._ext = None
    __DRX_Config_setup_drx_RetransmissionTimer = ENUM(name='drx-RetransmissionTimer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_setup_drx_RetransmissionTimer._cont = ASN1Dict([('psf1', 0), ('psf2', 1), ('psf4', 2), ('psf6', 3), ('psf8', 4), ('psf16', 5), ('psf24', 6), ('psf33', 7)])
    __DRX_Config_setup_drx_RetransmissionTimer._ext = None
    __DRX_Config_setup_longDRX_CycleStartOffset = CHOICE(name='longDRX-CycleStartOffset', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf10 = INT(name='sf10', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf20 = INT(name='sf20', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf20._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=19)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf32 = INT(name='sf32', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf32._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf40 = INT(name='sf40', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf40._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf64 = INT(name='sf64', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf64._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf80 = INT(name='sf80', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf80._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=79)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf128 = INT(name='sf128', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf128._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf160 = INT(name='sf160', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf160._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=159)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf256 = INT(name='sf256', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf256._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf320 = INT(name='sf320', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf320._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=319)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf512 = INT(name='sf512', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf512._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf640 = INT(name='sf640', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf640._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=639)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf1024 = INT(name='sf1024', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf1024._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf1280 = INT(name='sf1280', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf1280._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1279)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf2048 = INT(name='sf2048', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf2048._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf2560 = INT(name='sf2560', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_longDRX_CycleStartOffset_sf2560._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2559)], ev=None, er=[])
    __DRX_Config_setup_longDRX_CycleStartOffset._cont = ASN1Dict([
        ('sf10', ___DRX_Config_setup_longDRX_CycleStartOffset_sf10),
        ('sf20', ___DRX_Config_setup_longDRX_CycleStartOffset_sf20),
        ('sf32', ___DRX_Config_setup_longDRX_CycleStartOffset_sf32),
        ('sf40', ___DRX_Config_setup_longDRX_CycleStartOffset_sf40),
        ('sf64', ___DRX_Config_setup_longDRX_CycleStartOffset_sf64),
        ('sf80', ___DRX_Config_setup_longDRX_CycleStartOffset_sf80),
        ('sf128', ___DRX_Config_setup_longDRX_CycleStartOffset_sf128),
        ('sf160', ___DRX_Config_setup_longDRX_CycleStartOffset_sf160),
        ('sf256', ___DRX_Config_setup_longDRX_CycleStartOffset_sf256),
        ('sf320', ___DRX_Config_setup_longDRX_CycleStartOffset_sf320),
        ('sf512', ___DRX_Config_setup_longDRX_CycleStartOffset_sf512),
        ('sf640', ___DRX_Config_setup_longDRX_CycleStartOffset_sf640),
        ('sf1024', ___DRX_Config_setup_longDRX_CycleStartOffset_sf1024),
        ('sf1280', ___DRX_Config_setup_longDRX_CycleStartOffset_sf1280),
        ('sf2048', ___DRX_Config_setup_longDRX_CycleStartOffset_sf2048),
        ('sf2560', ___DRX_Config_setup_longDRX_CycleStartOffset_sf2560),
        ])
    __DRX_Config_setup_longDRX_CycleStartOffset._ext = None
    __DRX_Config_setup_shortDRX = SEQ(name='shortDRX', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___DRX_Config_setup_shortDRX_shortDRX_Cycle = ENUM(name='shortDRX-Cycle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_shortDRX_shortDRX_Cycle._cont = ASN1Dict([('sf2', 0), ('sf5', 1), ('sf8', 2), ('sf10', 3), ('sf16', 4), ('sf20', 5), ('sf32', 6), ('sf40', 7), ('sf64', 8), ('sf80', 9), ('sf128', 10), ('sf160', 11), ('sf256', 12), ('sf320', 13), ('sf512', 14), ('sf640', 15)])
    ___DRX_Config_setup_shortDRX_shortDRX_Cycle._ext = None
    ___DRX_Config_setup_shortDRX_drxShortCycleTimer = INT(name='drxShortCycleTimer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DRX_Config_setup_shortDRX_drxShortCycleTimer._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    __DRX_Config_setup_shortDRX._cont = ASN1Dict([
        ('shortDRX-Cycle', ___DRX_Config_setup_shortDRX_shortDRX_Cycle),
        ('drxShortCycleTimer', ___DRX_Config_setup_shortDRX_drxShortCycleTimer),
        ])
    __DRX_Config_setup_shortDRX._ext = None
    _DRX_Config_setup._cont = ASN1Dict([
        ('onDurationTimer', __DRX_Config_setup_onDurationTimer),
        ('drx-InactivityTimer', __DRX_Config_setup_drx_InactivityTimer),
        ('drx-RetransmissionTimer', __DRX_Config_setup_drx_RetransmissionTimer),
        ('longDRX-CycleStartOffset', __DRX_Config_setup_longDRX_CycleStartOffset),
        ('shortDRX', __DRX_Config_setup_shortDRX),
        ])
    _DRX_Config_setup._ext = None
    DRX_Config._cont = ASN1Dict([
        ('release', _DRX_Config_release),
        ('setup', _DRX_Config_setup),
        ])
    DRX_Config._ext = None
    
    #-----< PDCP-Config >-----#
    PDCP_Config = SEQ(name='PDCP-Config', mode=MODE_TYPE)
    _PDCP_Config_discardTimer = ENUM(name='discardTimer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDCP_Config_discardTimer._cont = ASN1Dict([('ms50', 0), ('ms100', 1), ('ms150', 2), ('ms300', 3), ('ms500', 4), ('ms750', 5), ('ms1500', 6), ('infinity', 7)])
    _PDCP_Config_discardTimer._ext = None
    _PDCP_Config_rlc_AM = SEQ(name='rlc-AM', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCP_Config_rlc_AM_statusReportRequired = BOOL(name='statusReportRequired', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDCP_Config_rlc_AM._cont = ASN1Dict([
        ('statusReportRequired', __PDCP_Config_rlc_AM_statusReportRequired),
        ])
    _PDCP_Config_rlc_AM._ext = None
    _PDCP_Config_rlc_UM = SEQ(name='rlc-UM', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCP_Config_rlc_UM_pdcp_SN_Size = ENUM(name='pdcp-SN-Size', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Config_rlc_UM_pdcp_SN_Size._cont = ASN1Dict([('len7bits', 0), ('len12bits', 1)])
    __PDCP_Config_rlc_UM_pdcp_SN_Size._ext = None
    _PDCP_Config_rlc_UM._cont = ASN1Dict([
        ('pdcp-SN-Size', __PDCP_Config_rlc_UM_pdcp_SN_Size),
        ])
    _PDCP_Config_rlc_UM._ext = None
    _PDCP_Config_headerCompression = CHOICE(name='headerCompression', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PDCP_Config_headerCompression_notUsed = NULL(name='notUsed', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Config_headerCompression_rohc = SEQ(name='rohc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PDCP_Config_headerCompression_rohc_maxCID = INT(name='maxCID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=15)
    ___PDCP_Config_headerCompression_rohc_maxCID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16383)], ev=None, er=[])
    ___PDCP_Config_headerCompression_rohc_profiles = SEQ(name='profiles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_headerCompression_rohc_profiles_profile0x0001 = BOOL(name='profile0x0001', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_headerCompression_rohc_profiles_profile0x0002 = BOOL(name='profile0x0002', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_headerCompression_rohc_profiles_profile0x0003 = BOOL(name='profile0x0003', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_headerCompression_rohc_profiles_profile0x0004 = BOOL(name='profile0x0004', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_headerCompression_rohc_profiles_profile0x0006 = BOOL(name='profile0x0006', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_headerCompression_rohc_profiles_profile0x0101 = BOOL(name='profile0x0101', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_headerCompression_rohc_profiles_profile0x0102 = BOOL(name='profile0x0102', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_headerCompression_rohc_profiles_profile0x0103 = BOOL(name='profile0x0103', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_headerCompression_rohc_profiles_profile0x0104 = BOOL(name='profile0x0104', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PDCP_Config_headerCompression_rohc_profiles._cont = ASN1Dict([
        ('profile0x0001', ____PDCP_Config_headerCompression_rohc_profiles_profile0x0001),
        ('profile0x0002', ____PDCP_Config_headerCompression_rohc_profiles_profile0x0002),
        ('profile0x0003', ____PDCP_Config_headerCompression_rohc_profiles_profile0x0003),
        ('profile0x0004', ____PDCP_Config_headerCompression_rohc_profiles_profile0x0004),
        ('profile0x0006', ____PDCP_Config_headerCompression_rohc_profiles_profile0x0006),
        ('profile0x0101', ____PDCP_Config_headerCompression_rohc_profiles_profile0x0101),
        ('profile0x0102', ____PDCP_Config_headerCompression_rohc_profiles_profile0x0102),
        ('profile0x0103', ____PDCP_Config_headerCompression_rohc_profiles_profile0x0103),
        ('profile0x0104', ____PDCP_Config_headerCompression_rohc_profiles_profile0x0104),
        ])
    ___PDCP_Config_headerCompression_rohc_profiles._ext = None
    __PDCP_Config_headerCompression_rohc._cont = ASN1Dict([
        ('maxCID', ___PDCP_Config_headerCompression_rohc_maxCID),
        ('profiles', ___PDCP_Config_headerCompression_rohc_profiles),
        ])
    __PDCP_Config_headerCompression_rohc._ext = []
    _PDCP_Config_headerCompression._cont = ASN1Dict([
        ('notUsed', __PDCP_Config_headerCompression_notUsed),
        ('rohc', __PDCP_Config_headerCompression_rohc),
        ])
    _PDCP_Config_headerCompression._ext = None
    PDCP_Config._cont = ASN1Dict([
        ('discardTimer', _PDCP_Config_discardTimer),
        ('rlc-AM', _PDCP_Config_rlc_AM),
        ('rlc-UM', _PDCP_Config_rlc_UM),
        ('headerCompression', _PDCP_Config_headerCompression),
        ])
    PDCP_Config._ext = []
    
    #-----< PDSCH-ConfigCommon >-----#
    PDSCH_ConfigCommon = SEQ(name='PDSCH-ConfigCommon', mode=MODE_TYPE)
    _PDSCH_ConfigCommon_referenceSignalPower = INT(name='referenceSignalPower', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDSCH_ConfigCommon_referenceSignalPower._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-60, ub=50)], ev=None, er=[])
    _PDSCH_ConfigCommon_p_b = INT(name='p-b', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDSCH_ConfigCommon_p_b._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    PDSCH_ConfigCommon._cont = ASN1Dict([
        ('referenceSignalPower', _PDSCH_ConfigCommon_referenceSignalPower),
        ('p-b', _PDSCH_ConfigCommon_p_b),
        ])
    PDSCH_ConfigCommon._ext = None
    
    #-----< PDSCH-ConfigDedicated >-----#
    PDSCH_ConfigDedicated = SEQ(name='PDSCH-ConfigDedicated', mode=MODE_TYPE)
    _PDSCH_ConfigDedicated_p_a = ENUM(name='p-a', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDSCH_ConfigDedicated_p_a._cont = ASN1Dict([('dB-6', 0), ('dB-4dot77', 1), ('dB-3', 2), ('dB-1dot77', 3), ('dB0', 4), ('dB1', 5), ('dB2', 6), ('dB3', 7)])
    _PDSCH_ConfigDedicated_p_a._ext = None
    PDSCH_ConfigDedicated._cont = ASN1Dict([
        ('p-a', _PDSCH_ConfigDedicated_p_a),
        ])
    PDSCH_ConfigDedicated._ext = None
    
    #-----< PHICH-Config >-----#
    PHICH_Config = SEQ(name='PHICH-Config', mode=MODE_TYPE)
    _PHICH_Config_phich_Duration = ENUM(name='phich-Duration', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PHICH_Config_phich_Duration._cont = ASN1Dict([('normal', 0), ('extended', 1)])
    _PHICH_Config_phich_Duration._ext = None
    _PHICH_Config_phich_Resource = ENUM(name='phich-Resource', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PHICH_Config_phich_Resource._cont = ASN1Dict([('oneSixth', 0), ('half', 1), ('one', 2), ('two', 3)])
    _PHICH_Config_phich_Resource._ext = None
    PHICH_Config._cont = ASN1Dict([
        ('phich-Duration', _PHICH_Config_phich_Duration),
        ('phich-Resource', _PHICH_Config_phich_Resource),
        ])
    PHICH_Config._ext = None
    
    #-----< PhysicalConfigDedicated >-----#
    PhysicalConfigDedicated = SEQ(name='PhysicalConfigDedicated', mode=MODE_TYPE)
    _PhysicalConfigDedicated_pdsch_ConfigDedicated = SEQ(name='pdsch-ConfigDedicated', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PDSCH-ConfigDedicated')), opt=True)
    _PhysicalConfigDedicated_pucch_ConfigDedicated = SEQ(name='pucch-ConfigDedicated', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PUCCH-ConfigDedicated')), opt=True)
    _PhysicalConfigDedicated_pusch_ConfigDedicated = SEQ(name='pusch-ConfigDedicated', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PUSCH-ConfigDedicated')), opt=True)
    _PhysicalConfigDedicated_uplinkPowerControlDedicated = SEQ(name='uplinkPowerControlDedicated', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UplinkPowerControlDedicated')), opt=True)
    _PhysicalConfigDedicated_tpc_PDCCH_ConfigPUCCH = CHOICE(name='tpc-PDCCH-ConfigPUCCH', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'TPC-PDCCH-Config')), opt=True)
    _PhysicalConfigDedicated_tpc_PDCCH_ConfigPUSCH = CHOICE(name='tpc-PDCCH-ConfigPUSCH', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'TPC-PDCCH-Config')), opt=True)
    _PhysicalConfigDedicated_cqi_ReportConfig = SEQ(name='cqi-ReportConfig', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CQI-ReportConfig')), opt=True)
    _PhysicalConfigDedicated_soundingRS_UL_ConfigDedicated = CHOICE(name='soundingRS-UL-ConfigDedicated', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SoundingRS-UL-ConfigDedicated')), opt=True)
    _PhysicalConfigDedicated_antennaInfo = CHOICE(name='antennaInfo', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __PhysicalConfigDedicated_antennaInfo_explicitValue = SEQ(name='explicitValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'AntennaInfoDedicated')))
    __PhysicalConfigDedicated_antennaInfo_defaultValue = NULL(name='defaultValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PhysicalConfigDedicated_antennaInfo._cont = ASN1Dict([
        ('explicitValue', __PhysicalConfigDedicated_antennaInfo_explicitValue),
        ('defaultValue', __PhysicalConfigDedicated_antennaInfo_defaultValue),
        ])
    _PhysicalConfigDedicated_antennaInfo._ext = None
    _PhysicalConfigDedicated_schedulingRequestConfig = CHOICE(name='schedulingRequestConfig', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SchedulingRequestConfig')), opt=True)
    PhysicalConfigDedicated._cont = ASN1Dict([
        ('pdsch-ConfigDedicated', _PhysicalConfigDedicated_pdsch_ConfigDedicated),
        ('pucch-ConfigDedicated', _PhysicalConfigDedicated_pucch_ConfigDedicated),
        ('pusch-ConfigDedicated', _PhysicalConfigDedicated_pusch_ConfigDedicated),
        ('uplinkPowerControlDedicated', _PhysicalConfigDedicated_uplinkPowerControlDedicated),
        ('tpc-PDCCH-ConfigPUCCH', _PhysicalConfigDedicated_tpc_PDCCH_ConfigPUCCH),
        ('tpc-PDCCH-ConfigPUSCH', _PhysicalConfigDedicated_tpc_PDCCH_ConfigPUSCH),
        ('cqi-ReportConfig', _PhysicalConfigDedicated_cqi_ReportConfig),
        ('soundingRS-UL-ConfigDedicated', _PhysicalConfigDedicated_soundingRS_UL_ConfigDedicated),
        ('antennaInfo', _PhysicalConfigDedicated_antennaInfo),
        ('schedulingRequestConfig', _PhysicalConfigDedicated_schedulingRequestConfig),
        ])
    PhysicalConfigDedicated._ext = []
    
    #-----< P-Max >-----#
    P_Max = INT(name='P-Max', mode=MODE_TYPE)
    P_Max._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-30, ub=33)], ev=None, er=[])
    
    #-----< PRACH-ConfigSIB >-----#
    PRACH_ConfigSIB = SEQ(name='PRACH-ConfigSIB', mode=MODE_TYPE)
    _PRACH_ConfigSIB_rootSequenceIndex = INT(name='rootSequenceIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PRACH_ConfigSIB_rootSequenceIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=837)], ev=None, er=[])
    _PRACH_ConfigSIB_prach_ConfigInfo = SEQ(name='prach-ConfigInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PRACH-ConfigInfo')))
    PRACH_ConfigSIB._cont = ASN1Dict([
        ('rootSequenceIndex', _PRACH_ConfigSIB_rootSequenceIndex),
        ('prach-ConfigInfo', _PRACH_ConfigSIB_prach_ConfigInfo),
        ])
    PRACH_ConfigSIB._ext = None
    
    #-----< PRACH-Config >-----#
    PRACH_Config = SEQ(name='PRACH-Config', mode=MODE_TYPE)
    _PRACH_Config_rootSequenceIndex = INT(name='rootSequenceIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PRACH_Config_rootSequenceIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=837)], ev=None, er=[])
    _PRACH_Config_prach_ConfigInfo = SEQ(name='prach-ConfigInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PRACH-ConfigInfo')), opt=True)
    PRACH_Config._cont = ASN1Dict([
        ('rootSequenceIndex', _PRACH_Config_rootSequenceIndex),
        ('prach-ConfigInfo', _PRACH_Config_prach_ConfigInfo),
        ])
    PRACH_Config._ext = None
    
    #-----< PRACH-ConfigInfo >-----#
    PRACH_ConfigInfo = SEQ(name='PRACH-ConfigInfo', mode=MODE_TYPE)
    _PRACH_ConfigInfo_prach_ConfigIndex = INT(name='prach-ConfigIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PRACH_ConfigInfo_prach_ConfigIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _PRACH_ConfigInfo_highSpeedFlag = BOOL(name='highSpeedFlag', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PRACH_ConfigInfo_zeroCorrelationZoneConfig = INT(name='zeroCorrelationZoneConfig', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PRACH_ConfigInfo_zeroCorrelationZoneConfig._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _PRACH_ConfigInfo_prach_FreqOffset = INT(name='prach-FreqOffset', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PRACH_ConfigInfo_prach_FreqOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=94)], ev=None, er=[])
    PRACH_ConfigInfo._cont = ASN1Dict([
        ('prach-ConfigIndex', _PRACH_ConfigInfo_prach_ConfigIndex),
        ('highSpeedFlag', _PRACH_ConfigInfo_highSpeedFlag),
        ('zeroCorrelationZoneConfig', _PRACH_ConfigInfo_zeroCorrelationZoneConfig),
        ('prach-FreqOffset', _PRACH_ConfigInfo_prach_FreqOffset),
        ])
    PRACH_ConfigInfo._ext = None
    
    #-----< PresenceAntennaPort1 >-----#
    PresenceAntennaPort1 = BOOL(name='PresenceAntennaPort1', mode=MODE_TYPE)
    
    #-----< PUCCH-ConfigCommon >-----#
    PUCCH_ConfigCommon = SEQ(name='PUCCH-ConfigCommon', mode=MODE_TYPE)
    _PUCCH_ConfigCommon_deltaPUCCH_Shift = ENUM(name='deltaPUCCH-Shift', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_ConfigCommon_deltaPUCCH_Shift._cont = ASN1Dict([('ds1', 0), ('ds2', 1), ('ds3', 2)])
    _PUCCH_ConfigCommon_deltaPUCCH_Shift._ext = None
    _PUCCH_ConfigCommon_nRB_CQI = INT(name='nRB-CQI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_ConfigCommon_nRB_CQI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=98)], ev=None, er=[])
    _PUCCH_ConfigCommon_nCS_AN = INT(name='nCS-AN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_ConfigCommon_nCS_AN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _PUCCH_ConfigCommon_n1PUCCH_AN = INT(name='n1PUCCH-AN', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_ConfigCommon_n1PUCCH_AN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    PUCCH_ConfigCommon._cont = ASN1Dict([
        ('deltaPUCCH-Shift', _PUCCH_ConfigCommon_deltaPUCCH_Shift),
        ('nRB-CQI', _PUCCH_ConfigCommon_nRB_CQI),
        ('nCS-AN', _PUCCH_ConfigCommon_nCS_AN),
        ('n1PUCCH-AN', _PUCCH_ConfigCommon_n1PUCCH_AN),
        ])
    PUCCH_ConfigCommon._ext = None
    
    #-----< PUCCH-ConfigDedicated >-----#
    PUCCH_ConfigDedicated = SEQ(name='PUCCH-ConfigDedicated', mode=MODE_TYPE)
    _PUCCH_ConfigDedicated_ackNackRepetition = CHOICE(name='ackNackRepetition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PUCCH_ConfigDedicated_ackNackRepetition_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUCCH_ConfigDedicated_ackNackRepetition_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PUCCH_ConfigDedicated_ackNackRepetition_setup_repetitionFactor = ENUM(name='repetitionFactor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PUCCH_ConfigDedicated_ackNackRepetition_setup_repetitionFactor._cont = ASN1Dict([('n2', 0), ('n4', 1), ('n6', 2), ('spare1', 3)])
    ___PUCCH_ConfigDedicated_ackNackRepetition_setup_repetitionFactor._ext = None
    ___PUCCH_ConfigDedicated_ackNackRepetition_setup_n1PUCCH_AN_Rep = INT(name='n1PUCCH-AN-Rep', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PUCCH_ConfigDedicated_ackNackRepetition_setup_n1PUCCH_AN_Rep._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    __PUCCH_ConfigDedicated_ackNackRepetition_setup._cont = ASN1Dict([
        ('repetitionFactor', ___PUCCH_ConfigDedicated_ackNackRepetition_setup_repetitionFactor),
        ('n1PUCCH-AN-Rep', ___PUCCH_ConfigDedicated_ackNackRepetition_setup_n1PUCCH_AN_Rep),
        ])
    __PUCCH_ConfigDedicated_ackNackRepetition_setup._ext = None
    _PUCCH_ConfigDedicated_ackNackRepetition._cont = ASN1Dict([
        ('release', __PUCCH_ConfigDedicated_ackNackRepetition_release),
        ('setup', __PUCCH_ConfigDedicated_ackNackRepetition_setup),
        ])
    _PUCCH_ConfigDedicated_ackNackRepetition._ext = None
    _PUCCH_ConfigDedicated_tdd_AckNackFeedbackMode = ENUM(name='tdd-AckNackFeedbackMode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_ConfigDedicated_tdd_AckNackFeedbackMode._cont = ASN1Dict([('bundling', 0), ('multiplexing', 1)])
    _PUCCH_ConfigDedicated_tdd_AckNackFeedbackMode._ext = None
    PUCCH_ConfigDedicated._cont = ASN1Dict([
        ('ackNackRepetition', _PUCCH_ConfigDedicated_ackNackRepetition),
        ('tdd-AckNackFeedbackMode', _PUCCH_ConfigDedicated_tdd_AckNackFeedbackMode),
        ])
    PUCCH_ConfigDedicated._ext = None
    
    #-----< PUSCH-ConfigCommon >-----#
    PUSCH_ConfigCommon = SEQ(name='PUSCH-ConfigCommon', mode=MODE_TYPE)
    _PUSCH_ConfigCommon_pusch_ConfigBasic = SEQ(name='pusch-ConfigBasic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUSCH_ConfigCommon_pusch_ConfigBasic_n_SB = INT(name='n-SB', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUSCH_ConfigCommon_pusch_ConfigBasic_n_SB._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    __PUSCH_ConfigCommon_pusch_ConfigBasic_hoppingMode = ENUM(name='hoppingMode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUSCH_ConfigCommon_pusch_ConfigBasic_hoppingMode._cont = ASN1Dict([('interSubFrame', 0), ('intraAndInterSubFrame', 1)])
    __PUSCH_ConfigCommon_pusch_ConfigBasic_hoppingMode._ext = None
    __PUSCH_ConfigCommon_pusch_ConfigBasic_pusch_HoppingOffset = INT(name='pusch-HoppingOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUSCH_ConfigCommon_pusch_ConfigBasic_pusch_HoppingOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=98)], ev=None, er=[])
    __PUSCH_ConfigCommon_pusch_ConfigBasic_enable64QAM = BOOL(name='enable64QAM', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_ConfigCommon_pusch_ConfigBasic._cont = ASN1Dict([
        ('n-SB', __PUSCH_ConfigCommon_pusch_ConfigBasic_n_SB),
        ('hoppingMode', __PUSCH_ConfigCommon_pusch_ConfigBasic_hoppingMode),
        ('pusch-HoppingOffset', __PUSCH_ConfigCommon_pusch_ConfigBasic_pusch_HoppingOffset),
        ('enable64QAM', __PUSCH_ConfigCommon_pusch_ConfigBasic_enable64QAM),
        ])
    _PUSCH_ConfigCommon_pusch_ConfigBasic._ext = None
    _PUSCH_ConfigCommon_ul_ReferenceSignalsPUSCH = SEQ(name='ul-ReferenceSignalsPUSCH', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UL-ReferenceSignalsPUSCH')))
    PUSCH_ConfigCommon._cont = ASN1Dict([
        ('pusch-ConfigBasic', _PUSCH_ConfigCommon_pusch_ConfigBasic),
        ('ul-ReferenceSignalsPUSCH', _PUSCH_ConfigCommon_ul_ReferenceSignalsPUSCH),
        ])
    PUSCH_ConfigCommon._ext = None
    
    #-----< PUSCH-ConfigDedicated >-----#
    PUSCH_ConfigDedicated = SEQ(name='PUSCH-ConfigDedicated', mode=MODE_TYPE)
    _PUSCH_ConfigDedicated_betaOffset_ACK_Index = INT(name='betaOffset-ACK-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_ConfigDedicated_betaOffset_ACK_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _PUSCH_ConfigDedicated_betaOffset_RI_Index = INT(name='betaOffset-RI-Index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_ConfigDedicated_betaOffset_RI_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _PUSCH_ConfigDedicated_betaOffset_CQI_Index = INT(name='betaOffset-CQI-Index', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_ConfigDedicated_betaOffset_CQI_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    PUSCH_ConfigDedicated._cont = ASN1Dict([
        ('betaOffset-ACK-Index', _PUSCH_ConfigDedicated_betaOffset_ACK_Index),
        ('betaOffset-RI-Index', _PUSCH_ConfigDedicated_betaOffset_RI_Index),
        ('betaOffset-CQI-Index', _PUSCH_ConfigDedicated_betaOffset_CQI_Index),
        ])
    PUSCH_ConfigDedicated._ext = None
    
    #-----< UL-ReferenceSignalsPUSCH >-----#
    UL_ReferenceSignalsPUSCH = SEQ(name='UL-ReferenceSignalsPUSCH', mode=MODE_TYPE)
    _UL_ReferenceSignalsPUSCH_groupHoppingEnabled = BOOL(name='groupHoppingEnabled', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_ReferenceSignalsPUSCH_groupAssignmentPUSCH = INT(name='groupAssignmentPUSCH', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_ReferenceSignalsPUSCH_groupAssignmentPUSCH._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=29)], ev=None, er=[])
    _UL_ReferenceSignalsPUSCH_sequenceHoppingEnabled = BOOL(name='sequenceHoppingEnabled', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_ReferenceSignalsPUSCH_cyclicShift = INT(name='cyclicShift', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_ReferenceSignalsPUSCH_cyclicShift._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    UL_ReferenceSignalsPUSCH._cont = ASN1Dict([
        ('groupHoppingEnabled', _UL_ReferenceSignalsPUSCH_groupHoppingEnabled),
        ('groupAssignmentPUSCH', _UL_ReferenceSignalsPUSCH_groupAssignmentPUSCH),
        ('sequenceHoppingEnabled', _UL_ReferenceSignalsPUSCH_sequenceHoppingEnabled),
        ('cyclicShift', _UL_ReferenceSignalsPUSCH_cyclicShift),
        ])
    UL_ReferenceSignalsPUSCH._ext = None
    
    #-----< RACH-ConfigCommon >-----#
    RACH_ConfigCommon = SEQ(name='RACH-ConfigCommon', mode=MODE_TYPE)
    _RACH_ConfigCommon_preambleInfo = SEQ(name='preambleInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_preambleInfo_numberOfRA_Preambles = ENUM(name='numberOfRA-Preambles', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_preambleInfo_numberOfRA_Preambles._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n12', 2), ('n16', 3), ('n20', 4), ('n24', 5), ('n28', 6), ('n32', 7), ('n36', 8), ('n40', 9), ('n44', 10), ('n48', 11), ('n52', 12), ('n56', 13), ('n60', 14), ('n64', 15)])
    __RACH_ConfigCommon_preambleInfo_numberOfRA_Preambles._ext = None
    __RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig = SEQ(name='preamblesGroupAConfig', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_sizeOfRA_PreamblesGroupA = ENUM(name='sizeOfRA-PreamblesGroupA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_sizeOfRA_PreamblesGroupA._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n12', 2), ('n16', 3), ('n20', 4), ('n24', 5), ('n28', 6), ('n32', 7), ('n36', 8), ('n40', 9), ('n44', 10), ('n48', 11), ('n52', 12), ('n56', 13), ('n60', 14)])
    ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_sizeOfRA_PreamblesGroupA._ext = None
    ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_messageSizeGroupA = ENUM(name='messageSizeGroupA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_messageSizeGroupA._cont = ASN1Dict([('b56', 0), ('b144', 1), ('b208', 2), ('b256', 3)])
    ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_messageSizeGroupA._ext = None
    ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_messagePowerOffsetGroupB = ENUM(name='messagePowerOffsetGroupB', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_messagePowerOffsetGroupB._cont = ASN1Dict([('minusinfinity', 0), ('dB0', 1), ('dB5', 2), ('dB8', 3), ('dB10', 4), ('dB12', 5), ('dB15', 6), ('dB18', 7)])
    ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_messagePowerOffsetGroupB._ext = None
    __RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig._cont = ASN1Dict([
        ('sizeOfRA-PreamblesGroupA', ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_sizeOfRA_PreamblesGroupA),
        ('messageSizeGroupA', ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_messageSizeGroupA),
        ('messagePowerOffsetGroupB', ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_messagePowerOffsetGroupB),
        ])
    __RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig._ext = []
    _RACH_ConfigCommon_preambleInfo._cont = ASN1Dict([
        ('numberOfRA-Preambles', __RACH_ConfigCommon_preambleInfo_numberOfRA_Preambles),
        ('preamblesGroupAConfig', __RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig),
        ])
    _RACH_ConfigCommon_preambleInfo._ext = None
    _RACH_ConfigCommon_powerRampingParameters = SEQ(name='powerRampingParameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_powerRampingParameters_powerRampingStep = ENUM(name='powerRampingStep', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_powerRampingParameters_powerRampingStep._cont = ASN1Dict([('dB0', 0), ('dB2', 1), ('dB4', 2), ('dB6', 3)])
    __RACH_ConfigCommon_powerRampingParameters_powerRampingStep._ext = None
    __RACH_ConfigCommon_powerRampingParameters_preambleInitialReceivedTargetPower = ENUM(name='preambleInitialReceivedTargetPower', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_powerRampingParameters_preambleInitialReceivedTargetPower._cont = ASN1Dict([('dBm-120', 0), ('dBm-118', 1), ('dBm-116', 2), ('dBm-114', 3), ('dBm-112', 4), ('dBm-110', 5), ('dBm-108', 6), ('dBm-106', 7), ('dBm-104', 8), ('dBm-102', 9), ('dBm-100', 10), ('dBm-98', 11), ('dBm-96', 12), ('dBm-94', 13), ('dBm-92', 14), ('dBm-90', 15)])
    __RACH_ConfigCommon_powerRampingParameters_preambleInitialReceivedTargetPower._ext = None
    _RACH_ConfigCommon_powerRampingParameters._cont = ASN1Dict([
        ('powerRampingStep', __RACH_ConfigCommon_powerRampingParameters_powerRampingStep),
        ('preambleInitialReceivedTargetPower', __RACH_ConfigCommon_powerRampingParameters_preambleInitialReceivedTargetPower),
        ])
    _RACH_ConfigCommon_powerRampingParameters._ext = None
    _RACH_ConfigCommon_ra_SupervisionInfo = SEQ(name='ra-SupervisionInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ra_SupervisionInfo_preambleTransMax = ENUM(name='preambleTransMax', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ra_SupervisionInfo_preambleTransMax._cont = ASN1Dict([('n3', 0), ('n4', 1), ('n5', 2), ('n6', 3), ('n7', 4), ('n8', 5), ('n10', 6), ('n20', 7), ('n50', 8), ('n100', 9), ('n200', 10)])
    __RACH_ConfigCommon_ra_SupervisionInfo_preambleTransMax._ext = None
    __RACH_ConfigCommon_ra_SupervisionInfo_ra_ResponseWindowSize = ENUM(name='ra-ResponseWindowSize', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ra_SupervisionInfo_ra_ResponseWindowSize._cont = ASN1Dict([('sf2', 0), ('sf3', 1), ('sf4', 2), ('sf5', 3), ('sf6', 4), ('sf7', 5), ('sf8', 6), ('sf10', 7)])
    __RACH_ConfigCommon_ra_SupervisionInfo_ra_ResponseWindowSize._ext = None
    __RACH_ConfigCommon_ra_SupervisionInfo_mac_ContentionResolutionTimer = ENUM(name='mac-ContentionResolutionTimer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ra_SupervisionInfo_mac_ContentionResolutionTimer._cont = ASN1Dict([('sf8', 0), ('sf16', 1), ('sf24', 2), ('sf32', 3), ('sf40', 4), ('sf48', 5), ('sf56', 6), ('sf64', 7)])
    __RACH_ConfigCommon_ra_SupervisionInfo_mac_ContentionResolutionTimer._ext = None
    _RACH_ConfigCommon_ra_SupervisionInfo._cont = ASN1Dict([
        ('preambleTransMax', __RACH_ConfigCommon_ra_SupervisionInfo_preambleTransMax),
        ('ra-ResponseWindowSize', __RACH_ConfigCommon_ra_SupervisionInfo_ra_ResponseWindowSize),
        ('mac-ContentionResolutionTimer', __RACH_ConfigCommon_ra_SupervisionInfo_mac_ContentionResolutionTimer),
        ])
    _RACH_ConfigCommon_ra_SupervisionInfo._ext = None
    _RACH_ConfigCommon_maxHARQ_Msg3Tx = INT(name='maxHARQ-Msg3Tx', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigCommon_maxHARQ_Msg3Tx._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    RACH_ConfigCommon._cont = ASN1Dict([
        ('preambleInfo', _RACH_ConfigCommon_preambleInfo),
        ('powerRampingParameters', _RACH_ConfigCommon_powerRampingParameters),
        ('ra-SupervisionInfo', _RACH_ConfigCommon_ra_SupervisionInfo),
        ('maxHARQ-Msg3Tx', _RACH_ConfigCommon_maxHARQ_Msg3Tx),
        ])
    RACH_ConfigCommon._ext = []
    
    #-----< RACH-ConfigDedicated >-----#
    RACH_ConfigDedicated = SEQ(name='RACH-ConfigDedicated', mode=MODE_TYPE)
    _RACH_ConfigDedicated_ra_PreambleIndex = INT(name='ra-PreambleIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigDedicated_ra_PreambleIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _RACH_ConfigDedicated_ra_PRACH_MaskIndex = INT(name='ra-PRACH-MaskIndex', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigDedicated_ra_PRACH_MaskIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    RACH_ConfigDedicated._cont = ASN1Dict([
        ('ra-PreambleIndex', _RACH_ConfigDedicated_ra_PreambleIndex),
        ('ra-PRACH-MaskIndex', _RACH_ConfigDedicated_ra_PRACH_MaskIndex),
        ])
    RACH_ConfigDedicated._ext = None
    
    #-----< RadioResourceConfigCommonSIB >-----#
    RadioResourceConfigCommonSIB = SEQ(name='RadioResourceConfigCommonSIB', mode=MODE_TYPE)
    _RadioResourceConfigCommonSIB_rach_ConfigCommon = SEQ(name='rach-ConfigCommon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RACH-ConfigCommon')))
    _RadioResourceConfigCommonSIB_bcch_Config = SEQ(name='bcch-Config', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BCCH-Config')))
    _RadioResourceConfigCommonSIB_pcch_Config = SEQ(name='pcch-Config', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PCCH-Config')))
    _RadioResourceConfigCommonSIB_prach_Config = SEQ(name='prach-Config', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PRACH-ConfigSIB')))
    _RadioResourceConfigCommonSIB_pdsch_ConfigCommon = SEQ(name='pdsch-ConfigCommon', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PDSCH-ConfigCommon')))
    _RadioResourceConfigCommonSIB_pusch_ConfigCommon = SEQ(name='pusch-ConfigCommon', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PUSCH-ConfigCommon')))
    _RadioResourceConfigCommonSIB_pucch_ConfigCommon = SEQ(name='pucch-ConfigCommon', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PUCCH-ConfigCommon')))
    _RadioResourceConfigCommonSIB_soundingRS_UL_ConfigCommon = CHOICE(name='soundingRS-UL-ConfigCommon', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SoundingRS-UL-ConfigCommon')))
    _RadioResourceConfigCommonSIB_uplinkPowerControlCommon = SEQ(name='uplinkPowerControlCommon', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UplinkPowerControlCommon')))
    _RadioResourceConfigCommonSIB_ul_CyclicPrefixLength = ENUM(name='ul-CyclicPrefixLength', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UL-CyclicPrefixLength')))
    RadioResourceConfigCommonSIB._cont = ASN1Dict([
        ('rach-ConfigCommon', _RadioResourceConfigCommonSIB_rach_ConfigCommon),
        ('bcch-Config', _RadioResourceConfigCommonSIB_bcch_Config),
        ('pcch-Config', _RadioResourceConfigCommonSIB_pcch_Config),
        ('prach-Config', _RadioResourceConfigCommonSIB_prach_Config),
        ('pdsch-ConfigCommon', _RadioResourceConfigCommonSIB_pdsch_ConfigCommon),
        ('pusch-ConfigCommon', _RadioResourceConfigCommonSIB_pusch_ConfigCommon),
        ('pucch-ConfigCommon', _RadioResourceConfigCommonSIB_pucch_ConfigCommon),
        ('soundingRS-UL-ConfigCommon', _RadioResourceConfigCommonSIB_soundingRS_UL_ConfigCommon),
        ('uplinkPowerControlCommon', _RadioResourceConfigCommonSIB_uplinkPowerControlCommon),
        ('ul-CyclicPrefixLength', _RadioResourceConfigCommonSIB_ul_CyclicPrefixLength),
        ])
    RadioResourceConfigCommonSIB._ext = []
    
    #-----< RadioResourceConfigCommon >-----#
    RadioResourceConfigCommon = SEQ(name='RadioResourceConfigCommon', mode=MODE_TYPE)
    _RadioResourceConfigCommon_rach_ConfigCommon = SEQ(name='rach-ConfigCommon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RACH-ConfigCommon')), opt=True)
    _RadioResourceConfigCommon_prach_Config = SEQ(name='prach-Config', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PRACH-Config')))
    _RadioResourceConfigCommon_pdsch_ConfigCommon = SEQ(name='pdsch-ConfigCommon', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PDSCH-ConfigCommon')), opt=True)
    _RadioResourceConfigCommon_pusch_ConfigCommon = SEQ(name='pusch-ConfigCommon', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PUSCH-ConfigCommon')))
    _RadioResourceConfigCommon_phich_Config = SEQ(name='phich-Config', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PHICH-Config')), opt=True)
    _RadioResourceConfigCommon_pucch_ConfigCommon = SEQ(name='pucch-ConfigCommon', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PUCCH-ConfigCommon')), opt=True)
    _RadioResourceConfigCommon_soundingRS_UL_ConfigCommon = CHOICE(name='soundingRS-UL-ConfigCommon', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SoundingRS-UL-ConfigCommon')), opt=True)
    _RadioResourceConfigCommon_uplinkPowerControlCommon = SEQ(name='uplinkPowerControlCommon', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UplinkPowerControlCommon')), opt=True)
    _RadioResourceConfigCommon_antennaInfoCommon = SEQ(name='antennaInfoCommon', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'AntennaInfoCommon')), opt=True)
    _RadioResourceConfigCommon_p_Max = INT(name='p-Max', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'P-Max')), opt=True)
    _RadioResourceConfigCommon_tdd_Config = SEQ(name='tdd-Config', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'TDD-Config')), opt=True)
    _RadioResourceConfigCommon_ul_CyclicPrefixLength = ENUM(name='ul-CyclicPrefixLength', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UL-CyclicPrefixLength')))
    RadioResourceConfigCommon._cont = ASN1Dict([
        ('rach-ConfigCommon', _RadioResourceConfigCommon_rach_ConfigCommon),
        ('prach-Config', _RadioResourceConfigCommon_prach_Config),
        ('pdsch-ConfigCommon', _RadioResourceConfigCommon_pdsch_ConfigCommon),
        ('pusch-ConfigCommon', _RadioResourceConfigCommon_pusch_ConfigCommon),
        ('phich-Config', _RadioResourceConfigCommon_phich_Config),
        ('pucch-ConfigCommon', _RadioResourceConfigCommon_pucch_ConfigCommon),
        ('soundingRS-UL-ConfigCommon', _RadioResourceConfigCommon_soundingRS_UL_ConfigCommon),
        ('uplinkPowerControlCommon', _RadioResourceConfigCommon_uplinkPowerControlCommon),
        ('antennaInfoCommon', _RadioResourceConfigCommon_antennaInfoCommon),
        ('p-Max', _RadioResourceConfigCommon_p_Max),
        ('tdd-Config', _RadioResourceConfigCommon_tdd_Config),
        ('ul-CyclicPrefixLength', _RadioResourceConfigCommon_ul_CyclicPrefixLength),
        ])
    RadioResourceConfigCommon._ext = []
    
    #-----< BCCH-Config >-----#
    BCCH_Config = SEQ(name='BCCH-Config', mode=MODE_TYPE)
    _BCCH_Config_modificationPeriodCoeff = ENUM(name='modificationPeriodCoeff', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BCCH_Config_modificationPeriodCoeff._cont = ASN1Dict([('n2', 0), ('n4', 1), ('n8', 2), ('n16', 3)])
    _BCCH_Config_modificationPeriodCoeff._ext = None
    BCCH_Config._cont = ASN1Dict([
        ('modificationPeriodCoeff', _BCCH_Config_modificationPeriodCoeff),
        ])
    BCCH_Config._ext = None
    
    #-----< PCCH-Config >-----#
    PCCH_Config = SEQ(name='PCCH-Config', mode=MODE_TYPE)
    _PCCH_Config_defaultPagingCycle = ENUM(name='defaultPagingCycle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PCCH_Config_defaultPagingCycle._cont = ASN1Dict([('rf32', 0), ('rf64', 1), ('rf128', 2), ('rf256', 3)])
    _PCCH_Config_defaultPagingCycle._ext = None
    _PCCH_Config_nB = ENUM(name='nB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PCCH_Config_nB._cont = ASN1Dict([('fourT', 0), ('twoT', 1), ('oneT', 2), ('halfT', 3), ('quarterT', 4), ('oneEighthT', 5), ('oneSixteenthT', 6), ('oneThirtySecondT', 7)])
    _PCCH_Config_nB._ext = None
    PCCH_Config._cont = ASN1Dict([
        ('defaultPagingCycle', _PCCH_Config_defaultPagingCycle),
        ('nB', _PCCH_Config_nB),
        ])
    PCCH_Config._ext = None
    
    #-----< UL-CyclicPrefixLength >-----#
    UL_CyclicPrefixLength = ENUM(name='UL-CyclicPrefixLength', mode=MODE_TYPE)
    UL_CyclicPrefixLength._cont = ASN1Dict([('len1', 0), ('len2', 1)])
    UL_CyclicPrefixLength._ext = None
    
    #-----< RadioResourceConfigDedicated >-----#
    RadioResourceConfigDedicated = SEQ(name='RadioResourceConfigDedicated', mode=MODE_TYPE)
    _RadioResourceConfigDedicated_srb_ToAddModList = SEQ_OF(name='srb-ToAddModList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SRB-ToAddModList')), opt=True)
    _RadioResourceConfigDedicated_drb_ToAddModList = SEQ_OF(name='drb-ToAddModList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRB-ToAddModList')), opt=True)
    _RadioResourceConfigDedicated_drb_ToReleaseList = SEQ_OF(name='drb-ToReleaseList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRB-ToReleaseList')), opt=True)
    _RadioResourceConfigDedicated_mac_MainConfig = CHOICE(name='mac-MainConfig', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __RadioResourceConfigDedicated_mac_MainConfig_explicitValue = SEQ(name='explicitValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MAC-MainConfig')))
    __RadioResourceConfigDedicated_mac_MainConfig_defaultValue = NULL(name='defaultValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RadioResourceConfigDedicated_mac_MainConfig._cont = ASN1Dict([
        ('explicitValue', __RadioResourceConfigDedicated_mac_MainConfig_explicitValue),
        ('defaultValue', __RadioResourceConfigDedicated_mac_MainConfig_defaultValue),
        ])
    _RadioResourceConfigDedicated_mac_MainConfig._ext = None
    _RadioResourceConfigDedicated_sps_Config = SEQ(name='sps-Config', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SPS-Config')), opt=True)
    _RadioResourceConfigDedicated_physicalConfigDedicated = SEQ(name='physicalConfigDedicated', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysicalConfigDedicated')), opt=True)
    RadioResourceConfigDedicated._cont = ASN1Dict([
        ('srb-ToAddModList', _RadioResourceConfigDedicated_srb_ToAddModList),
        ('drb-ToAddModList', _RadioResourceConfigDedicated_drb_ToAddModList),
        ('drb-ToReleaseList', _RadioResourceConfigDedicated_drb_ToReleaseList),
        ('mac-MainConfig', _RadioResourceConfigDedicated_mac_MainConfig),
        ('sps-Config', _RadioResourceConfigDedicated_sps_Config),
        ('physicalConfigDedicated', _RadioResourceConfigDedicated_physicalConfigDedicated),
        ])
    RadioResourceConfigDedicated._ext = []
    
    #-----< SRB-ToAddModList >-----#
    SRB_ToAddModList = SEQ_OF(name='SRB-ToAddModList', mode=MODE_TYPE)
    _SRB_ToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SRB-ToAddMod')))
    SRB_ToAddModList._cont = _SRB_ToAddModList__item_
    SRB_ToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< SRB-ToAddMod >-----#
    SRB_ToAddMod = SEQ(name='SRB-ToAddMod', mode=MODE_TYPE)
    _SRB_ToAddMod_srb_Identity = INT(name='srb-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRB_ToAddMod_srb_Identity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    _SRB_ToAddMod_rlc_Config = CHOICE(name='rlc-Config', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __SRB_ToAddMod_rlc_Config_explicitValue = CHOICE(name='explicitValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RLC-Config')))
    __SRB_ToAddMod_rlc_Config_defaultValue = NULL(name='defaultValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRB_ToAddMod_rlc_Config._cont = ASN1Dict([
        ('explicitValue', __SRB_ToAddMod_rlc_Config_explicitValue),
        ('defaultValue', __SRB_ToAddMod_rlc_Config_defaultValue),
        ])
    _SRB_ToAddMod_rlc_Config._ext = None
    _SRB_ToAddMod_logicalChannelConfig = CHOICE(name='logicalChannelConfig', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __SRB_ToAddMod_logicalChannelConfig_explicitValue = SEQ(name='explicitValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'LogicalChannelConfig')))
    __SRB_ToAddMod_logicalChannelConfig_defaultValue = NULL(name='defaultValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRB_ToAddMod_logicalChannelConfig._cont = ASN1Dict([
        ('explicitValue', __SRB_ToAddMod_logicalChannelConfig_explicitValue),
        ('defaultValue', __SRB_ToAddMod_logicalChannelConfig_defaultValue),
        ])
    _SRB_ToAddMod_logicalChannelConfig._ext = None
    SRB_ToAddMod._cont = ASN1Dict([
        ('srb-Identity', _SRB_ToAddMod_srb_Identity),
        ('rlc-Config', _SRB_ToAddMod_rlc_Config),
        ('logicalChannelConfig', _SRB_ToAddMod_logicalChannelConfig),
        ])
    SRB_ToAddMod._ext = []
    
    #-----< DRB-ToAddModList >-----#
    DRB_ToAddModList = SEQ_OF(name='DRB-ToAddModList', mode=MODE_TYPE)
    _DRB_ToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRB-ToAddMod')))
    DRB_ToAddModList._cont = _DRB_ToAddModList__item_
    DRB_ToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=11)], ev=None, er=[])
    
    #-----< DRB-ToAddMod >-----#
    DRB_ToAddMod = SEQ(name='DRB-ToAddMod', mode=MODE_TYPE)
    _DRB_ToAddMod_eps_BearerIdentity = INT(name='eps-BearerIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DRB_ToAddMod_eps_BearerIdentity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _DRB_ToAddMod_drb_Identity = INT(name='drb-Identity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRB-Identity')))
    _DRB_ToAddMod_pdcp_Config = SEQ(name='pdcp-Config', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PDCP-Config')), opt=True)
    _DRB_ToAddMod_rlc_Config = CHOICE(name='rlc-Config', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RLC-Config')), opt=True)
    _DRB_ToAddMod_logicalChannelIdentity = INT(name='logicalChannelIdentity', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DRB_ToAddMod_logicalChannelIdentity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=10)], ev=None, er=[])
    _DRB_ToAddMod_logicalChannelConfig = SEQ(name='logicalChannelConfig', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'LogicalChannelConfig')), opt=True)
    DRB_ToAddMod._cont = ASN1Dict([
        ('eps-BearerIdentity', _DRB_ToAddMod_eps_BearerIdentity),
        ('drb-Identity', _DRB_ToAddMod_drb_Identity),
        ('pdcp-Config', _DRB_ToAddMod_pdcp_Config),
        ('rlc-Config', _DRB_ToAddMod_rlc_Config),
        ('logicalChannelIdentity', _DRB_ToAddMod_logicalChannelIdentity),
        ('logicalChannelConfig', _DRB_ToAddMod_logicalChannelConfig),
        ])
    DRB_ToAddMod._ext = []
    
    #-----< DRB-ToReleaseList >-----#
    DRB_ToReleaseList = SEQ_OF(name='DRB-ToReleaseList', mode=MODE_TYPE)
    _DRB_ToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DRB-Identity')))
    DRB_ToReleaseList._cont = _DRB_ToReleaseList__item_
    DRB_ToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=11)], ev=None, er=[])
    
    #-----< RLC-Config >-----#
    RLC_Config = CHOICE(name='RLC-Config', mode=MODE_TYPE)
    _RLC_Config_am = SEQ(name='am', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RLC_Config_am_ul_AM_RLC = SEQ(name='ul-AM-RLC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UL-AM-RLC')))
    __RLC_Config_am_dl_AM_RLC = SEQ(name='dl-AM-RLC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DL-AM-RLC')))
    _RLC_Config_am._cont = ASN1Dict([
        ('ul-AM-RLC', __RLC_Config_am_ul_AM_RLC),
        ('dl-AM-RLC', __RLC_Config_am_dl_AM_RLC),
        ])
    _RLC_Config_am._ext = None
    _RLC_Config_um_Bi_Directional = SEQ(name='um-Bi-Directional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RLC_Config_um_Bi_Directional_ul_UM_RLC = SEQ(name='ul-UM-RLC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UL-UM-RLC')))
    __RLC_Config_um_Bi_Directional_dl_UM_RLC = SEQ(name='dl-UM-RLC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DL-UM-RLC')))
    _RLC_Config_um_Bi_Directional._cont = ASN1Dict([
        ('ul-UM-RLC', __RLC_Config_um_Bi_Directional_ul_UM_RLC),
        ('dl-UM-RLC', __RLC_Config_um_Bi_Directional_dl_UM_RLC),
        ])
    _RLC_Config_um_Bi_Directional._ext = None
    _RLC_Config_um_Uni_Directional_UL = SEQ(name='um-Uni-Directional-UL', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RLC_Config_um_Uni_Directional_UL_ul_UM_RLC = SEQ(name='ul-UM-RLC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UL-UM-RLC')))
    _RLC_Config_um_Uni_Directional_UL._cont = ASN1Dict([
        ('ul-UM-RLC', __RLC_Config_um_Uni_Directional_UL_ul_UM_RLC),
        ])
    _RLC_Config_um_Uni_Directional_UL._ext = None
    _RLC_Config_um_Uni_Directional_DL = SEQ(name='um-Uni-Directional-DL', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RLC_Config_um_Uni_Directional_DL_dl_UM_RLC = SEQ(name='dl-UM-RLC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DL-UM-RLC')))
    _RLC_Config_um_Uni_Directional_DL._cont = ASN1Dict([
        ('dl-UM-RLC', __RLC_Config_um_Uni_Directional_DL_dl_UM_RLC),
        ])
    _RLC_Config_um_Uni_Directional_DL._ext = None
    RLC_Config._cont = ASN1Dict([
        ('am', _RLC_Config_am),
        ('um-Bi-Directional', _RLC_Config_um_Bi_Directional),
        ('um-Uni-Directional-UL', _RLC_Config_um_Uni_Directional_UL),
        ('um-Uni-Directional-DL', _RLC_Config_um_Uni_Directional_DL),
        ])
    RLC_Config._ext = []
    
    #-----< UL-AM-RLC >-----#
    UL_AM_RLC = SEQ(name='UL-AM-RLC', mode=MODE_TYPE)
    _UL_AM_RLC_t_PollRetransmit = ENUM(name='t-PollRetransmit', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'T-PollRetransmit')))
    _UL_AM_RLC_pollPDU = ENUM(name='pollPDU', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PollPDU')))
    _UL_AM_RLC_pollByte = ENUM(name='pollByte', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PollByte')))
    _UL_AM_RLC_maxRetxThreshold = ENUM(name='maxRetxThreshold', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_AM_RLC_maxRetxThreshold._cont = ASN1Dict([('t1', 0), ('t2', 1), ('t3', 2), ('t4', 3), ('t6', 4), ('t8', 5), ('t16', 6), ('t32', 7)])
    _UL_AM_RLC_maxRetxThreshold._ext = None
    UL_AM_RLC._cont = ASN1Dict([
        ('t-PollRetransmit', _UL_AM_RLC_t_PollRetransmit),
        ('pollPDU', _UL_AM_RLC_pollPDU),
        ('pollByte', _UL_AM_RLC_pollByte),
        ('maxRetxThreshold', _UL_AM_RLC_maxRetxThreshold),
        ])
    UL_AM_RLC._ext = None
    
    #-----< DL-AM-RLC >-----#
    DL_AM_RLC = SEQ(name='DL-AM-RLC', mode=MODE_TYPE)
    _DL_AM_RLC_t_Reordering = ENUM(name='t-Reordering', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'T-Reordering')))
    _DL_AM_RLC_t_StatusProhibit = ENUM(name='t-StatusProhibit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'T-StatusProhibit')))
    DL_AM_RLC._cont = ASN1Dict([
        ('t-Reordering', _DL_AM_RLC_t_Reordering),
        ('t-StatusProhibit', _DL_AM_RLC_t_StatusProhibit),
        ])
    DL_AM_RLC._ext = None
    
    #-----< UL-UM-RLC >-----#
    UL_UM_RLC = SEQ(name='UL-UM-RLC', mode=MODE_TYPE)
    _UL_UM_RLC_sn_FieldLength = ENUM(name='sn-FieldLength', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SN-FieldLength')))
    UL_UM_RLC._cont = ASN1Dict([
        ('sn-FieldLength', _UL_UM_RLC_sn_FieldLength),
        ])
    UL_UM_RLC._ext = None
    
    #-----< DL-UM-RLC >-----#
    DL_UM_RLC = SEQ(name='DL-UM-RLC', mode=MODE_TYPE)
    _DL_UM_RLC_sn_FieldLength = ENUM(name='sn-FieldLength', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SN-FieldLength')))
    _DL_UM_RLC_t_Reordering = ENUM(name='t-Reordering', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'T-Reordering')))
    DL_UM_RLC._cont = ASN1Dict([
        ('sn-FieldLength', _DL_UM_RLC_sn_FieldLength),
        ('t-Reordering', _DL_UM_RLC_t_Reordering),
        ])
    DL_UM_RLC._ext = None
    
    #-----< SN-FieldLength >-----#
    SN_FieldLength = ENUM(name='SN-FieldLength', mode=MODE_TYPE)
    SN_FieldLength._cont = ASN1Dict([('size5', 0), ('size10', 1)])
    SN_FieldLength._ext = None
    
    #-----< T-PollRetransmit >-----#
    T_PollRetransmit = ENUM(name='T-PollRetransmit', mode=MODE_TYPE)
    T_PollRetransmit._cont = ASN1Dict([('ms5', 0), ('ms10', 1), ('ms15', 2), ('ms20', 3), ('ms25', 4), ('ms30', 5), ('ms35', 6), ('ms40', 7), ('ms45', 8), ('ms50', 9), ('ms55', 10), ('ms60', 11), ('ms65', 12), ('ms70', 13), ('ms75', 14), ('ms80', 15), ('ms85', 16), ('ms90', 17), ('ms95', 18), ('ms100', 19), ('ms105', 20), ('ms110', 21), ('ms115', 22), ('ms120', 23), ('ms125', 24), ('ms130', 25), ('ms135', 26), ('ms140', 27), ('ms145', 28), ('ms150', 29), ('ms155', 30), ('ms160', 31), ('ms165', 32), ('ms170', 33), ('ms175', 34), ('ms180', 35), ('ms185', 36), ('ms190', 37), ('ms195', 38), ('ms200', 39), ('ms205', 40), ('ms210', 41), ('ms215', 42), ('ms220', 43), ('ms225', 44), ('ms230', 45), ('ms235', 46), ('ms240', 47), ('ms245', 48), ('ms250', 49), ('ms300', 50), ('ms350', 51), ('ms400', 52), ('ms450', 53), ('ms500', 54), ('spare9', 55), ('spare8', 56), ('spare7', 57), ('spare6', 58), ('spare5', 59), ('spare4', 60), ('spare3', 61), ('spare2', 62), ('spare1', 63)])
    T_PollRetransmit._ext = None
    
    #-----< PollPDU >-----#
    PollPDU = ENUM(name='PollPDU', mode=MODE_TYPE)
    PollPDU._cont = ASN1Dict([('p4', 0), ('p8', 1), ('p16', 2), ('p32', 3), ('p64', 4), ('p128', 5), ('p256', 6), ('pInfinity', 7)])
    PollPDU._ext = None
    
    #-----< PollByte >-----#
    PollByte = ENUM(name='PollByte', mode=MODE_TYPE)
    PollByte._cont = ASN1Dict([('kB25', 0), ('kB50', 1), ('kB75', 2), ('kB100', 3), ('kB125', 4), ('kB250', 5), ('kB375', 6), ('kB500', 7), ('kB750', 8), ('kB1000', 9), ('kB1250', 10), ('kB1500', 11), ('kB2000', 12), ('kB3000', 13), ('kBinfinity', 14), ('spare1', 15)])
    PollByte._ext = None
    
    #-----< T-Reordering >-----#
    T_Reordering = ENUM(name='T-Reordering', mode=MODE_TYPE)
    T_Reordering._cont = ASN1Dict([('ms0', 0), ('ms5', 1), ('ms10', 2), ('ms15', 3), ('ms20', 4), ('ms25', 5), ('ms30', 6), ('ms35', 7), ('ms40', 8), ('ms45', 9), ('ms50', 10), ('ms55', 11), ('ms60', 12), ('ms65', 13), ('ms70', 14), ('ms75', 15), ('ms80', 16), ('ms85', 17), ('ms90', 18), ('ms95', 19), ('ms100', 20), ('ms110', 21), ('ms120', 22), ('ms130', 23), ('ms140', 24), ('ms150', 25), ('ms160', 26), ('ms170', 27), ('ms180', 28), ('ms190', 29), ('ms200', 30), ('spare1', 31)])
    T_Reordering._ext = None
    
    #-----< T-StatusProhibit >-----#
    T_StatusProhibit = ENUM(name='T-StatusProhibit', mode=MODE_TYPE)
    T_StatusProhibit._cont = ASN1Dict([('ms0', 0), ('ms5', 1), ('ms10', 2), ('ms15', 3), ('ms20', 4), ('ms25', 5), ('ms30', 6), ('ms35', 7), ('ms40', 8), ('ms45', 9), ('ms50', 10), ('ms55', 11), ('ms60', 12), ('ms65', 13), ('ms70', 14), ('ms75', 15), ('ms80', 16), ('ms85', 17), ('ms90', 18), ('ms95', 19), ('ms100', 20), ('ms105', 21), ('ms110', 22), ('ms115', 23), ('ms120', 24), ('ms125', 25), ('ms130', 26), ('ms135', 27), ('ms140', 28), ('ms145', 29), ('ms150', 30), ('ms155', 31), ('ms160', 32), ('ms165', 33), ('ms170', 34), ('ms175', 35), ('ms180', 36), ('ms185', 37), ('ms190', 38), ('ms195', 39), ('ms200', 40), ('ms205', 41), ('ms210', 42), ('ms215', 43), ('ms220', 44), ('ms225', 45), ('ms230', 46), ('ms235', 47), ('ms240', 48), ('ms245', 49), ('ms250', 50), ('ms300', 51), ('ms350', 52), ('ms400', 53), ('ms450', 54), ('ms500', 55), ('spare8', 56), ('spare7', 57), ('spare6', 58), ('spare5', 59), ('spare4', 60), ('spare3', 61), ('spare2', 62), ('spare1', 63)])
    T_StatusProhibit._ext = None
    
    #-----< SchedulingRequestConfig >-----#
    SchedulingRequestConfig = CHOICE(name='SchedulingRequestConfig', mode=MODE_TYPE)
    _SchedulingRequestConfig_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SchedulingRequestConfig_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestConfig_setup_sr_PUCCH_ResourceIndex = INT(name='sr-PUCCH-ResourceIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestConfig_setup_sr_PUCCH_ResourceIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    __SchedulingRequestConfig_setup_sr_ConfigIndex = INT(name='sr-ConfigIndex', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestConfig_setup_sr_ConfigIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=155)], ev=None, er=[])
    __SchedulingRequestConfig_setup_dsr_TransMax = ENUM(name='dsr-TransMax', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestConfig_setup_dsr_TransMax._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n16', 2), ('n32', 3), ('n64', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    __SchedulingRequestConfig_setup_dsr_TransMax._ext = None
    _SchedulingRequestConfig_setup._cont = ASN1Dict([
        ('sr-PUCCH-ResourceIndex', __SchedulingRequestConfig_setup_sr_PUCCH_ResourceIndex),
        ('sr-ConfigIndex', __SchedulingRequestConfig_setup_sr_ConfigIndex),
        ('dsr-TransMax', __SchedulingRequestConfig_setup_dsr_TransMax),
        ])
    _SchedulingRequestConfig_setup._ext = None
    SchedulingRequestConfig._cont = ASN1Dict([
        ('release', _SchedulingRequestConfig_release),
        ('setup', _SchedulingRequestConfig_setup),
        ])
    SchedulingRequestConfig._ext = None
    
    #-----< SoundingRS-UL-ConfigCommon >-----#
    SoundingRS_UL_ConfigCommon = CHOICE(name='SoundingRS-UL-ConfigCommon', mode=MODE_TYPE)
    _SoundingRS_UL_ConfigCommon_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SoundingRS_UL_ConfigCommon_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigCommon_setup_srs_BandwidthConfig = ENUM(name='srs-BandwidthConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigCommon_setup_srs_BandwidthConfig._cont = ASN1Dict([('bw0', 0), ('bw1', 1), ('bw2', 2), ('bw3', 3), ('bw4', 4), ('bw5', 5), ('bw6', 6), ('bw7', 7)])
    __SoundingRS_UL_ConfigCommon_setup_srs_BandwidthConfig._ext = None
    __SoundingRS_UL_ConfigCommon_setup_srs_SubframeConfig = ENUM(name='srs-SubframeConfig', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigCommon_setup_srs_SubframeConfig._cont = ASN1Dict([('sc0', 0), ('sc1', 1), ('sc2', 2), ('sc3', 3), ('sc4', 4), ('sc5', 5), ('sc6', 6), ('sc7', 7), ('sc8', 8), ('sc9', 9), ('sc10', 10), ('sc11', 11), ('sc12', 12), ('sc13', 13), ('sc14', 14), ('sc15', 15)])
    __SoundingRS_UL_ConfigCommon_setup_srs_SubframeConfig._ext = None
    __SoundingRS_UL_ConfigCommon_setup_ackNackSRS_SimultaneousTransmission = BOOL(name='ackNackSRS-SimultaneousTransmission', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigCommon_setup_srs_MaxUpPts = ENUM(name='srs-MaxUpPts', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SoundingRS_UL_ConfigCommon_setup_srs_MaxUpPts._cont = ASN1Dict([('true', 0)])
    __SoundingRS_UL_ConfigCommon_setup_srs_MaxUpPts._ext = None
    _SoundingRS_UL_ConfigCommon_setup._cont = ASN1Dict([
        ('srs-BandwidthConfig', __SoundingRS_UL_ConfigCommon_setup_srs_BandwidthConfig),
        ('srs-SubframeConfig', __SoundingRS_UL_ConfigCommon_setup_srs_SubframeConfig),
        ('ackNackSRS-SimultaneousTransmission', __SoundingRS_UL_ConfigCommon_setup_ackNackSRS_SimultaneousTransmission),
        ('srs-MaxUpPts', __SoundingRS_UL_ConfigCommon_setup_srs_MaxUpPts),
        ])
    _SoundingRS_UL_ConfigCommon_setup._ext = None
    SoundingRS_UL_ConfigCommon._cont = ASN1Dict([
        ('release', _SoundingRS_UL_ConfigCommon_release),
        ('setup', _SoundingRS_UL_ConfigCommon_setup),
        ])
    SoundingRS_UL_ConfigCommon._ext = None
    
    #-----< SoundingRS-UL-ConfigDedicated >-----#
    SoundingRS_UL_ConfigDedicated = CHOICE(name='SoundingRS-UL-ConfigDedicated', mode=MODE_TYPE)
    _SoundingRS_UL_ConfigDedicated_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SoundingRS_UL_ConfigDedicated_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigDedicated_setup_srs_Bandwidth = ENUM(name='srs-Bandwidth', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigDedicated_setup_srs_Bandwidth._cont = ASN1Dict([('bw0', 0), ('bw1', 1), ('bw2', 2), ('bw3', 3)])
    __SoundingRS_UL_ConfigDedicated_setup_srs_Bandwidth._ext = None
    __SoundingRS_UL_ConfigDedicated_setup_srs_HoppingBandwidth = ENUM(name='srs-HoppingBandwidth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigDedicated_setup_srs_HoppingBandwidth._cont = ASN1Dict([('hbw0', 0), ('hbw1', 1), ('hbw2', 2), ('hbw3', 3)])
    __SoundingRS_UL_ConfigDedicated_setup_srs_HoppingBandwidth._ext = None
    __SoundingRS_UL_ConfigDedicated_setup_freqDomainPosition = INT(name='freqDomainPosition', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigDedicated_setup_freqDomainPosition._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=23)], ev=None, er=[])
    __SoundingRS_UL_ConfigDedicated_setup_duration = BOOL(name='duration', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigDedicated_setup_srs_ConfigIndex = INT(name='srs-ConfigIndex', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigDedicated_setup_srs_ConfigIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    __SoundingRS_UL_ConfigDedicated_setup_transmissionComb = INT(name='transmissionComb', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigDedicated_setup_transmissionComb._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    __SoundingRS_UL_ConfigDedicated_setup_cyclicShift = ENUM(name='cyclicShift', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SoundingRS_UL_ConfigDedicated_setup_cyclicShift._cont = ASN1Dict([('cs0', 0), ('cs1', 1), ('cs2', 2), ('cs3', 3), ('cs4', 4), ('cs5', 5), ('cs6', 6), ('cs7', 7)])
    __SoundingRS_UL_ConfigDedicated_setup_cyclicShift._ext = None
    _SoundingRS_UL_ConfigDedicated_setup._cont = ASN1Dict([
        ('srs-Bandwidth', __SoundingRS_UL_ConfigDedicated_setup_srs_Bandwidth),
        ('srs-HoppingBandwidth', __SoundingRS_UL_ConfigDedicated_setup_srs_HoppingBandwidth),
        ('freqDomainPosition', __SoundingRS_UL_ConfigDedicated_setup_freqDomainPosition),
        ('duration', __SoundingRS_UL_ConfigDedicated_setup_duration),
        ('srs-ConfigIndex', __SoundingRS_UL_ConfigDedicated_setup_srs_ConfigIndex),
        ('transmissionComb', __SoundingRS_UL_ConfigDedicated_setup_transmissionComb),
        ('cyclicShift', __SoundingRS_UL_ConfigDedicated_setup_cyclicShift),
        ])
    _SoundingRS_UL_ConfigDedicated_setup._ext = None
    SoundingRS_UL_ConfigDedicated._cont = ASN1Dict([
        ('release', _SoundingRS_UL_ConfigDedicated_release),
        ('setup', _SoundingRS_UL_ConfigDedicated_setup),
        ])
    SoundingRS_UL_ConfigDedicated._ext = None
    
    #-----< SPS-Config >-----#
    SPS_Config = SEQ(name='SPS-Config', mode=MODE_TYPE)
    _SPS_Config_semiPersistSchedC_RNTI = BIT_STR(name='semiPersistSchedC-RNTI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'C-RNTI')), opt=True)
    _SPS_Config_sps_ConfigDL = CHOICE(name='sps-ConfigDL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SPS-ConfigDL')), opt=True)
    _SPS_Config_sps_ConfigUL = CHOICE(name='sps-ConfigUL', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SPS-ConfigUL')), opt=True)
    SPS_Config._cont = ASN1Dict([
        ('semiPersistSchedC-RNTI', _SPS_Config_semiPersistSchedC_RNTI),
        ('sps-ConfigDL', _SPS_Config_sps_ConfigDL),
        ('sps-ConfigUL', _SPS_Config_sps_ConfigUL),
        ])
    SPS_Config._ext = None
    
    #-----< SPS-ConfigDL >-----#
    SPS_ConfigDL = CHOICE(name='SPS-ConfigDL', mode=MODE_TYPE)
    _SPS_ConfigDL_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SPS_ConfigDL_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SPS_ConfigDL_setup_semiPersistSchedIntervalDL = ENUM(name='semiPersistSchedIntervalDL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SPS_ConfigDL_setup_semiPersistSchedIntervalDL._cont = ASN1Dict([('sf10', 0), ('sf20', 1), ('sf32', 2), ('sf40', 3), ('sf64', 4), ('sf80', 5), ('sf128', 6), ('sf160', 7), ('sf320', 8), ('sf640', 9), ('spare6', 10), ('spare5', 11), ('spare4', 12), ('spare3', 13), ('spare2', 14), ('spare1', 15)])
    __SPS_ConfigDL_setup_semiPersistSchedIntervalDL._ext = None
    __SPS_ConfigDL_setup_numberOfConfSPS_Processes = INT(name='numberOfConfSPS-Processes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SPS_ConfigDL_setup_numberOfConfSPS_Processes._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    __SPS_ConfigDL_setup_n1_PUCCH_AN_PersistentList = SEQ_OF(name='n1-PUCCH-AN-PersistentList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'N1-PUCCH-AN-PersistentList')))
    _SPS_ConfigDL_setup._cont = ASN1Dict([
        ('semiPersistSchedIntervalDL', __SPS_ConfigDL_setup_semiPersistSchedIntervalDL),
        ('numberOfConfSPS-Processes', __SPS_ConfigDL_setup_numberOfConfSPS_Processes),
        ('n1-PUCCH-AN-PersistentList', __SPS_ConfigDL_setup_n1_PUCCH_AN_PersistentList),
        ])
    _SPS_ConfigDL_setup._ext = []
    SPS_ConfigDL._cont = ASN1Dict([
        ('release', _SPS_ConfigDL_release),
        ('setup', _SPS_ConfigDL_setup),
        ])
    SPS_ConfigDL._ext = None
    
    #-----< SPS-ConfigUL >-----#
    SPS_ConfigUL = CHOICE(name='SPS-ConfigUL', mode=MODE_TYPE)
    _SPS_ConfigUL_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SPS_ConfigUL_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SPS_ConfigUL_setup_semiPersistSchedIntervalUL = ENUM(name='semiPersistSchedIntervalUL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SPS_ConfigUL_setup_semiPersistSchedIntervalUL._cont = ASN1Dict([('sf10', 0), ('sf20', 1), ('sf32', 2), ('sf40', 3), ('sf64', 4), ('sf80', 5), ('sf128', 6), ('sf160', 7), ('sf320', 8), ('sf640', 9), ('spare6', 10), ('spare5', 11), ('spare4', 12), ('spare3', 13), ('spare2', 14), ('spare1', 15)])
    __SPS_ConfigUL_setup_semiPersistSchedIntervalUL._ext = None
    __SPS_ConfigUL_setup_implicitReleaseAfter = ENUM(name='implicitReleaseAfter', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SPS_ConfigUL_setup_implicitReleaseAfter._cont = ASN1Dict([('e2', 0), ('e3', 1), ('e4', 2), ('e8', 3)])
    __SPS_ConfigUL_setup_implicitReleaseAfter._ext = None
    __SPS_ConfigUL_setup_p0_Persistent = SEQ(name='p0-Persistent', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___SPS_ConfigUL_setup_p0_Persistent_p0_NominalPUSCH_Persistent = INT(name='p0-NominalPUSCH-Persistent', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SPS_ConfigUL_setup_p0_Persistent_p0_NominalPUSCH_Persistent._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-126, ub=24)], ev=None, er=[])
    ___SPS_ConfigUL_setup_p0_Persistent_p0_UE_PUSCH_Persistent = INT(name='p0-UE-PUSCH-Persistent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SPS_ConfigUL_setup_p0_Persistent_p0_UE_PUSCH_Persistent._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8, ub=7)], ev=None, er=[])
    __SPS_ConfigUL_setup_p0_Persistent._cont = ASN1Dict([
        ('p0-NominalPUSCH-Persistent', ___SPS_ConfigUL_setup_p0_Persistent_p0_NominalPUSCH_Persistent),
        ('p0-UE-PUSCH-Persistent', ___SPS_ConfigUL_setup_p0_Persistent_p0_UE_PUSCH_Persistent),
        ])
    __SPS_ConfigUL_setup_p0_Persistent._ext = None
    __SPS_ConfigUL_setup_twoIntervalsConfig = ENUM(name='twoIntervalsConfig', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SPS_ConfigUL_setup_twoIntervalsConfig._cont = ASN1Dict([('true', 0)])
    __SPS_ConfigUL_setup_twoIntervalsConfig._ext = None
    _SPS_ConfigUL_setup._cont = ASN1Dict([
        ('semiPersistSchedIntervalUL', __SPS_ConfigUL_setup_semiPersistSchedIntervalUL),
        ('implicitReleaseAfter', __SPS_ConfigUL_setup_implicitReleaseAfter),
        ('p0-Persistent', __SPS_ConfigUL_setup_p0_Persistent),
        ('twoIntervalsConfig', __SPS_ConfigUL_setup_twoIntervalsConfig),
        ])
    _SPS_ConfigUL_setup._ext = []
    SPS_ConfigUL._cont = ASN1Dict([
        ('release', _SPS_ConfigUL_release),
        ('setup', _SPS_ConfigUL_setup),
        ])
    SPS_ConfigUL._ext = None
    
    #-----< N1-PUCCH-AN-PersistentList >-----#
    N1_PUCCH_AN_PersistentList = SEQ_OF(name='N1-PUCCH-AN-PersistentList', mode=MODE_TYPE)
    _N1_PUCCH_AN_PersistentList__item_ = INT(name='_item_', mode=MODE_TYPE)
    _N1_PUCCH_AN_PersistentList__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    N1_PUCCH_AN_PersistentList._cont = _N1_PUCCH_AN_PersistentList__item_
    N1_PUCCH_AN_PersistentList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< TDD-Config >-----#
    TDD_Config = SEQ(name='TDD-Config', mode=MODE_TYPE)
    _TDD_Config_subframeAssignment = ENUM(name='subframeAssignment', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TDD_Config_subframeAssignment._cont = ASN1Dict([('sa0', 0), ('sa1', 1), ('sa2', 2), ('sa3', 3), ('sa4', 4), ('sa5', 5), ('sa6', 6)])
    _TDD_Config_subframeAssignment._ext = None
    _TDD_Config_specialSubframePatterns = ENUM(name='specialSubframePatterns', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TDD_Config_specialSubframePatterns._cont = ASN1Dict([('ssp0', 0), ('ssp1', 1), ('ssp2', 2), ('ssp3', 3), ('ssp4', 4), ('ssp5', 5), ('ssp6', 6), ('ssp7', 7), ('ssp8', 8)])
    _TDD_Config_specialSubframePatterns._ext = None
    TDD_Config._cont = ASN1Dict([
        ('subframeAssignment', _TDD_Config_subframeAssignment),
        ('specialSubframePatterns', _TDD_Config_specialSubframePatterns),
        ])
    TDD_Config._ext = None
    
    #-----< TimeAlignmentTimer >-----#
    TimeAlignmentTimer = ENUM(name='TimeAlignmentTimer', mode=MODE_TYPE)
    TimeAlignmentTimer._cont = ASN1Dict([('sf500', 0), ('sf750', 1), ('sf1280', 2), ('sf1920', 3), ('sf2560', 4), ('sf5120', 5), ('sf10240', 6), ('infinity', 7)])
    TimeAlignmentTimer._ext = None
    
    #-----< TPC-PDCCH-Config >-----#
    TPC_PDCCH_Config = CHOICE(name='TPC-PDCCH-Config', mode=MODE_TYPE)
    _TPC_PDCCH_Config_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TPC_PDCCH_Config_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TPC_PDCCH_Config_setup_tpc_RNTI = BIT_STR(name='tpc-RNTI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TPC_PDCCH_Config_setup_tpc_RNTI._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    __TPC_PDCCH_Config_setup_tpc_Index = CHOICE(name='tpc-Index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'TPC-Index')))
    _TPC_PDCCH_Config_setup._cont = ASN1Dict([
        ('tpc-RNTI', __TPC_PDCCH_Config_setup_tpc_RNTI),
        ('tpc-Index', __TPC_PDCCH_Config_setup_tpc_Index),
        ])
    _TPC_PDCCH_Config_setup._ext = None
    TPC_PDCCH_Config._cont = ASN1Dict([
        ('release', _TPC_PDCCH_Config_release),
        ('setup', _TPC_PDCCH_Config_setup),
        ])
    TPC_PDCCH_Config._ext = None
    
    #-----< TPC-Index >-----#
    TPC_Index = CHOICE(name='TPC-Index', mode=MODE_TYPE)
    _TPC_Index_indexOfFormat3 = INT(name='indexOfFormat3', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TPC_Index_indexOfFormat3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    _TPC_Index_indexOfFormat3A = INT(name='indexOfFormat3A', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TPC_Index_indexOfFormat3A._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=31)], ev=None, er=[])
    TPC_Index._cont = ASN1Dict([
        ('indexOfFormat3', _TPC_Index_indexOfFormat3),
        ('indexOfFormat3A', _TPC_Index_indexOfFormat3A),
        ])
    TPC_Index._ext = None
    
    #-----< UplinkPowerControlCommon >-----#
    UplinkPowerControlCommon = SEQ(name='UplinkPowerControlCommon', mode=MODE_TYPE)
    _UplinkPowerControlCommon_p0_NominalPUSCH = INT(name='p0-NominalPUSCH', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UplinkPowerControlCommon_p0_NominalPUSCH._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-126, ub=24)], ev=None, er=[])
    _UplinkPowerControlCommon_alpha = ENUM(name='alpha', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UplinkPowerControlCommon_alpha._cont = ASN1Dict([('al0', 0), ('al04', 1), ('al05', 2), ('al06', 3), ('al07', 4), ('al08', 5), ('al09', 6), ('al1', 7)])
    _UplinkPowerControlCommon_alpha._ext = None
    _UplinkPowerControlCommon_p0_NominalPUCCH = INT(name='p0-NominalPUCCH', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UplinkPowerControlCommon_p0_NominalPUCCH._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=-96)], ev=None, er=[])
    _UplinkPowerControlCommon_deltaFList_PUCCH = SEQ(name='deltaFList-PUCCH', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DeltaFList-PUCCH')))
    _UplinkPowerControlCommon_deltaPreambleMsg3 = INT(name='deltaPreambleMsg3', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UplinkPowerControlCommon_deltaPreambleMsg3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1, ub=6)], ev=None, er=[])
    UplinkPowerControlCommon._cont = ASN1Dict([
        ('p0-NominalPUSCH', _UplinkPowerControlCommon_p0_NominalPUSCH),
        ('alpha', _UplinkPowerControlCommon_alpha),
        ('p0-NominalPUCCH', _UplinkPowerControlCommon_p0_NominalPUCCH),
        ('deltaFList-PUCCH', _UplinkPowerControlCommon_deltaFList_PUCCH),
        ('deltaPreambleMsg3', _UplinkPowerControlCommon_deltaPreambleMsg3),
        ])
    UplinkPowerControlCommon._ext = None
    
    #-----< UplinkPowerControlDedicated >-----#
    UplinkPowerControlDedicated = SEQ(name='UplinkPowerControlDedicated', mode=MODE_TYPE)
    _UplinkPowerControlDedicated_p0_UE_PUSCH = INT(name='p0-UE-PUSCH', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UplinkPowerControlDedicated_p0_UE_PUSCH._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8, ub=7)], ev=None, er=[])
    _UplinkPowerControlDedicated_deltaMCS_Enabled = ENUM(name='deltaMCS-Enabled', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UplinkPowerControlDedicated_deltaMCS_Enabled._cont = ASN1Dict([('en0', 0), ('en1', 1)])
    _UplinkPowerControlDedicated_deltaMCS_Enabled._ext = None
    _UplinkPowerControlDedicated_accumulationEnabled = BOOL(name='accumulationEnabled', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UplinkPowerControlDedicated_p0_UE_PUCCH = INT(name='p0-UE-PUCCH', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UplinkPowerControlDedicated_p0_UE_PUCCH._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8, ub=7)], ev=None, er=[])
    _UplinkPowerControlDedicated_pSRS_Offset = INT(name='pSRS-Offset', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UplinkPowerControlDedicated_pSRS_Offset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _UplinkPowerControlDedicated_filterCoefficient = ENUM(name='filterCoefficient', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FilterCoefficient')), default='fc4')
    UplinkPowerControlDedicated._cont = ASN1Dict([
        ('p0-UE-PUSCH', _UplinkPowerControlDedicated_p0_UE_PUSCH),
        ('deltaMCS-Enabled', _UplinkPowerControlDedicated_deltaMCS_Enabled),
        ('accumulationEnabled', _UplinkPowerControlDedicated_accumulationEnabled),
        ('p0-UE-PUCCH', _UplinkPowerControlDedicated_p0_UE_PUCCH),
        ('pSRS-Offset', _UplinkPowerControlDedicated_pSRS_Offset),
        ('filterCoefficient', _UplinkPowerControlDedicated_filterCoefficient),
        ])
    UplinkPowerControlDedicated._ext = None
    
    #-----< DeltaFList-PUCCH >-----#
    DeltaFList_PUCCH = SEQ(name='DeltaFList-PUCCH', mode=MODE_TYPE)
    _DeltaFList_PUCCH_deltaF_PUCCH_Format1 = ENUM(name='deltaF-PUCCH-Format1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DeltaFList_PUCCH_deltaF_PUCCH_Format1._cont = ASN1Dict([('deltaF-2', 0), ('deltaF0', 1), ('deltaF2', 2)])
    _DeltaFList_PUCCH_deltaF_PUCCH_Format1._ext = None
    _DeltaFList_PUCCH_deltaF_PUCCH_Format1b = ENUM(name='deltaF-PUCCH-Format1b', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DeltaFList_PUCCH_deltaF_PUCCH_Format1b._cont = ASN1Dict([('deltaF1', 0), ('deltaF3', 1), ('deltaF5', 2)])
    _DeltaFList_PUCCH_deltaF_PUCCH_Format1b._ext = None
    _DeltaFList_PUCCH_deltaF_PUCCH_Format2 = ENUM(name='deltaF-PUCCH-Format2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DeltaFList_PUCCH_deltaF_PUCCH_Format2._cont = ASN1Dict([('deltaF-2', 0), ('deltaF0', 1), ('deltaF1', 2), ('deltaF2', 3)])
    _DeltaFList_PUCCH_deltaF_PUCCH_Format2._ext = None
    _DeltaFList_PUCCH_deltaF_PUCCH_Format2a = ENUM(name='deltaF-PUCCH-Format2a', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DeltaFList_PUCCH_deltaF_PUCCH_Format2a._cont = ASN1Dict([('deltaF-2', 0), ('deltaF0', 1), ('deltaF2', 2)])
    _DeltaFList_PUCCH_deltaF_PUCCH_Format2a._ext = None
    _DeltaFList_PUCCH_deltaF_PUCCH_Format2b = ENUM(name='deltaF-PUCCH-Format2b', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DeltaFList_PUCCH_deltaF_PUCCH_Format2b._cont = ASN1Dict([('deltaF-2', 0), ('deltaF0', 1), ('deltaF2', 2)])
    _DeltaFList_PUCCH_deltaF_PUCCH_Format2b._ext = None
    DeltaFList_PUCCH._cont = ASN1Dict([
        ('deltaF-PUCCH-Format1', _DeltaFList_PUCCH_deltaF_PUCCH_Format1),
        ('deltaF-PUCCH-Format1b', _DeltaFList_PUCCH_deltaF_PUCCH_Format1b),
        ('deltaF-PUCCH-Format2', _DeltaFList_PUCCH_deltaF_PUCCH_Format2),
        ('deltaF-PUCCH-Format2a', _DeltaFList_PUCCH_deltaF_PUCCH_Format2a),
        ('deltaF-PUCCH-Format2b', _DeltaFList_PUCCH_deltaF_PUCCH_Format2b),
        ])
    DeltaFList_PUCCH._ext = None
    
    #-----< NextHopChainingCount >-----#
    NextHopChainingCount = INT(name='NextHopChainingCount', mode=MODE_TYPE)
    NextHopChainingCount._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< SecurityAlgorithmConfig >-----#
    SecurityAlgorithmConfig = SEQ(name='SecurityAlgorithmConfig', mode=MODE_TYPE)
    _SecurityAlgorithmConfig_cipheringAlgorithm = ENUM(name='cipheringAlgorithm', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SecurityAlgorithmConfig_cipheringAlgorithm._cont = ASN1Dict([('eea0', 0), ('eea1', 1), ('eea2', 2), ('spare5', 3), ('spare4', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    _SecurityAlgorithmConfig_cipheringAlgorithm._ext = []
    _SecurityAlgorithmConfig_integrityProtAlgorithm = ENUM(name='integrityProtAlgorithm', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SecurityAlgorithmConfig_integrityProtAlgorithm._cont = ASN1Dict([('reserved', 0), ('eia1', 1), ('eia2', 2), ('spare5', 3), ('spare4', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    _SecurityAlgorithmConfig_integrityProtAlgorithm._ext = []
    SecurityAlgorithmConfig._cont = ASN1Dict([
        ('cipheringAlgorithm', _SecurityAlgorithmConfig_cipheringAlgorithm),
        ('integrityProtAlgorithm', _SecurityAlgorithmConfig_integrityProtAlgorithm),
        ])
    SecurityAlgorithmConfig._ext = None
    
    #-----< ShortMAC-I >-----#
    ShortMAC_I = BIT_STR(name='ShortMAC-I', mode=MODE_TYPE)
    ShortMAC_I._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< AdditionalSpectrumEmission >-----#
    AdditionalSpectrumEmission = INT(name='AdditionalSpectrumEmission', mode=MODE_TYPE)
    AdditionalSpectrumEmission._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< ARFCN-ValueCDMA2000 >-----#
    ARFCN_ValueCDMA2000 = INT(name='ARFCN-ValueCDMA2000', mode=MODE_TYPE)
    ARFCN_ValueCDMA2000._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    
    #-----< ARFCN-ValueEUTRA >-----#
    ARFCN_ValueEUTRA = INT(name='ARFCN-ValueEUTRA', mode=MODE_TYPE)
    ARFCN_ValueEUTRA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< ARFCN-ValueGERAN >-----#
    ARFCN_ValueGERAN = INT(name='ARFCN-ValueGERAN', mode=MODE_TYPE)
    ARFCN_ValueGERAN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    
    #-----< ARFCN-ValueUTRA >-----#
    ARFCN_ValueUTRA = INT(name='ARFCN-ValueUTRA', mode=MODE_TYPE)
    ARFCN_ValueUTRA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    
    #-----< BandclassCDMA2000 >-----#
    BandclassCDMA2000 = ENUM(name='BandclassCDMA2000', mode=MODE_TYPE)
    BandclassCDMA2000._cont = ASN1Dict([('bc0', 0), ('bc1', 1), ('bc2', 2), ('bc3', 3), ('bc4', 4), ('bc5', 5), ('bc6', 6), ('bc7', 7), ('bc8', 8), ('bc9', 9), ('bc10', 10), ('bc11', 11), ('bc12', 12), ('bc13', 13), ('bc14', 14), ('bc15', 15), ('bc16', 16), ('bc17', 17), ('spare14', 18), ('spare13', 19), ('spare12', 20), ('spare11', 21), ('spare10', 22), ('spare9', 23), ('spare8', 24), ('spare7', 25), ('spare6', 26), ('spare5', 27), ('spare4', 28), ('spare3', 29), ('spare2', 30), ('spare1', 31)])
    BandclassCDMA2000._ext = []
    
    #-----< BandIndicatorGERAN >-----#
    BandIndicatorGERAN = ENUM(name='BandIndicatorGERAN', mode=MODE_TYPE)
    BandIndicatorGERAN._cont = ASN1Dict([('dcs1800', 0), ('pcs1900', 1)])
    BandIndicatorGERAN._ext = None
    
    #-----< CarrierFreqCDMA2000 >-----#
    CarrierFreqCDMA2000 = SEQ(name='CarrierFreqCDMA2000', mode=MODE_TYPE)
    _CarrierFreqCDMA2000_bandClass = ENUM(name='bandClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandclassCDMA2000')))
    _CarrierFreqCDMA2000_arfcn = INT(name='arfcn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueCDMA2000')))
    CarrierFreqCDMA2000._cont = ASN1Dict([
        ('bandClass', _CarrierFreqCDMA2000_bandClass),
        ('arfcn', _CarrierFreqCDMA2000_arfcn),
        ])
    CarrierFreqCDMA2000._ext = None
    
    #-----< CarrierFreqGERAN >-----#
    CarrierFreqGERAN = SEQ(name='CarrierFreqGERAN', mode=MODE_TYPE)
    _CarrierFreqGERAN_arfcn = INT(name='arfcn', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueGERAN')))
    _CarrierFreqGERAN_bandIndicator = ENUM(name='bandIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandIndicatorGERAN')))
    CarrierFreqGERAN._cont = ASN1Dict([
        ('arfcn', _CarrierFreqGERAN_arfcn),
        ('bandIndicator', _CarrierFreqGERAN_bandIndicator),
        ])
    CarrierFreqGERAN._ext = None
    
    #-----< CarrierFreqsGERAN >-----#
    CarrierFreqsGERAN = SEQ(name='CarrierFreqsGERAN', mode=MODE_TYPE)
    _CarrierFreqsGERAN_startingARFCN = INT(name='startingARFCN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueGERAN')))
    _CarrierFreqsGERAN_bandIndicator = ENUM(name='bandIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandIndicatorGERAN')))
    _CarrierFreqsGERAN_followingARFCNs = CHOICE(name='followingARFCNs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CarrierFreqsGERAN_followingARFCNs_explicitListOfARFCNs = SEQ_OF(name='explicitListOfARFCNs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ExplicitListOfARFCNs')))
    __CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs = SEQ(name='equallySpacedARFCNs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs_arfcn_Spacing = INT(name='arfcn-Spacing', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs_arfcn_Spacing._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    ___CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs_numberOfFollowingARFCNs = INT(name='numberOfFollowingARFCNs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs_numberOfFollowingARFCNs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    __CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs._cont = ASN1Dict([
        ('arfcn-Spacing', ___CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs_arfcn_Spacing),
        ('numberOfFollowingARFCNs', ___CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs_numberOfFollowingARFCNs),
        ])
    __CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs._ext = None
    __CarrierFreqsGERAN_followingARFCNs_variableBitMapOfARFCNs = OCT_STR(name='variableBitMapOfARFCNs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CarrierFreqsGERAN_followingARFCNs_variableBitMapOfARFCNs._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _CarrierFreqsGERAN_followingARFCNs._cont = ASN1Dict([
        ('explicitListOfARFCNs', __CarrierFreqsGERAN_followingARFCNs_explicitListOfARFCNs),
        ('equallySpacedARFCNs', __CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs),
        ('variableBitMapOfARFCNs', __CarrierFreqsGERAN_followingARFCNs_variableBitMapOfARFCNs),
        ])
    _CarrierFreqsGERAN_followingARFCNs._ext = None
    CarrierFreqsGERAN._cont = ASN1Dict([
        ('startingARFCN', _CarrierFreqsGERAN_startingARFCN),
        ('bandIndicator', _CarrierFreqsGERAN_bandIndicator),
        ('followingARFCNs', _CarrierFreqsGERAN_followingARFCNs),
        ])
    CarrierFreqsGERAN._ext = None
    
    #-----< ExplicitListOfARFCNs >-----#
    ExplicitListOfARFCNs = SEQ_OF(name='ExplicitListOfARFCNs', mode=MODE_TYPE)
    _ExplicitListOfARFCNs__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueGERAN')))
    ExplicitListOfARFCNs._cont = _ExplicitListOfARFCNs__item_
    ExplicitListOfARFCNs._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< CDMA2000-Type >-----#
    CDMA2000_Type = ENUM(name='CDMA2000-Type', mode=MODE_TYPE)
    CDMA2000_Type._cont = ASN1Dict([('type1XRTT', 0), ('typeHRPD', 1)])
    CDMA2000_Type._ext = None
    
    #-----< CellIdentity >-----#
    CellIdentity = BIT_STR(name='CellIdentity', mode=MODE_TYPE)
    CellIdentity._const_sz = ASN1Set(rv=[28], rr=[], ev=None, er=[])
    
    #-----< CellIndexList >-----#
    CellIndexList = SEQ_OF(name='CellIndexList', mode=MODE_TYPE)
    _CellIndexList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellIndex')))
    CellIndexList._cont = _CellIndexList__item_
    CellIndexList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< CellIndex >-----#
    CellIndex = INT(name='CellIndex', mode=MODE_TYPE)
    CellIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< CellReselectionPriority >-----#
    CellReselectionPriority = INT(name='CellReselectionPriority', mode=MODE_TYPE)
    CellReselectionPriority._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< CSFB-RegistrationParam1XRTT >-----#
    CSFB_RegistrationParam1XRTT = SEQ(name='CSFB-RegistrationParam1XRTT', mode=MODE_TYPE)
    _CSFB_RegistrationParam1XRTT_sid = BIT_STR(name='sid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_sid._const_sz = ASN1Set(rv=[15], rr=[], ev=None, er=[])
    _CSFB_RegistrationParam1XRTT_nid = BIT_STR(name='nid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_nid._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _CSFB_RegistrationParam1XRTT_multipleSID = BOOL(name='multipleSID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_multipleNID = BOOL(name='multipleNID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_homeReg = BOOL(name='homeReg', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_foreignSIDReg = BOOL(name='foreignSIDReg', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_foreignNIDReg = BOOL(name='foreignNIDReg', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_parameterReg = BOOL(name='parameterReg', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_powerUpReg = BOOL(name='powerUpReg', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_registrationPeriod = BIT_STR(name='registrationPeriod', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_registrationPeriod._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    _CSFB_RegistrationParam1XRTT_registrationZone = BIT_STR(name='registrationZone', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_registrationZone._const_sz = ASN1Set(rv=[12], rr=[], ev=None, er=[])
    _CSFB_RegistrationParam1XRTT_totalZone = BIT_STR(name='totalZone', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_totalZone._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _CSFB_RegistrationParam1XRTT_zoneTimer = BIT_STR(name='zoneTimer', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSFB_RegistrationParam1XRTT_zoneTimer._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    CSFB_RegistrationParam1XRTT._cont = ASN1Dict([
        ('sid', _CSFB_RegistrationParam1XRTT_sid),
        ('nid', _CSFB_RegistrationParam1XRTT_nid),
        ('multipleSID', _CSFB_RegistrationParam1XRTT_multipleSID),
        ('multipleNID', _CSFB_RegistrationParam1XRTT_multipleNID),
        ('homeReg', _CSFB_RegistrationParam1XRTT_homeReg),
        ('foreignSIDReg', _CSFB_RegistrationParam1XRTT_foreignSIDReg),
        ('foreignNIDReg', _CSFB_RegistrationParam1XRTT_foreignNIDReg),
        ('parameterReg', _CSFB_RegistrationParam1XRTT_parameterReg),
        ('powerUpReg', _CSFB_RegistrationParam1XRTT_powerUpReg),
        ('registrationPeriod', _CSFB_RegistrationParam1XRTT_registrationPeriod),
        ('registrationZone', _CSFB_RegistrationParam1XRTT_registrationZone),
        ('totalZone', _CSFB_RegistrationParam1XRTT_totalZone),
        ('zoneTimer', _CSFB_RegistrationParam1XRTT_zoneTimer),
        ])
    CSFB_RegistrationParam1XRTT._ext = None
    
    #-----< CellGlobalIdEUTRA >-----#
    CellGlobalIdEUTRA = SEQ(name='CellGlobalIdEUTRA', mode=MODE_TYPE)
    _CellGlobalIdEUTRA_plmn_Identity = SEQ(name='plmn-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PLMN-Identity')))
    _CellGlobalIdEUTRA_cellIdentity = BIT_STR(name='cellIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellIdentity')))
    CellGlobalIdEUTRA._cont = ASN1Dict([
        ('plmn-Identity', _CellGlobalIdEUTRA_plmn_Identity),
        ('cellIdentity', _CellGlobalIdEUTRA_cellIdentity),
        ])
    CellGlobalIdEUTRA._ext = None
    
    #-----< CellGlobalIdUTRA >-----#
    CellGlobalIdUTRA = SEQ(name='CellGlobalIdUTRA', mode=MODE_TYPE)
    _CellGlobalIdUTRA_plmn_Identity = SEQ(name='plmn-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PLMN-Identity')))
    _CellGlobalIdUTRA_cellIdentity = BIT_STR(name='cellIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CellGlobalIdUTRA_cellIdentity._const_sz = ASN1Set(rv=[28], rr=[], ev=None, er=[])
    CellGlobalIdUTRA._cont = ASN1Dict([
        ('plmn-Identity', _CellGlobalIdUTRA_plmn_Identity),
        ('cellIdentity', _CellGlobalIdUTRA_cellIdentity),
        ])
    CellGlobalIdUTRA._ext = None
    
    #-----< CellGlobalIdGERAN >-----#
    CellGlobalIdGERAN = SEQ(name='CellGlobalIdGERAN', mode=MODE_TYPE)
    _CellGlobalIdGERAN_plmn_Identity = SEQ(name='plmn-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PLMN-Identity')))
    _CellGlobalIdGERAN_locationAreaCode = BIT_STR(name='locationAreaCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CellGlobalIdGERAN_locationAreaCode._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _CellGlobalIdGERAN_cellIdentity = BIT_STR(name='cellIdentity', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CellGlobalIdGERAN_cellIdentity._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    CellGlobalIdGERAN._cont = ASN1Dict([
        ('plmn-Identity', _CellGlobalIdGERAN_plmn_Identity),
        ('locationAreaCode', _CellGlobalIdGERAN_locationAreaCode),
        ('cellIdentity', _CellGlobalIdGERAN_cellIdentity),
        ])
    CellGlobalIdGERAN._ext = None
    
    #-----< CellGlobalIdCDMA2000 >-----#
    CellGlobalIdCDMA2000 = CHOICE(name='CellGlobalIdCDMA2000', mode=MODE_TYPE)
    _CellGlobalIdCDMA2000_cellGlobalId1XRTT = BIT_STR(name='cellGlobalId1XRTT', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CellGlobalIdCDMA2000_cellGlobalId1XRTT._const_sz = ASN1Set(rv=[47], rr=[], ev=None, er=[])
    _CellGlobalIdCDMA2000_cellGlobalIdHRPD = BIT_STR(name='cellGlobalIdHRPD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CellGlobalIdCDMA2000_cellGlobalIdHRPD._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    CellGlobalIdCDMA2000._cont = ASN1Dict([
        ('cellGlobalId1XRTT', _CellGlobalIdCDMA2000_cellGlobalId1XRTT),
        ('cellGlobalIdHRPD', _CellGlobalIdCDMA2000_cellGlobalIdHRPD),
        ])
    CellGlobalIdCDMA2000._ext = None
    
    #-----< MobilityControlInfo >-----#
    MobilityControlInfo = SEQ(name='MobilityControlInfo', mode=MODE_TYPE)
    _MobilityControlInfo_targetPhysCellId = INT(name='targetPhysCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellId')))
    _MobilityControlInfo_carrierFreq = SEQ(name='carrierFreq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqEUTRA')), opt=True)
    _MobilityControlInfo_carrierBandwidth = SEQ(name='carrierBandwidth', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierBandwidthEUTRA')), opt=True)
    _MobilityControlInfo_additionalSpectrumEmission = INT(name='additionalSpectrumEmission', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'AdditionalSpectrumEmission')), opt=True)
    _MobilityControlInfo_t304 = ENUM(name='t304', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MobilityControlInfo_t304._cont = ASN1Dict([('ms50', 0), ('ms100', 1), ('ms150', 2), ('ms200', 3), ('ms500', 4), ('ms1000', 5), ('ms2000', 6), ('spare1', 7)])
    _MobilityControlInfo_t304._ext = None
    _MobilityControlInfo_newUE_Identity = BIT_STR(name='newUE-Identity', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'C-RNTI')))
    _MobilityControlInfo_radioResourceConfigCommon = SEQ(name='radioResourceConfigCommon', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RadioResourceConfigCommon')))
    _MobilityControlInfo_rach_ConfigDedicated = SEQ(name='rach-ConfigDedicated', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RACH-ConfigDedicated')), opt=True)
    MobilityControlInfo._cont = ASN1Dict([
        ('targetPhysCellId', _MobilityControlInfo_targetPhysCellId),
        ('carrierFreq', _MobilityControlInfo_carrierFreq),
        ('carrierBandwidth', _MobilityControlInfo_carrierBandwidth),
        ('additionalSpectrumEmission', _MobilityControlInfo_additionalSpectrumEmission),
        ('t304', _MobilityControlInfo_t304),
        ('newUE-Identity', _MobilityControlInfo_newUE_Identity),
        ('radioResourceConfigCommon', _MobilityControlInfo_radioResourceConfigCommon),
        ('rach-ConfigDedicated', _MobilityControlInfo_rach_ConfigDedicated),
        ])
    MobilityControlInfo._ext = []
    
    #-----< CarrierBandwidthEUTRA >-----#
    CarrierBandwidthEUTRA = SEQ(name='CarrierBandwidthEUTRA', mode=MODE_TYPE)
    _CarrierBandwidthEUTRA_dl_Bandwidth = ENUM(name='dl-Bandwidth', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CarrierBandwidthEUTRA_dl_Bandwidth._cont = ASN1Dict([('n6', 0), ('n15', 1), ('n25', 2), ('n50', 3), ('n75', 4), ('n100', 5), ('spare10', 6), ('spare9', 7), ('spare8', 8), ('spare7', 9), ('spare6', 10), ('spare5', 11), ('spare4', 12), ('spare3', 13), ('spare2', 14), ('spare1', 15)])
    _CarrierBandwidthEUTRA_dl_Bandwidth._ext = None
    _CarrierBandwidthEUTRA_ul_Bandwidth = ENUM(name='ul-Bandwidth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CarrierBandwidthEUTRA_ul_Bandwidth._cont = ASN1Dict([('n6', 0), ('n15', 1), ('n25', 2), ('n50', 3), ('n75', 4), ('n100', 5), ('spare10', 6), ('spare9', 7), ('spare8', 8), ('spare7', 9), ('spare6', 10), ('spare5', 11), ('spare4', 12), ('spare3', 13), ('spare2', 14), ('spare1', 15)])
    _CarrierBandwidthEUTRA_ul_Bandwidth._ext = None
    CarrierBandwidthEUTRA._cont = ASN1Dict([
        ('dl-Bandwidth', _CarrierBandwidthEUTRA_dl_Bandwidth),
        ('ul-Bandwidth', _CarrierBandwidthEUTRA_ul_Bandwidth),
        ])
    CarrierBandwidthEUTRA._ext = None
    
    #-----< CarrierFreqEUTRA >-----#
    CarrierFreqEUTRA = SEQ(name='CarrierFreqEUTRA', mode=MODE_TYPE)
    _CarrierFreqEUTRA_dl_CarrierFreq = INT(name='dl-CarrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueEUTRA')))
    _CarrierFreqEUTRA_ul_CarrierFreq = INT(name='ul-CarrierFreq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueEUTRA')), opt=True)
    CarrierFreqEUTRA._cont = ASN1Dict([
        ('dl-CarrierFreq', _CarrierFreqEUTRA_dl_CarrierFreq),
        ('ul-CarrierFreq', _CarrierFreqEUTRA_ul_CarrierFreq),
        ])
    CarrierFreqEUTRA._ext = None
    
    #-----< MobilityParametersCDMA2000 >-----#
    MobilityParametersCDMA2000 = OCT_STR(name='MobilityParametersCDMA2000', mode=MODE_TYPE)
    
    #-----< MobilityStateParameters >-----#
    MobilityStateParameters = SEQ(name='MobilityStateParameters', mode=MODE_TYPE)
    _MobilityStateParameters_t_Evaluation = ENUM(name='t-Evaluation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MobilityStateParameters_t_Evaluation._cont = ASN1Dict([('s30', 0), ('s60', 1), ('s120', 2), ('s180', 3), ('s240', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    _MobilityStateParameters_t_Evaluation._ext = None
    _MobilityStateParameters_t_HystNormal = ENUM(name='t-HystNormal', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MobilityStateParameters_t_HystNormal._cont = ASN1Dict([('s30', 0), ('s60', 1), ('s120', 2), ('s180', 3), ('s240', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    _MobilityStateParameters_t_HystNormal._ext = None
    _MobilityStateParameters_n_CellChangeMedium = INT(name='n-CellChangeMedium', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MobilityStateParameters_n_CellChangeMedium._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _MobilityStateParameters_n_CellChangeHigh = INT(name='n-CellChangeHigh', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MobilityStateParameters_n_CellChangeHigh._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    MobilityStateParameters._cont = ASN1Dict([
        ('t-Evaluation', _MobilityStateParameters_t_Evaluation),
        ('t-HystNormal', _MobilityStateParameters_t_HystNormal),
        ('n-CellChangeMedium', _MobilityStateParameters_n_CellChangeMedium),
        ('n-CellChangeHigh', _MobilityStateParameters_n_CellChangeHigh),
        ])
    MobilityStateParameters._ext = None
    
    #-----< PhysCellId >-----#
    PhysCellId = INT(name='PhysCellId', mode=MODE_TYPE)
    PhysCellId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=503)], ev=None, er=[])
    
    #-----< PhysCellIdRange >-----#
    PhysCellIdRange = SEQ(name='PhysCellIdRange', mode=MODE_TYPE)
    _PhysCellIdRange_start = INT(name='start', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellId')))
    _PhysCellIdRange_range = ENUM(name='range', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PhysCellIdRange_range._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n12', 2), ('n16', 3), ('n24', 4), ('n32', 5), ('n48', 6), ('n64', 7), ('n84', 8), ('n96', 9), ('n128', 10), ('n168', 11), ('n252', 12), ('n504', 13), ('spare2', 14), ('spare1', 15)])
    _PhysCellIdRange_range._ext = None
    PhysCellIdRange._cont = ASN1Dict([
        ('start', _PhysCellIdRange_start),
        ('range', _PhysCellIdRange_range),
        ])
    PhysCellIdRange._ext = None
    
    #-----< PhysCellIdCDMA2000 >-----#
    PhysCellIdCDMA2000 = INT(name='PhysCellIdCDMA2000', mode=MODE_TYPE)
    PhysCellIdCDMA2000._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    
    #-----< PhysCellIdGERAN >-----#
    PhysCellIdGERAN = SEQ(name='PhysCellIdGERAN', mode=MODE_TYPE)
    _PhysCellIdGERAN_networkColourCode = BIT_STR(name='networkColourCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PhysCellIdGERAN_networkColourCode._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _PhysCellIdGERAN_baseStationColourCode = BIT_STR(name='baseStationColourCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PhysCellIdGERAN_baseStationColourCode._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    PhysCellIdGERAN._cont = ASN1Dict([
        ('networkColourCode', _PhysCellIdGERAN_networkColourCode),
        ('baseStationColourCode', _PhysCellIdGERAN_baseStationColourCode),
        ])
    PhysCellIdGERAN._ext = None
    
    #-----< PhysCellIdUTRA-FDD >-----#
    PhysCellIdUTRA_FDD = INT(name='PhysCellIdUTRA-FDD', mode=MODE_TYPE)
    PhysCellIdUTRA_FDD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    
    #-----< PhysCellIdUTRA-TDD >-----#
    PhysCellIdUTRA_TDD = INT(name='PhysCellIdUTRA-TDD', mode=MODE_TYPE)
    PhysCellIdUTRA_TDD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< PLMN-Identity >-----#
    PLMN_Identity = SEQ(name='PLMN-Identity', mode=MODE_TYPE)
    _PLMN_Identity_mcc = SEQ_OF(name='mcc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MCC')), opt=True)
    _PLMN_Identity_mnc = SEQ_OF(name='mnc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MNC')))
    PLMN_Identity._cont = ASN1Dict([
        ('mcc', _PLMN_Identity_mcc),
        ('mnc', _PLMN_Identity_mnc),
        ])
    PLMN_Identity._ext = None
    
    #-----< MCC >-----#
    MCC = SEQ_OF(name='MCC', mode=MODE_TYPE)
    _MCC__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MCC-MNC-Digit')))
    MCC._cont = _MCC__item_
    MCC._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< MNC >-----#
    MNC = SEQ_OF(name='MNC', mode=MODE_TYPE)
    _MNC__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MCC-MNC-Digit')))
    MNC._cont = _MNC__item_
    MNC._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=3)], ev=None, er=[])
    
    #-----< MCC-MNC-Digit >-----#
    MCC_MNC_Digit = INT(name='MCC-MNC-Digit', mode=MODE_TYPE)
    MCC_MNC_Digit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    
    #-----< PreRegistrationInfoHRPD >-----#
    PreRegistrationInfoHRPD = SEQ(name='PreRegistrationInfoHRPD', mode=MODE_TYPE)
    _PreRegistrationInfoHRPD_preRegistrationAllowed = BOOL(name='preRegistrationAllowed', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PreRegistrationInfoHRPD_preRegistrationZoneId = INT(name='preRegistrationZoneId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PreRegistrationZoneIdHRPD')), opt=True)
    _PreRegistrationInfoHRPD_secondaryPreRegistrationZoneIdList = SEQ_OF(name='secondaryPreRegistrationZoneIdList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecondaryPreRegistrationZoneIdListHRPD')), opt=True)
    PreRegistrationInfoHRPD._cont = ASN1Dict([
        ('preRegistrationAllowed', _PreRegistrationInfoHRPD_preRegistrationAllowed),
        ('preRegistrationZoneId', _PreRegistrationInfoHRPD_preRegistrationZoneId),
        ('secondaryPreRegistrationZoneIdList', _PreRegistrationInfoHRPD_secondaryPreRegistrationZoneIdList),
        ])
    PreRegistrationInfoHRPD._ext = None
    
    #-----< SecondaryPreRegistrationZoneIdListHRPD >-----#
    SecondaryPreRegistrationZoneIdListHRPD = SEQ_OF(name='SecondaryPreRegistrationZoneIdListHRPD', mode=MODE_TYPE)
    _SecondaryPreRegistrationZoneIdListHRPD__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PreRegistrationZoneIdHRPD')))
    SecondaryPreRegistrationZoneIdListHRPD._cont = _SecondaryPreRegistrationZoneIdListHRPD__item_
    SecondaryPreRegistrationZoneIdListHRPD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< PreRegistrationZoneIdHRPD >-----#
    PreRegistrationZoneIdHRPD = INT(name='PreRegistrationZoneIdHRPD', mode=MODE_TYPE)
    PreRegistrationZoneIdHRPD._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< Q-RxLevMin >-----#
    Q_RxLevMin = INT(name='Q-RxLevMin', mode=MODE_TYPE)
    Q_RxLevMin._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-70, ub=-22)], ev=None, er=[])
    
    #-----< Q-OffsetRange >-----#
    Q_OffsetRange = ENUM(name='Q-OffsetRange', mode=MODE_TYPE)
    Q_OffsetRange._cont = ASN1Dict([('dB-24', 0), ('dB-22', 1), ('dB-20', 2), ('dB-18', 3), ('dB-16', 4), ('dB-14', 5), ('dB-12', 6), ('dB-10', 7), ('dB-8', 8), ('dB-6', 9), ('dB-5', 10), ('dB-4', 11), ('dB-3', 12), ('dB-2', 13), ('dB-1', 14), ('dB0', 15), ('dB1', 16), ('dB2', 17), ('dB3', 18), ('dB4', 19), ('dB5', 20), ('dB6', 21), ('dB8', 22), ('dB10', 23), ('dB12', 24), ('dB14', 25), ('dB16', 26), ('dB18', 27), ('dB20', 28), ('dB22', 29), ('dB24', 30)])
    Q_OffsetRange._ext = None
    
    #-----< Q-OffsetRangeInterRAT >-----#
    Q_OffsetRangeInterRAT = INT(name='Q-OffsetRangeInterRAT', mode=MODE_TYPE)
    Q_OffsetRangeInterRAT._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-15, ub=15)], ev=None, er=[])
    
    #-----< ReselectionThreshold >-----#
    ReselectionThreshold = INT(name='ReselectionThreshold', mode=MODE_TYPE)
    ReselectionThreshold._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< SpeedStateScaleFactors >-----#
    SpeedStateScaleFactors = SEQ(name='SpeedStateScaleFactors', mode=MODE_TYPE)
    _SpeedStateScaleFactors_sf_Medium = ENUM(name='sf-Medium', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SpeedStateScaleFactors_sf_Medium._cont = ASN1Dict([('oDot25', 0), ('oDot5', 1), ('oDot75', 2), ('lDot0', 3)])
    _SpeedStateScaleFactors_sf_Medium._ext = None
    _SpeedStateScaleFactors_sf_High = ENUM(name='sf-High', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SpeedStateScaleFactors_sf_High._cont = ASN1Dict([('oDot25', 0), ('oDot5', 1), ('oDot75', 2), ('lDot0', 3)])
    _SpeedStateScaleFactors_sf_High._ext = None
    SpeedStateScaleFactors._cont = ASN1Dict([
        ('sf-Medium', _SpeedStateScaleFactors_sf_Medium),
        ('sf-High', _SpeedStateScaleFactors_sf_High),
        ])
    SpeedStateScaleFactors._ext = None
    
    #-----< SystemTimeInfoCDMA2000 >-----#
    SystemTimeInfoCDMA2000 = SEQ(name='SystemTimeInfoCDMA2000', mode=MODE_TYPE)
    _SystemTimeInfoCDMA2000_cdma_EUTRA_Synchronisation = BOOL(name='cdma-EUTRA-Synchronisation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SystemTimeInfoCDMA2000_cdma_SystemTime = CHOICE(name='cdma-SystemTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SystemTimeInfoCDMA2000_cdma_SystemTime_synchronousSystemTime = BIT_STR(name='synchronousSystemTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemTimeInfoCDMA2000_cdma_SystemTime_synchronousSystemTime._const_sz = ASN1Set(rv=[39], rr=[], ev=None, er=[])
    __SystemTimeInfoCDMA2000_cdma_SystemTime_asynchronousSystemTime = BIT_STR(name='asynchronousSystemTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SystemTimeInfoCDMA2000_cdma_SystemTime_asynchronousSystemTime._const_sz = ASN1Set(rv=[49], rr=[], ev=None, er=[])
    _SystemTimeInfoCDMA2000_cdma_SystemTime._cont = ASN1Dict([
        ('synchronousSystemTime', __SystemTimeInfoCDMA2000_cdma_SystemTime_synchronousSystemTime),
        ('asynchronousSystemTime', __SystemTimeInfoCDMA2000_cdma_SystemTime_asynchronousSystemTime),
        ])
    _SystemTimeInfoCDMA2000_cdma_SystemTime._ext = None
    SystemTimeInfoCDMA2000._cont = ASN1Dict([
        ('cdma-EUTRA-Synchronisation', _SystemTimeInfoCDMA2000_cdma_EUTRA_Synchronisation),
        ('cdma-SystemTime', _SystemTimeInfoCDMA2000_cdma_SystemTime),
        ])
    SystemTimeInfoCDMA2000._ext = None
    
    #-----< TrackingAreaCode >-----#
    TrackingAreaCode = BIT_STR(name='TrackingAreaCode', mode=MODE_TYPE)
    TrackingAreaCode._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< T-Reselection >-----#
    T_Reselection = INT(name='T-Reselection', mode=MODE_TYPE)
    T_Reselection._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< AllowedMeasBandwidth >-----#
    AllowedMeasBandwidth = ENUM(name='AllowedMeasBandwidth', mode=MODE_TYPE)
    AllowedMeasBandwidth._cont = ASN1Dict([('mbw6', 0), ('mbw15', 1), ('mbw25', 2), ('mbw50', 3), ('mbw75', 4), ('mbw100', 5)])
    AllowedMeasBandwidth._ext = None
    
    #-----< Hysteresis >-----#
    Hysteresis = INT(name='Hysteresis', mode=MODE_TYPE)
    Hysteresis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=30)], ev=None, er=[])
    
    #-----< MeasConfig >-----#
    MeasConfig = SEQ(name='MeasConfig', mode=MODE_TYPE)
    _MeasConfig_measObjectToRemoveList = SEQ_OF(name='measObjectToRemoveList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasObjectToRemoveList')), opt=True)
    _MeasConfig_measObjectToAddModList = SEQ_OF(name='measObjectToAddModList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasObjectToAddModList')), opt=True)
    _MeasConfig_reportConfigToRemoveList = SEQ_OF(name='reportConfigToRemoveList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReportConfigToRemoveList')), opt=True)
    _MeasConfig_reportConfigToAddModList = SEQ_OF(name='reportConfigToAddModList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReportConfigToAddModList')), opt=True)
    _MeasConfig_measIdToRemoveList = SEQ_OF(name='measIdToRemoveList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasIdToRemoveList')), opt=True)
    _MeasConfig_measIdToAddModList = SEQ_OF(name='measIdToAddModList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasIdToAddModList')), opt=True)
    _MeasConfig_quantityConfig = SEQ(name='quantityConfig', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'QuantityConfig')), opt=True)
    _MeasConfig_measGapConfig = CHOICE(name='measGapConfig', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasGapConfig')), opt=True)
    _MeasConfig_s_Measure = INT(name='s-Measure', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RSRP-Range')), opt=True)
    _MeasConfig_preRegistrationInfoHRPD = SEQ(name='preRegistrationInfoHRPD', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PreRegistrationInfoHRPD')), opt=True)
    _MeasConfig_speedStatePars = CHOICE(name='speedStatePars', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __MeasConfig_speedStatePars_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasConfig_speedStatePars_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasConfig_speedStatePars_setup_mobilityStateParameters = SEQ(name='mobilityStateParameters', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MobilityStateParameters')))
    ___MeasConfig_speedStatePars_setup_timeToTrigger_SF = SEQ(name='timeToTrigger-SF', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SpeedStateScaleFactors')))
    __MeasConfig_speedStatePars_setup._cont = ASN1Dict([
        ('mobilityStateParameters', ___MeasConfig_speedStatePars_setup_mobilityStateParameters),
        ('timeToTrigger-SF', ___MeasConfig_speedStatePars_setup_timeToTrigger_SF),
        ])
    __MeasConfig_speedStatePars_setup._ext = None
    _MeasConfig_speedStatePars._cont = ASN1Dict([
        ('release', __MeasConfig_speedStatePars_release),
        ('setup', __MeasConfig_speedStatePars_setup),
        ])
    _MeasConfig_speedStatePars._ext = None
    MeasConfig._cont = ASN1Dict([
        ('measObjectToRemoveList', _MeasConfig_measObjectToRemoveList),
        ('measObjectToAddModList', _MeasConfig_measObjectToAddModList),
        ('reportConfigToRemoveList', _MeasConfig_reportConfigToRemoveList),
        ('reportConfigToAddModList', _MeasConfig_reportConfigToAddModList),
        ('measIdToRemoveList', _MeasConfig_measIdToRemoveList),
        ('measIdToAddModList', _MeasConfig_measIdToAddModList),
        ('quantityConfig', _MeasConfig_quantityConfig),
        ('measGapConfig', _MeasConfig_measGapConfig),
        ('s-Measure', _MeasConfig_s_Measure),
        ('preRegistrationInfoHRPD', _MeasConfig_preRegistrationInfoHRPD),
        ('speedStatePars', _MeasConfig_speedStatePars),
        ])
    MeasConfig._ext = []
    
    #-----< MeasIdToRemoveList >-----#
    MeasIdToRemoveList = SEQ_OF(name='MeasIdToRemoveList', mode=MODE_TYPE)
    _MeasIdToRemoveList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasId')))
    MeasIdToRemoveList._cont = _MeasIdToRemoveList__item_
    MeasIdToRemoveList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< MeasObjectToRemoveList >-----#
    MeasObjectToRemoveList = SEQ_OF(name='MeasObjectToRemoveList', mode=MODE_TYPE)
    _MeasObjectToRemoveList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasObjectId')))
    MeasObjectToRemoveList._cont = _MeasObjectToRemoveList__item_
    MeasObjectToRemoveList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< ReportConfigToRemoveList >-----#
    ReportConfigToRemoveList = SEQ_OF(name='ReportConfigToRemoveList', mode=MODE_TYPE)
    _ReportConfigToRemoveList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReportConfigId')))
    ReportConfigToRemoveList._cont = _ReportConfigToRemoveList__item_
    ReportConfigToRemoveList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< MeasGapConfig >-----#
    MeasGapConfig = CHOICE(name='MeasGapConfig', mode=MODE_TYPE)
    _MeasGapConfig_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MeasGapConfig_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasGapConfig_setup_gapOffset = CHOICE(name='gapOffset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___MeasGapConfig_setup_gapOffset_gp0 = INT(name='gp0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasGapConfig_setup_gapOffset_gp0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    ___MeasGapConfig_setup_gapOffset_gp1 = INT(name='gp1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasGapConfig_setup_gapOffset_gp1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=79)], ev=None, er=[])
    __MeasGapConfig_setup_gapOffset._cont = ASN1Dict([
        ('gp0', ___MeasGapConfig_setup_gapOffset_gp0),
        ('gp1', ___MeasGapConfig_setup_gapOffset_gp1),
        ])
    __MeasGapConfig_setup_gapOffset._ext = []
    _MeasGapConfig_setup._cont = ASN1Dict([
        ('gapOffset', __MeasGapConfig_setup_gapOffset),
        ])
    _MeasGapConfig_setup._ext = None
    MeasGapConfig._cont = ASN1Dict([
        ('release', _MeasGapConfig_release),
        ('setup', _MeasGapConfig_setup),
        ])
    MeasGapConfig._ext = None
    
    #-----< MeasId >-----#
    MeasId = INT(name='MeasId', mode=MODE_TYPE)
    MeasId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< MeasIdToAddModList >-----#
    MeasIdToAddModList = SEQ_OF(name='MeasIdToAddModList', mode=MODE_TYPE)
    _MeasIdToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasIdToAddMod')))
    MeasIdToAddModList._cont = _MeasIdToAddModList__item_
    MeasIdToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< MeasIdToAddMod >-----#
    MeasIdToAddMod = SEQ(name='MeasIdToAddMod', mode=MODE_TYPE)
    _MeasIdToAddMod_measId = INT(name='measId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasId')))
    _MeasIdToAddMod_measObjectId = INT(name='measObjectId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasObjectId')))
    _MeasIdToAddMod_reportConfigId = INT(name='reportConfigId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReportConfigId')))
    MeasIdToAddMod._cont = ASN1Dict([
        ('measId', _MeasIdToAddMod_measId),
        ('measObjectId', _MeasIdToAddMod_measObjectId),
        ('reportConfigId', _MeasIdToAddMod_reportConfigId),
        ])
    MeasIdToAddMod._ext = None
    
    #-----< MeasObjectCDMA2000 >-----#
    MeasObjectCDMA2000 = SEQ(name='MeasObjectCDMA2000', mode=MODE_TYPE)
    _MeasObjectCDMA2000_cdma2000_Type = ENUM(name='cdma2000-Type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CDMA2000-Type')))
    _MeasObjectCDMA2000_carrierFreq = SEQ(name='carrierFreq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqCDMA2000')))
    _MeasObjectCDMA2000_searchWindowSize = INT(name='searchWindowSize', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasObjectCDMA2000_searchWindowSize._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _MeasObjectCDMA2000_offsetFreq = INT(name='offsetFreq', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Q-OffsetRangeInterRAT')), default=0)
    _MeasObjectCDMA2000_cellsToRemoveList = SEQ_OF(name='cellsToRemoveList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellIndexList')), opt=True)
    _MeasObjectCDMA2000_cellsToAddModList = SEQ_OF(name='cellsToAddModList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellsToAddModListCDMA2000')), opt=True)
    _MeasObjectCDMA2000_cellForWhichToReportCGI = INT(name='cellForWhichToReportCGI', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdCDMA2000')), opt=True)
    MeasObjectCDMA2000._cont = ASN1Dict([
        ('cdma2000-Type', _MeasObjectCDMA2000_cdma2000_Type),
        ('carrierFreq', _MeasObjectCDMA2000_carrierFreq),
        ('searchWindowSize', _MeasObjectCDMA2000_searchWindowSize),
        ('offsetFreq', _MeasObjectCDMA2000_offsetFreq),
        ('cellsToRemoveList', _MeasObjectCDMA2000_cellsToRemoveList),
        ('cellsToAddModList', _MeasObjectCDMA2000_cellsToAddModList),
        ('cellForWhichToReportCGI', _MeasObjectCDMA2000_cellForWhichToReportCGI),
        ])
    MeasObjectCDMA2000._ext = []
    
    #-----< CellsToAddModListCDMA2000 >-----#
    CellsToAddModListCDMA2000 = SEQ_OF(name='CellsToAddModListCDMA2000', mode=MODE_TYPE)
    _CellsToAddModListCDMA2000__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellsToAddModCDMA2000')))
    CellsToAddModListCDMA2000._cont = _CellsToAddModListCDMA2000__item_
    CellsToAddModListCDMA2000._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< CellsToAddModCDMA2000 >-----#
    CellsToAddModCDMA2000 = SEQ(name='CellsToAddModCDMA2000', mode=MODE_TYPE)
    _CellsToAddModCDMA2000_cellIndex = INT(name='cellIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CellsToAddModCDMA2000_cellIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _CellsToAddModCDMA2000_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdCDMA2000')))
    CellsToAddModCDMA2000._cont = ASN1Dict([
        ('cellIndex', _CellsToAddModCDMA2000_cellIndex),
        ('physCellId', _CellsToAddModCDMA2000_physCellId),
        ])
    CellsToAddModCDMA2000._ext = None
    
    #-----< MeasObjectEUTRA >-----#
    MeasObjectEUTRA = SEQ(name='MeasObjectEUTRA', mode=MODE_TYPE)
    _MeasObjectEUTRA_carrierFreq = INT(name='carrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueEUTRA')))
    _MeasObjectEUTRA_allowedMeasBandwidth = ENUM(name='allowedMeasBandwidth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'AllowedMeasBandwidth')))
    _MeasObjectEUTRA_presenceAntennaPort1 = BOOL(name='presenceAntennaPort1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PresenceAntennaPort1')))
    _MeasObjectEUTRA_neighCellConfig = BIT_STR(name='neighCellConfig', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'NeighCellConfig')))
    _MeasObjectEUTRA_offsetFreq = ENUM(name='offsetFreq', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Q-OffsetRange')), default='dB0')
    _MeasObjectEUTRA_cellsToRemoveList = SEQ_OF(name='cellsToRemoveList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellIndexList')), opt=True)
    _MeasObjectEUTRA_cellsToAddModList = SEQ_OF(name='cellsToAddModList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellsToAddModList')), opt=True)
    _MeasObjectEUTRA_blackCellsToRemoveList = SEQ_OF(name='blackCellsToRemoveList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellIndexList')), opt=True)
    _MeasObjectEUTRA_blackCellsToAddModList = SEQ_OF(name='blackCellsToAddModList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BlackCellsToAddModList')), opt=True)
    _MeasObjectEUTRA_cellForWhichToReportCGI = INT(name='cellForWhichToReportCGI', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellId')), opt=True)
    MeasObjectEUTRA._cont = ASN1Dict([
        ('carrierFreq', _MeasObjectEUTRA_carrierFreq),
        ('allowedMeasBandwidth', _MeasObjectEUTRA_allowedMeasBandwidth),
        ('presenceAntennaPort1', _MeasObjectEUTRA_presenceAntennaPort1),
        ('neighCellConfig', _MeasObjectEUTRA_neighCellConfig),
        ('offsetFreq', _MeasObjectEUTRA_offsetFreq),
        ('cellsToRemoveList', _MeasObjectEUTRA_cellsToRemoveList),
        ('cellsToAddModList', _MeasObjectEUTRA_cellsToAddModList),
        ('blackCellsToRemoveList', _MeasObjectEUTRA_blackCellsToRemoveList),
        ('blackCellsToAddModList', _MeasObjectEUTRA_blackCellsToAddModList),
        ('cellForWhichToReportCGI', _MeasObjectEUTRA_cellForWhichToReportCGI),
        ])
    MeasObjectEUTRA._ext = []
    
    #-----< CellsToAddModList >-----#
    CellsToAddModList = SEQ_OF(name='CellsToAddModList', mode=MODE_TYPE)
    _CellsToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellsToAddMod')))
    CellsToAddModList._cont = _CellsToAddModList__item_
    CellsToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< CellsToAddMod >-----#
    CellsToAddMod = SEQ(name='CellsToAddMod', mode=MODE_TYPE)
    _CellsToAddMod_cellIndex = INT(name='cellIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CellsToAddMod_cellIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _CellsToAddMod_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellId')))
    _CellsToAddMod_cellIndividualOffset = ENUM(name='cellIndividualOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Q-OffsetRange')))
    CellsToAddMod._cont = ASN1Dict([
        ('cellIndex', _CellsToAddMod_cellIndex),
        ('physCellId', _CellsToAddMod_physCellId),
        ('cellIndividualOffset', _CellsToAddMod_cellIndividualOffset),
        ])
    CellsToAddMod._ext = None
    
    #-----< BlackCellsToAddModList >-----#
    BlackCellsToAddModList = SEQ_OF(name='BlackCellsToAddModList', mode=MODE_TYPE)
    _BlackCellsToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BlackCellsToAddMod')))
    BlackCellsToAddModList._cont = _BlackCellsToAddModList__item_
    BlackCellsToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< BlackCellsToAddMod >-----#
    BlackCellsToAddMod = SEQ(name='BlackCellsToAddMod', mode=MODE_TYPE)
    _BlackCellsToAddMod_cellIndex = INT(name='cellIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BlackCellsToAddMod_cellIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _BlackCellsToAddMod_physCellIdRange = SEQ(name='physCellIdRange', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdRange')))
    BlackCellsToAddMod._cont = ASN1Dict([
        ('cellIndex', _BlackCellsToAddMod_cellIndex),
        ('physCellIdRange', _BlackCellsToAddMod_physCellIdRange),
        ])
    BlackCellsToAddMod._ext = None
    
    #-----< MeasObjectGERAN >-----#
    MeasObjectGERAN = SEQ(name='MeasObjectGERAN', mode=MODE_TYPE)
    _MeasObjectGERAN_carrierFreqs = SEQ(name='carrierFreqs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqsGERAN')))
    _MeasObjectGERAN_offsetFreq = INT(name='offsetFreq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Q-OffsetRangeInterRAT')), default=0)
    _MeasObjectGERAN_ncc_Permitted = BIT_STR(name='ncc-Permitted', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=(255, 8))
    _MeasObjectGERAN_ncc_Permitted._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _MeasObjectGERAN_cellForWhichToReportCGI = SEQ(name='cellForWhichToReportCGI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdGERAN')), opt=True)
    MeasObjectGERAN._cont = ASN1Dict([
        ('carrierFreqs', _MeasObjectGERAN_carrierFreqs),
        ('offsetFreq', _MeasObjectGERAN_offsetFreq),
        ('ncc-Permitted', _MeasObjectGERAN_ncc_Permitted),
        ('cellForWhichToReportCGI', _MeasObjectGERAN_cellForWhichToReportCGI),
        ])
    MeasObjectGERAN._ext = []
    
    #-----< MeasObjectId >-----#
    MeasObjectId = INT(name='MeasObjectId', mode=MODE_TYPE)
    MeasObjectId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< MeasObjectToAddModList >-----#
    MeasObjectToAddModList = SEQ_OF(name='MeasObjectToAddModList', mode=MODE_TYPE)
    _MeasObjectToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasObjectToAddMod')))
    MeasObjectToAddModList._cont = _MeasObjectToAddModList__item_
    MeasObjectToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< MeasObjectToAddMod >-----#
    MeasObjectToAddMod = SEQ(name='MeasObjectToAddMod', mode=MODE_TYPE)
    _MeasObjectToAddMod_measObjectId = INT(name='measObjectId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasObjectId')))
    _MeasObjectToAddMod_measObject = CHOICE(name='measObject', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __MeasObjectToAddMod_measObject_measObjectEUTRA = SEQ(name='measObjectEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasObjectEUTRA')))
    __MeasObjectToAddMod_measObject_measObjectUTRA = SEQ(name='measObjectUTRA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasObjectUTRA')))
    __MeasObjectToAddMod_measObject_measObjectGERAN = SEQ(name='measObjectGERAN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasObjectGERAN')))
    __MeasObjectToAddMod_measObject_measObjectCDMA2000 = SEQ(name='measObjectCDMA2000', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasObjectCDMA2000')))
    _MeasObjectToAddMod_measObject._cont = ASN1Dict([
        ('measObjectEUTRA', __MeasObjectToAddMod_measObject_measObjectEUTRA),
        ('measObjectUTRA', __MeasObjectToAddMod_measObject_measObjectUTRA),
        ('measObjectGERAN', __MeasObjectToAddMod_measObject_measObjectGERAN),
        ('measObjectCDMA2000', __MeasObjectToAddMod_measObject_measObjectCDMA2000),
        ])
    _MeasObjectToAddMod_measObject._ext = []
    MeasObjectToAddMod._cont = ASN1Dict([
        ('measObjectId', _MeasObjectToAddMod_measObjectId),
        ('measObject', _MeasObjectToAddMod_measObject),
        ])
    MeasObjectToAddMod._ext = None
    
    #-----< MeasObjectUTRA >-----#
    MeasObjectUTRA = SEQ(name='MeasObjectUTRA', mode=MODE_TYPE)
    _MeasObjectUTRA_carrierFreq = INT(name='carrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueUTRA')))
    _MeasObjectUTRA_offsetFreq = INT(name='offsetFreq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Q-OffsetRangeInterRAT')), default=0)
    _MeasObjectUTRA_cellsToRemoveList = SEQ_OF(name='cellsToRemoveList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellIndexList')), opt=True)
    _MeasObjectUTRA_cellsToAddModList = CHOICE(name='cellsToAddModList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __MeasObjectUTRA_cellsToAddModList_cellsToAddModListUTRA_FDD = SEQ_OF(name='cellsToAddModListUTRA-FDD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellsToAddModListUTRA-FDD')))
    __MeasObjectUTRA_cellsToAddModList_cellsToAddModListUTRA_TDD = SEQ_OF(name='cellsToAddModListUTRA-TDD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellsToAddModListUTRA-TDD')))
    _MeasObjectUTRA_cellsToAddModList._cont = ASN1Dict([
        ('cellsToAddModListUTRA-FDD', __MeasObjectUTRA_cellsToAddModList_cellsToAddModListUTRA_FDD),
        ('cellsToAddModListUTRA-TDD', __MeasObjectUTRA_cellsToAddModList_cellsToAddModListUTRA_TDD),
        ])
    _MeasObjectUTRA_cellsToAddModList._ext = None
    _MeasObjectUTRA_cellForWhichToReportCGI = CHOICE(name='cellForWhichToReportCGI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __MeasObjectUTRA_cellForWhichToReportCGI_utra_FDD = INT(name='utra-FDD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdUTRA-FDD')))
    __MeasObjectUTRA_cellForWhichToReportCGI_utra_TDD = INT(name='utra-TDD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdUTRA-TDD')))
    _MeasObjectUTRA_cellForWhichToReportCGI._cont = ASN1Dict([
        ('utra-FDD', __MeasObjectUTRA_cellForWhichToReportCGI_utra_FDD),
        ('utra-TDD', __MeasObjectUTRA_cellForWhichToReportCGI_utra_TDD),
        ])
    _MeasObjectUTRA_cellForWhichToReportCGI._ext = None
    MeasObjectUTRA._cont = ASN1Dict([
        ('carrierFreq', _MeasObjectUTRA_carrierFreq),
        ('offsetFreq', _MeasObjectUTRA_offsetFreq),
        ('cellsToRemoveList', _MeasObjectUTRA_cellsToRemoveList),
        ('cellsToAddModList', _MeasObjectUTRA_cellsToAddModList),
        ('cellForWhichToReportCGI', _MeasObjectUTRA_cellForWhichToReportCGI),
        ])
    MeasObjectUTRA._ext = []
    
    #-----< CellsToAddModListUTRA-FDD >-----#
    CellsToAddModListUTRA_FDD = SEQ_OF(name='CellsToAddModListUTRA-FDD', mode=MODE_TYPE)
    _CellsToAddModListUTRA_FDD__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellsToAddModUTRA-FDD')))
    CellsToAddModListUTRA_FDD._cont = _CellsToAddModListUTRA_FDD__item_
    CellsToAddModListUTRA_FDD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< CellsToAddModUTRA-FDD >-----#
    CellsToAddModUTRA_FDD = SEQ(name='CellsToAddModUTRA-FDD', mode=MODE_TYPE)
    _CellsToAddModUTRA_FDD_cellIndex = INT(name='cellIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CellsToAddModUTRA_FDD_cellIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _CellsToAddModUTRA_FDD_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdUTRA-FDD')))
    CellsToAddModUTRA_FDD._cont = ASN1Dict([
        ('cellIndex', _CellsToAddModUTRA_FDD_cellIndex),
        ('physCellId', _CellsToAddModUTRA_FDD_physCellId),
        ])
    CellsToAddModUTRA_FDD._ext = None
    
    #-----< CellsToAddModListUTRA-TDD >-----#
    CellsToAddModListUTRA_TDD = SEQ_OF(name='CellsToAddModListUTRA-TDD', mode=MODE_TYPE)
    _CellsToAddModListUTRA_TDD__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellsToAddModUTRA-TDD')))
    CellsToAddModListUTRA_TDD._cont = _CellsToAddModListUTRA_TDD__item_
    CellsToAddModListUTRA_TDD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< CellsToAddModUTRA-TDD >-----#
    CellsToAddModUTRA_TDD = SEQ(name='CellsToAddModUTRA-TDD', mode=MODE_TYPE)
    _CellsToAddModUTRA_TDD_cellIndex = INT(name='cellIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CellsToAddModUTRA_TDD_cellIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _CellsToAddModUTRA_TDD_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdUTRA-TDD')))
    CellsToAddModUTRA_TDD._cont = ASN1Dict([
        ('cellIndex', _CellsToAddModUTRA_TDD_cellIndex),
        ('physCellId', _CellsToAddModUTRA_TDD_physCellId),
        ])
    CellsToAddModUTRA_TDD._ext = None
    
    #-----< MeasResults >-----#
    MeasResults = SEQ(name='MeasResults', mode=MODE_TYPE)
    _MeasResults_measId = INT(name='measId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasId')))
    _MeasResults_measResultServCell = SEQ(name='measResultServCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasResults_measResultServCell_rsrpResult = INT(name='rsrpResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RSRP-Range')))
    __MeasResults_measResultServCell_rsrqResult = INT(name='rsrqResult', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RSRQ-Range')))
    _MeasResults_measResultServCell._cont = ASN1Dict([
        ('rsrpResult', __MeasResults_measResultServCell_rsrpResult),
        ('rsrqResult', __MeasResults_measResultServCell_rsrqResult),
        ])
    _MeasResults_measResultServCell._ext = None
    _MeasResults_measResultNeighCells = CHOICE(name='measResultNeighCells', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __MeasResults_measResultNeighCells_measResultListEUTRA = SEQ_OF(name='measResultListEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasResultListEUTRA')))
    __MeasResults_measResultNeighCells_measResultListUTRA = SEQ_OF(name='measResultListUTRA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasResultListUTRA')))
    __MeasResults_measResultNeighCells_measResultListGERAN = SEQ_OF(name='measResultListGERAN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasResultListGERAN')))
    __MeasResults_measResultNeighCells_measResultsCDMA2000 = SEQ(name='measResultsCDMA2000', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasResultsCDMA2000')))
    _MeasResults_measResultNeighCells._cont = ASN1Dict([
        ('measResultListEUTRA', __MeasResults_measResultNeighCells_measResultListEUTRA),
        ('measResultListUTRA', __MeasResults_measResultNeighCells_measResultListUTRA),
        ('measResultListGERAN', __MeasResults_measResultNeighCells_measResultListGERAN),
        ('measResultsCDMA2000', __MeasResults_measResultNeighCells_measResultsCDMA2000),
        ])
    _MeasResults_measResultNeighCells._ext = []
    MeasResults._cont = ASN1Dict([
        ('measId', _MeasResults_measId),
        ('measResultServCell', _MeasResults_measResultServCell),
        ('measResultNeighCells', _MeasResults_measResultNeighCells),
        ])
    MeasResults._ext = []
    
    #-----< MeasResultListEUTRA >-----#
    MeasResultListEUTRA = SEQ_OF(name='MeasResultListEUTRA', mode=MODE_TYPE)
    _MeasResultListEUTRA__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasResultEUTRA')))
    MeasResultListEUTRA._cont = _MeasResultListEUTRA__item_
    MeasResultListEUTRA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MeasResultEUTRA >-----#
    MeasResultEUTRA = SEQ(name='MeasResultEUTRA', mode=MODE_TYPE)
    _MeasResultEUTRA_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellId')))
    _MeasResultEUTRA_cgi_Info = SEQ(name='cgi-Info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultEUTRA_cgi_Info_cellGlobalId = SEQ(name='cellGlobalId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellGlobalIdEUTRA')))
    __MeasResultEUTRA_cgi_Info_trackingAreaCode = BIT_STR(name='trackingAreaCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'TrackingAreaCode')))
    __MeasResultEUTRA_cgi_Info_plmn_IdentityList = SEQ_OF(name='plmn-IdentityList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PLMN-IdentityList2')), opt=True)
    _MeasResultEUTRA_cgi_Info._cont = ASN1Dict([
        ('cellGlobalId', __MeasResultEUTRA_cgi_Info_cellGlobalId),
        ('trackingAreaCode', __MeasResultEUTRA_cgi_Info_trackingAreaCode),
        ('plmn-IdentityList', __MeasResultEUTRA_cgi_Info_plmn_IdentityList),
        ])
    _MeasResultEUTRA_cgi_Info._ext = None
    _MeasResultEUTRA_measResult = SEQ(name='measResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasResultEUTRA_measResult_rsrpResult = INT(name='rsrpResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RSRP-Range')), opt=True)
    __MeasResultEUTRA_measResult_rsrqResult = INT(name='rsrqResult', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RSRQ-Range')), opt=True)
    _MeasResultEUTRA_measResult._cont = ASN1Dict([
        ('rsrpResult', __MeasResultEUTRA_measResult_rsrpResult),
        ('rsrqResult', __MeasResultEUTRA_measResult_rsrqResult),
        ])
    _MeasResultEUTRA_measResult._ext = []
    MeasResultEUTRA._cont = ASN1Dict([
        ('physCellId', _MeasResultEUTRA_physCellId),
        ('cgi-Info', _MeasResultEUTRA_cgi_Info),
        ('measResult', _MeasResultEUTRA_measResult),
        ])
    MeasResultEUTRA._ext = None
    
    #-----< MeasResultListUTRA >-----#
    MeasResultListUTRA = SEQ_OF(name='MeasResultListUTRA', mode=MODE_TYPE)
    _MeasResultListUTRA__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasResultUTRA')))
    MeasResultListUTRA._cont = _MeasResultListUTRA__item_
    MeasResultListUTRA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MeasResultUTRA >-----#
    MeasResultUTRA = SEQ(name='MeasResultUTRA', mode=MODE_TYPE)
    _MeasResultUTRA_physCellId = CHOICE(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __MeasResultUTRA_physCellId_fdd = INT(name='fdd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdUTRA-FDD')))
    __MeasResultUTRA_physCellId_tdd = INT(name='tdd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdUTRA-TDD')))
    _MeasResultUTRA_physCellId._cont = ASN1Dict([
        ('fdd', __MeasResultUTRA_physCellId_fdd),
        ('tdd', __MeasResultUTRA_physCellId_tdd),
        ])
    _MeasResultUTRA_physCellId._ext = None
    _MeasResultUTRA_cgi_Info = SEQ(name='cgi-Info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultUTRA_cgi_Info_cellGlobalId = SEQ(name='cellGlobalId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellGlobalIdUTRA')))
    __MeasResultUTRA_cgi_Info_locationAreaCode = BIT_STR(name='locationAreaCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultUTRA_cgi_Info_locationAreaCode._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    __MeasResultUTRA_cgi_Info_routingAreaCode = BIT_STR(name='routingAreaCode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultUTRA_cgi_Info_routingAreaCode._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    __MeasResultUTRA_cgi_Info_plmn_IdentityList = SEQ_OF(name='plmn-IdentityList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PLMN-IdentityList2')), opt=True)
    _MeasResultUTRA_cgi_Info._cont = ASN1Dict([
        ('cellGlobalId', __MeasResultUTRA_cgi_Info_cellGlobalId),
        ('locationAreaCode', __MeasResultUTRA_cgi_Info_locationAreaCode),
        ('routingAreaCode', __MeasResultUTRA_cgi_Info_routingAreaCode),
        ('plmn-IdentityList', __MeasResultUTRA_cgi_Info_plmn_IdentityList),
        ])
    _MeasResultUTRA_cgi_Info._ext = None
    _MeasResultUTRA_measResult = SEQ(name='measResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasResultUTRA_measResult_utra_RSCP = INT(name='utra-RSCP', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultUTRA_measResult_utra_RSCP._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-5, ub=91)], ev=None, er=[])
    __MeasResultUTRA_measResult_utra_EcN0 = INT(name='utra-EcN0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultUTRA_measResult_utra_EcN0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=49)], ev=None, er=[])
    _MeasResultUTRA_measResult._cont = ASN1Dict([
        ('utra-RSCP', __MeasResultUTRA_measResult_utra_RSCP),
        ('utra-EcN0', __MeasResultUTRA_measResult_utra_EcN0),
        ])
    _MeasResultUTRA_measResult._ext = []
    MeasResultUTRA._cont = ASN1Dict([
        ('physCellId', _MeasResultUTRA_physCellId),
        ('cgi-Info', _MeasResultUTRA_cgi_Info),
        ('measResult', _MeasResultUTRA_measResult),
        ])
    MeasResultUTRA._ext = None
    
    #-----< MeasResultListGERAN >-----#
    MeasResultListGERAN = SEQ_OF(name='MeasResultListGERAN', mode=MODE_TYPE)
    _MeasResultListGERAN__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasResultGERAN')))
    MeasResultListGERAN._cont = _MeasResultListGERAN__item_
    MeasResultListGERAN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MeasResultGERAN >-----#
    MeasResultGERAN = SEQ(name='MeasResultGERAN', mode=MODE_TYPE)
    _MeasResultGERAN_carrierFreq = SEQ(name='carrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CarrierFreqGERAN')))
    _MeasResultGERAN_physCellId = SEQ(name='physCellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdGERAN')))
    _MeasResultGERAN_cgi_Info = SEQ(name='cgi-Info', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultGERAN_cgi_Info_cellGlobalId = SEQ(name='cellGlobalId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellGlobalIdGERAN')))
    __MeasResultGERAN_cgi_Info_routingAreaCode = BIT_STR(name='routingAreaCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultGERAN_cgi_Info_routingAreaCode._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _MeasResultGERAN_cgi_Info._cont = ASN1Dict([
        ('cellGlobalId', __MeasResultGERAN_cgi_Info_cellGlobalId),
        ('routingAreaCode', __MeasResultGERAN_cgi_Info_routingAreaCode),
        ])
    _MeasResultGERAN_cgi_Info._ext = None
    _MeasResultGERAN_measResult = SEQ(name='measResult', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasResultGERAN_measResult_rssi = INT(name='rssi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasResultGERAN_measResult_rssi._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _MeasResultGERAN_measResult._cont = ASN1Dict([
        ('rssi', __MeasResultGERAN_measResult_rssi),
        ])
    _MeasResultGERAN_measResult._ext = []
    MeasResultGERAN._cont = ASN1Dict([
        ('carrierFreq', _MeasResultGERAN_carrierFreq),
        ('physCellId', _MeasResultGERAN_physCellId),
        ('cgi-Info', _MeasResultGERAN_cgi_Info),
        ('measResult', _MeasResultGERAN_measResult),
        ])
    MeasResultGERAN._ext = None
    
    #-----< MeasResultsCDMA2000 >-----#
    MeasResultsCDMA2000 = SEQ(name='MeasResultsCDMA2000', mode=MODE_TYPE)
    _MeasResultsCDMA2000_preRegistrationStatusHRPD = BOOL(name='preRegistrationStatusHRPD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MeasResultsCDMA2000_measResultListCDMA2000 = SEQ_OF(name='measResultListCDMA2000', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasResultListCDMA2000')))
    MeasResultsCDMA2000._cont = ASN1Dict([
        ('preRegistrationStatusHRPD', _MeasResultsCDMA2000_preRegistrationStatusHRPD),
        ('measResultListCDMA2000', _MeasResultsCDMA2000_measResultListCDMA2000),
        ])
    MeasResultsCDMA2000._ext = None
    
    #-----< MeasResultListCDMA2000 >-----#
    MeasResultListCDMA2000 = SEQ_OF(name='MeasResultListCDMA2000', mode=MODE_TYPE)
    _MeasResultListCDMA2000__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasResultCDMA2000')))
    MeasResultListCDMA2000._cont = _MeasResultListCDMA2000__item_
    MeasResultListCDMA2000._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MeasResultCDMA2000 >-----#
    MeasResultCDMA2000 = SEQ(name='MeasResultCDMA2000', mode=MODE_TYPE)
    _MeasResultCDMA2000_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellIdCDMA2000')))
    _MeasResultCDMA2000_cgi_Info = CHOICE(name='cgi-Info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellGlobalIdCDMA2000')), opt=True)
    _MeasResultCDMA2000_measResult = SEQ(name='measResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasResultCDMA2000_measResult_pilotPnPhase = INT(name='pilotPnPhase', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasResultCDMA2000_measResult_pilotPnPhase._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    __MeasResultCDMA2000_measResult_pilotStrength = INT(name='pilotStrength', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasResultCDMA2000_measResult_pilotStrength._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _MeasResultCDMA2000_measResult._cont = ASN1Dict([
        ('pilotPnPhase', __MeasResultCDMA2000_measResult_pilotPnPhase),
        ('pilotStrength', __MeasResultCDMA2000_measResult_pilotStrength),
        ])
    _MeasResultCDMA2000_measResult._ext = []
    MeasResultCDMA2000._cont = ASN1Dict([
        ('physCellId', _MeasResultCDMA2000_physCellId),
        ('cgi-Info', _MeasResultCDMA2000_cgi_Info),
        ('measResult', _MeasResultCDMA2000_measResult),
        ])
    MeasResultCDMA2000._ext = None
    
    #-----< PLMN-IdentityList2 >-----#
    PLMN_IdentityList2 = SEQ_OF(name='PLMN-IdentityList2', mode=MODE_TYPE)
    _PLMN_IdentityList2__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PLMN-Identity')))
    PLMN_IdentityList2._cont = _PLMN_IdentityList2__item_
    PLMN_IdentityList2._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< QuantityConfig >-----#
    QuantityConfig = SEQ(name='QuantityConfig', mode=MODE_TYPE)
    _QuantityConfig_quantityConfigEUTRA = SEQ(name='quantityConfigEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'QuantityConfigEUTRA')), opt=True)
    _QuantityConfig_quantityConfigUTRA = SEQ(name='quantityConfigUTRA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'QuantityConfigUTRA')), opt=True)
    _QuantityConfig_quantityConfigGERAN = SEQ(name='quantityConfigGERAN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'QuantityConfigGERAN')), opt=True)
    _QuantityConfig_quantityConfigCDMA2000 = SEQ(name='quantityConfigCDMA2000', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'QuantityConfigCDMA2000')), opt=True)
    QuantityConfig._cont = ASN1Dict([
        ('quantityConfigEUTRA', _QuantityConfig_quantityConfigEUTRA),
        ('quantityConfigUTRA', _QuantityConfig_quantityConfigUTRA),
        ('quantityConfigGERAN', _QuantityConfig_quantityConfigGERAN),
        ('quantityConfigCDMA2000', _QuantityConfig_quantityConfigCDMA2000),
        ])
    QuantityConfig._ext = []
    
    #-----< QuantityConfigEUTRA >-----#
    QuantityConfigEUTRA = SEQ(name='QuantityConfigEUTRA', mode=MODE_TYPE)
    _QuantityConfigEUTRA_filterCoefficientRSRP = ENUM(name='filterCoefficientRSRP', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FilterCoefficient')), default='fc4')
    _QuantityConfigEUTRA_filterCoefficientRSRQ = ENUM(name='filterCoefficientRSRQ', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FilterCoefficient')), default='fc4')
    QuantityConfigEUTRA._cont = ASN1Dict([
        ('filterCoefficientRSRP', _QuantityConfigEUTRA_filterCoefficientRSRP),
        ('filterCoefficientRSRQ', _QuantityConfigEUTRA_filterCoefficientRSRQ),
        ])
    QuantityConfigEUTRA._ext = None
    
    #-----< QuantityConfigUTRA >-----#
    QuantityConfigUTRA = SEQ(name='QuantityConfigUTRA', mode=MODE_TYPE)
    _QuantityConfigUTRA_measQuantityUTRA_FDD = ENUM(name='measQuantityUTRA-FDD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _QuantityConfigUTRA_measQuantityUTRA_FDD._cont = ASN1Dict([('cpich-RSCP', 0), ('cpich-EcN0', 1)])
    _QuantityConfigUTRA_measQuantityUTRA_FDD._ext = None
    _QuantityConfigUTRA_measQuantityUTRA_TDD = ENUM(name='measQuantityUTRA-TDD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _QuantityConfigUTRA_measQuantityUTRA_TDD._cont = ASN1Dict([('pccpch-RSCP', 0)])
    _QuantityConfigUTRA_measQuantityUTRA_TDD._ext = None
    _QuantityConfigUTRA_filterCoefficient = ENUM(name='filterCoefficient', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FilterCoefficient')), default='fc4')
    QuantityConfigUTRA._cont = ASN1Dict([
        ('measQuantityUTRA-FDD', _QuantityConfigUTRA_measQuantityUTRA_FDD),
        ('measQuantityUTRA-TDD', _QuantityConfigUTRA_measQuantityUTRA_TDD),
        ('filterCoefficient', _QuantityConfigUTRA_filterCoefficient),
        ])
    QuantityConfigUTRA._ext = None
    
    #-----< QuantityConfigGERAN >-----#
    QuantityConfigGERAN = SEQ(name='QuantityConfigGERAN', mode=MODE_TYPE)
    _QuantityConfigGERAN_measQuantityGERAN = ENUM(name='measQuantityGERAN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _QuantityConfigGERAN_measQuantityGERAN._cont = ASN1Dict([('rssi', 0)])
    _QuantityConfigGERAN_measQuantityGERAN._ext = None
    _QuantityConfigGERAN_filterCoefficient = ENUM(name='filterCoefficient', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'FilterCoefficient')), default='fc2')
    QuantityConfigGERAN._cont = ASN1Dict([
        ('measQuantityGERAN', _QuantityConfigGERAN_measQuantityGERAN),
        ('filterCoefficient', _QuantityConfigGERAN_filterCoefficient),
        ])
    QuantityConfigGERAN._ext = None
    
    #-----< QuantityConfigCDMA2000 >-----#
    QuantityConfigCDMA2000 = SEQ(name='QuantityConfigCDMA2000', mode=MODE_TYPE)
    _QuantityConfigCDMA2000_measQuantityCDMA2000 = ENUM(name='measQuantityCDMA2000', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _QuantityConfigCDMA2000_measQuantityCDMA2000._cont = ASN1Dict([('pilotStrength', 0), ('pilotPnPhaseAndPilotStrength', 1)])
    _QuantityConfigCDMA2000_measQuantityCDMA2000._ext = None
    QuantityConfigCDMA2000._cont = ASN1Dict([
        ('measQuantityCDMA2000', _QuantityConfigCDMA2000_measQuantityCDMA2000),
        ])
    QuantityConfigCDMA2000._ext = None
    
    #-----< ReportConfigEUTRA >-----#
    ReportConfigEUTRA = SEQ(name='ReportConfigEUTRA', mode=MODE_TYPE)
    _ReportConfigEUTRA_triggerType = CHOICE(name='triggerType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ReportConfigEUTRA_triggerType_event = SEQ(name='event', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ReportConfigEUTRA_triggerType_event_eventId = CHOICE(name='eventId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA1 = SEQ(name='eventA1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____ReportConfigEUTRA_triggerType_event_eventId_eventA1_a1_Threshold = CHOICE(name='a1-Threshold', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdEUTRA')))
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA1._cont = ASN1Dict([
        ('a1-Threshold', _____ReportConfigEUTRA_triggerType_event_eventId_eventA1_a1_Threshold),
        ])
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA1._ext = None
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA2 = SEQ(name='eventA2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____ReportConfigEUTRA_triggerType_event_eventId_eventA2_a2_Threshold = CHOICE(name='a2-Threshold', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdEUTRA')))
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA2._cont = ASN1Dict([
        ('a2-Threshold', _____ReportConfigEUTRA_triggerType_event_eventId_eventA2_a2_Threshold),
        ])
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA2._ext = None
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA3 = SEQ(name='eventA3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____ReportConfigEUTRA_triggerType_event_eventId_eventA3_a3_Offset = INT(name='a3-Offset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____ReportConfigEUTRA_triggerType_event_eventId_eventA3_a3_Offset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-30, ub=30)], ev=None, er=[])
    _____ReportConfigEUTRA_triggerType_event_eventId_eventA3_reportOnLeave = BOOL(name='reportOnLeave', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA3._cont = ASN1Dict([
        ('a3-Offset', _____ReportConfigEUTRA_triggerType_event_eventId_eventA3_a3_Offset),
        ('reportOnLeave', _____ReportConfigEUTRA_triggerType_event_eventId_eventA3_reportOnLeave),
        ])
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA3._ext = None
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA4 = SEQ(name='eventA4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____ReportConfigEUTRA_triggerType_event_eventId_eventA4_a4_Threshold = CHOICE(name='a4-Threshold', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdEUTRA')))
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA4._cont = ASN1Dict([
        ('a4-Threshold', _____ReportConfigEUTRA_triggerType_event_eventId_eventA4_a4_Threshold),
        ])
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA4._ext = None
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA5 = SEQ(name='eventA5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____ReportConfigEUTRA_triggerType_event_eventId_eventA5_a5_Threshold1 = CHOICE(name='a5-Threshold1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdEUTRA')))
    _____ReportConfigEUTRA_triggerType_event_eventId_eventA5_a5_Threshold2 = CHOICE(name='a5-Threshold2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdEUTRA')))
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA5._cont = ASN1Dict([
        ('a5-Threshold1', _____ReportConfigEUTRA_triggerType_event_eventId_eventA5_a5_Threshold1),
        ('a5-Threshold2', _____ReportConfigEUTRA_triggerType_event_eventId_eventA5_a5_Threshold2),
        ])
    ____ReportConfigEUTRA_triggerType_event_eventId_eventA5._ext = None
    ___ReportConfigEUTRA_triggerType_event_eventId._cont = ASN1Dict([
        ('eventA1', ____ReportConfigEUTRA_triggerType_event_eventId_eventA1),
        ('eventA2', ____ReportConfigEUTRA_triggerType_event_eventId_eventA2),
        ('eventA3', ____ReportConfigEUTRA_triggerType_event_eventId_eventA3),
        ('eventA4', ____ReportConfigEUTRA_triggerType_event_eventId_eventA4),
        ('eventA5', ____ReportConfigEUTRA_triggerType_event_eventId_eventA5),
        ])
    ___ReportConfigEUTRA_triggerType_event_eventId._ext = []
    ___ReportConfigEUTRA_triggerType_event_hysteresis = INT(name='hysteresis', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Hysteresis')))
    ___ReportConfigEUTRA_triggerType_event_timeToTrigger = ENUM(name='timeToTrigger', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'TimeToTrigger')))
    __ReportConfigEUTRA_triggerType_event._cont = ASN1Dict([
        ('eventId', ___ReportConfigEUTRA_triggerType_event_eventId),
        ('hysteresis', ___ReportConfigEUTRA_triggerType_event_hysteresis),
        ('timeToTrigger', ___ReportConfigEUTRA_triggerType_event_timeToTrigger),
        ])
    __ReportConfigEUTRA_triggerType_event._ext = None
    __ReportConfigEUTRA_triggerType_periodical = SEQ(name='periodical', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ReportConfigEUTRA_triggerType_periodical_purpose = ENUM(name='purpose', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ReportConfigEUTRA_triggerType_periodical_purpose._cont = ASN1Dict([('reportStrongestCells', 0), ('reportCGI', 1)])
    ___ReportConfigEUTRA_triggerType_periodical_purpose._ext = None
    __ReportConfigEUTRA_triggerType_periodical._cont = ASN1Dict([
        ('purpose', ___ReportConfigEUTRA_triggerType_periodical_purpose),
        ])
    __ReportConfigEUTRA_triggerType_periodical._ext = None
    _ReportConfigEUTRA_triggerType._cont = ASN1Dict([
        ('event', __ReportConfigEUTRA_triggerType_event),
        ('periodical', __ReportConfigEUTRA_triggerType_periodical),
        ])
    _ReportConfigEUTRA_triggerType._ext = None
    _ReportConfigEUTRA_triggerQuantity = ENUM(name='triggerQuantity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReportConfigEUTRA_triggerQuantity._cont = ASN1Dict([('rsrp', 0), ('rsrq', 1)])
    _ReportConfigEUTRA_triggerQuantity._ext = None
    _ReportConfigEUTRA_reportQuantity = ENUM(name='reportQuantity', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReportConfigEUTRA_reportQuantity._cont = ASN1Dict([('sameAsTriggerQuantity', 0), ('both', 1)])
    _ReportConfigEUTRA_reportQuantity._ext = None
    _ReportConfigEUTRA_maxReportCells = INT(name='maxReportCells', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReportConfigEUTRA_maxReportCells._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _ReportConfigEUTRA_reportInterval = ENUM(name='reportInterval', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReportInterval')))
    _ReportConfigEUTRA_reportAmount = ENUM(name='reportAmount', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReportConfigEUTRA_reportAmount._cont = ASN1Dict([('r1', 0), ('r2', 1), ('r4', 2), ('r8', 3), ('r16', 4), ('r32', 5), ('r64', 6), ('infinity', 7)])
    _ReportConfigEUTRA_reportAmount._ext = None
    ReportConfigEUTRA._cont = ASN1Dict([
        ('triggerType', _ReportConfigEUTRA_triggerType),
        ('triggerQuantity', _ReportConfigEUTRA_triggerQuantity),
        ('reportQuantity', _ReportConfigEUTRA_reportQuantity),
        ('maxReportCells', _ReportConfigEUTRA_maxReportCells),
        ('reportInterval', _ReportConfigEUTRA_reportInterval),
        ('reportAmount', _ReportConfigEUTRA_reportAmount),
        ])
    ReportConfigEUTRA._ext = []
    
    #-----< ThresholdEUTRA >-----#
    ThresholdEUTRA = CHOICE(name='ThresholdEUTRA', mode=MODE_TYPE)
    _ThresholdEUTRA_threshold_RSRP = INT(name='threshold-RSRP', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RSRP-Range')))
    _ThresholdEUTRA_threshold_RSRQ = INT(name='threshold-RSRQ', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RSRQ-Range')))
    ThresholdEUTRA._cont = ASN1Dict([
        ('threshold-RSRP', _ThresholdEUTRA_threshold_RSRP),
        ('threshold-RSRQ', _ThresholdEUTRA_threshold_RSRQ),
        ])
    ThresholdEUTRA._ext = None
    
    #-----< ReportConfigId >-----#
    ReportConfigId = INT(name='ReportConfigId', mode=MODE_TYPE)
    ReportConfigId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< ReportConfigInterRAT >-----#
    ReportConfigInterRAT = SEQ(name='ReportConfigInterRAT', mode=MODE_TYPE)
    _ReportConfigInterRAT_triggerType = CHOICE(name='triggerType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ReportConfigInterRAT_triggerType_event = SEQ(name='event', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ReportConfigInterRAT_triggerType_event_eventId = CHOICE(name='eventId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ____ReportConfigInterRAT_triggerType_event_eventId_eventB1 = SEQ(name='eventB1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold = CHOICE(name='b1-Threshold', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ______ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold_b1_ThresholdUTRA = CHOICE(name='b1-ThresholdUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdUTRA')))
    ______ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold_b1_ThresholdGERAN = INT(name='b1-ThresholdGERAN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdGERAN')))
    ______ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold_b1_ThresholdCDMA2000 = INT(name='b1-ThresholdCDMA2000', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdCDMA2000')))
    _____ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold._cont = ASN1Dict([
        ('b1-ThresholdUTRA', ______ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold_b1_ThresholdUTRA),
        ('b1-ThresholdGERAN', ______ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold_b1_ThresholdGERAN),
        ('b1-ThresholdCDMA2000', ______ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold_b1_ThresholdCDMA2000),
        ])
    _____ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold._ext = None
    ____ReportConfigInterRAT_triggerType_event_eventId_eventB1._cont = ASN1Dict([
        ('b1-Threshold', _____ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold),
        ])
    ____ReportConfigInterRAT_triggerType_event_eventId_eventB1._ext = None
    ____ReportConfigInterRAT_triggerType_event_eventId_eventB2 = SEQ(name='eventB2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold1 = CHOICE(name='b2-Threshold1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdEUTRA')))
    _____ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2 = CHOICE(name='b2-Threshold2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ______ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2_b2_Threshold2UTRA = CHOICE(name='b2-Threshold2UTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdUTRA')))
    ______ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2_b2_Threshold2GERAN = INT(name='b2-Threshold2GERAN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdGERAN')))
    ______ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2_b2_Threshold2CDMA2000 = INT(name='b2-Threshold2CDMA2000', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ThresholdCDMA2000')))
    _____ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2._cont = ASN1Dict([
        ('b2-Threshold2UTRA', ______ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2_b2_Threshold2UTRA),
        ('b2-Threshold2GERAN', ______ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2_b2_Threshold2GERAN),
        ('b2-Threshold2CDMA2000', ______ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2_b2_Threshold2CDMA2000),
        ])
    _____ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2._ext = None
    ____ReportConfigInterRAT_triggerType_event_eventId_eventB2._cont = ASN1Dict([
        ('b2-Threshold1', _____ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold1),
        ('b2-Threshold2', _____ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2),
        ])
    ____ReportConfigInterRAT_triggerType_event_eventId_eventB2._ext = None
    ___ReportConfigInterRAT_triggerType_event_eventId._cont = ASN1Dict([
        ('eventB1', ____ReportConfigInterRAT_triggerType_event_eventId_eventB1),
        ('eventB2', ____ReportConfigInterRAT_triggerType_event_eventId_eventB2),
        ])
    ___ReportConfigInterRAT_triggerType_event_eventId._ext = []
    ___ReportConfigInterRAT_triggerType_event_hysteresis = INT(name='hysteresis', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'Hysteresis')))
    ___ReportConfigInterRAT_triggerType_event_timeToTrigger = ENUM(name='timeToTrigger', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'TimeToTrigger')))
    __ReportConfigInterRAT_triggerType_event._cont = ASN1Dict([
        ('eventId', ___ReportConfigInterRAT_triggerType_event_eventId),
        ('hysteresis', ___ReportConfigInterRAT_triggerType_event_hysteresis),
        ('timeToTrigger', ___ReportConfigInterRAT_triggerType_event_timeToTrigger),
        ])
    __ReportConfigInterRAT_triggerType_event._ext = None
    __ReportConfigInterRAT_triggerType_periodical = SEQ(name='periodical', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ReportConfigInterRAT_triggerType_periodical_purpose = ENUM(name='purpose', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ReportConfigInterRAT_triggerType_periodical_purpose._cont = ASN1Dict([('reportStrongestCells', 0), ('reportStrongestCellsForSON', 1), ('reportCGI', 2)])
    ___ReportConfigInterRAT_triggerType_periodical_purpose._ext = None
    __ReportConfigInterRAT_triggerType_periodical._cont = ASN1Dict([
        ('purpose', ___ReportConfigInterRAT_triggerType_periodical_purpose),
        ])
    __ReportConfigInterRAT_triggerType_periodical._ext = None
    _ReportConfigInterRAT_triggerType._cont = ASN1Dict([
        ('event', __ReportConfigInterRAT_triggerType_event),
        ('periodical', __ReportConfigInterRAT_triggerType_periodical),
        ])
    _ReportConfigInterRAT_triggerType._ext = None
    _ReportConfigInterRAT_maxReportCells = INT(name='maxReportCells', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReportConfigInterRAT_maxReportCells._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _ReportConfigInterRAT_reportInterval = ENUM(name='reportInterval', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReportInterval')))
    _ReportConfigInterRAT_reportAmount = ENUM(name='reportAmount', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReportConfigInterRAT_reportAmount._cont = ASN1Dict([('r1', 0), ('r2', 1), ('r4', 2), ('r8', 3), ('r16', 4), ('r32', 5), ('r64', 6), ('infinity', 7)])
    _ReportConfigInterRAT_reportAmount._ext = None
    ReportConfigInterRAT._cont = ASN1Dict([
        ('triggerType', _ReportConfigInterRAT_triggerType),
        ('maxReportCells', _ReportConfigInterRAT_maxReportCells),
        ('reportInterval', _ReportConfigInterRAT_reportInterval),
        ('reportAmount', _ReportConfigInterRAT_reportAmount),
        ])
    ReportConfigInterRAT._ext = []
    
    #-----< ThresholdUTRA >-----#
    ThresholdUTRA = CHOICE(name='ThresholdUTRA', mode=MODE_TYPE)
    _ThresholdUTRA_utra_RSCP = INT(name='utra-RSCP', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ThresholdUTRA_utra_RSCP._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-5, ub=91)], ev=None, er=[])
    _ThresholdUTRA_utra_EcN0 = INT(name='utra-EcN0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ThresholdUTRA_utra_EcN0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=49)], ev=None, er=[])
    ThresholdUTRA._cont = ASN1Dict([
        ('utra-RSCP', _ThresholdUTRA_utra_RSCP),
        ('utra-EcN0', _ThresholdUTRA_utra_EcN0),
        ])
    ThresholdUTRA._ext = None
    
    #-----< ThresholdGERAN >-----#
    ThresholdGERAN = INT(name='ThresholdGERAN', mode=MODE_TYPE)
    ThresholdGERAN._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< ThresholdCDMA2000 >-----#
    ThresholdCDMA2000 = INT(name='ThresholdCDMA2000', mode=MODE_TYPE)
    ThresholdCDMA2000._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< ReportConfigToAddModList >-----#
    ReportConfigToAddModList = SEQ_OF(name='ReportConfigToAddModList', mode=MODE_TYPE)
    _ReportConfigToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReportConfigToAddMod')))
    ReportConfigToAddModList._cont = _ReportConfigToAddModList__item_
    ReportConfigToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< ReportConfigToAddMod >-----#
    ReportConfigToAddMod = SEQ(name='ReportConfigToAddMod', mode=MODE_TYPE)
    _ReportConfigToAddMod_reportConfigId = INT(name='reportConfigId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReportConfigId')))
    _ReportConfigToAddMod_reportConfig = CHOICE(name='reportConfig', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ReportConfigToAddMod_reportConfig_reportConfigEUTRA = SEQ(name='reportConfigEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReportConfigEUTRA')))
    __ReportConfigToAddMod_reportConfig_reportConfigInterRAT = SEQ(name='reportConfigInterRAT', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReportConfigInterRAT')))
    _ReportConfigToAddMod_reportConfig._cont = ASN1Dict([
        ('reportConfigEUTRA', __ReportConfigToAddMod_reportConfig_reportConfigEUTRA),
        ('reportConfigInterRAT', __ReportConfigToAddMod_reportConfig_reportConfigInterRAT),
        ])
    _ReportConfigToAddMod_reportConfig._ext = None
    ReportConfigToAddMod._cont = ASN1Dict([
        ('reportConfigId', _ReportConfigToAddMod_reportConfigId),
        ('reportConfig', _ReportConfigToAddMod_reportConfig),
        ])
    ReportConfigToAddMod._ext = None
    
    #-----< ReportInterval >-----#
    ReportInterval = ENUM(name='ReportInterval', mode=MODE_TYPE)
    ReportInterval._cont = ASN1Dict([('ms120', 0), ('ms240', 1), ('ms480', 2), ('ms640', 3), ('ms1024', 4), ('ms2048', 5), ('ms5120', 6), ('ms10240', 7), ('min1', 8), ('min6', 9), ('min12', 10), ('min30', 11), ('min60', 12), ('spare3', 13), ('spare2', 14), ('spare1', 15)])
    ReportInterval._ext = None
    
    #-----< RSRP-Range >-----#
    RSRP_Range = INT(name='RSRP-Range', mode=MODE_TYPE)
    RSRP_Range._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=97)], ev=None, er=[])
    
    #-----< RSRQ-Range >-----#
    RSRQ_Range = INT(name='RSRQ-Range', mode=MODE_TYPE)
    RSRQ_Range._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=34)], ev=None, er=[])
    
    #-----< TimeToTrigger >-----#
    TimeToTrigger = ENUM(name='TimeToTrigger', mode=MODE_TYPE)
    TimeToTrigger._cont = ASN1Dict([('ms0', 0), ('ms40', 1), ('ms64', 2), ('ms80', 3), ('ms100', 4), ('ms128', 5), ('ms160', 6), ('ms256', 7), ('ms320', 8), ('ms480', 9), ('ms512', 10), ('ms640', 11), ('ms1024', 12), ('ms1280', 13), ('ms2560', 14), ('ms5120', 15)])
    TimeToTrigger._ext = None
    
    #-----< C-RNTI >-----#
    C_RNTI = BIT_STR(name='C-RNTI', mode=MODE_TYPE)
    C_RNTI._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< DedicatedInfoCDMA2000 >-----#
    DedicatedInfoCDMA2000 = OCT_STR(name='DedicatedInfoCDMA2000', mode=MODE_TYPE)
    
    #-----< DedicatedInfoNAS >-----#
    DedicatedInfoNAS = OCT_STR(name='DedicatedInfoNAS', mode=MODE_TYPE)
    
    #-----< FilterCoefficient >-----#
    FilterCoefficient = ENUM(name='FilterCoefficient', mode=MODE_TYPE)
    FilterCoefficient._cont = ASN1Dict([('fc0', 0), ('fc1', 1), ('fc2', 2), ('fc3', 3), ('fc4', 4), ('fc5', 5), ('fc6', 6), ('fc7', 7), ('fc8', 8), ('fc9', 9), ('fc11', 10), ('fc13', 11), ('fc15', 12), ('fc17', 13), ('fc19', 14), ('spare1', 15)])
    FilterCoefficient._ext = []
    
    #-----< MMEC >-----#
    MMEC = BIT_STR(name='MMEC', mode=MODE_TYPE)
    MMEC._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< NeighCellConfig >-----#
    NeighCellConfig = BIT_STR(name='NeighCellConfig', mode=MODE_TYPE)
    NeighCellConfig._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< RAND-CDMA2000 >-----#
    RAND_CDMA2000 = BIT_STR(name='RAND-CDMA2000', mode=MODE_TYPE)
    RAND_CDMA2000._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    
    #-----< RAT-Type >-----#
    RAT_Type = ENUM(name='RAT-Type', mode=MODE_TYPE)
    RAT_Type._cont = ASN1Dict([('eutra', 0), ('utra', 1), ('geran-cs', 2), ('geran-ps', 3), ('cdma2000-1XRTT', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    RAT_Type._ext = []
    
    #-----< RRC-TransactionIdentifier >-----#
    RRC_TransactionIdentifier = INT(name='RRC-TransactionIdentifier', mode=MODE_TYPE)
    RRC_TransactionIdentifier._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< S-TMSI >-----#
    S_TMSI = SEQ(name='S-TMSI', mode=MODE_TYPE)
    _S_TMSI_mmec = BIT_STR(name='mmec', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MMEC')))
    _S_TMSI_m_TMSI = BIT_STR(name='m-TMSI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _S_TMSI_m_TMSI._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    S_TMSI._cont = ASN1Dict([
        ('mmec', _S_TMSI_mmec),
        ('m-TMSI', _S_TMSI_m_TMSI),
        ])
    S_TMSI._ext = None
    
    #-----< UE-CapabilityRAT-ContainerList >-----#
    UE_CapabilityRAT_ContainerList = SEQ_OF(name='UE-CapabilityRAT-ContainerList', mode=MODE_TYPE)
    _UE_CapabilityRAT_ContainerList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UE-CapabilityRAT-Container')))
    UE_CapabilityRAT_ContainerList._cont = _UE_CapabilityRAT_ContainerList__item_
    UE_CapabilityRAT_ContainerList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8)], ev=None, er=[])
    
    #-----< UE-CapabilityRAT-Container >-----#
    UE_CapabilityRAT_Container = SEQ(name='UE-CapabilityRAT-Container', mode=MODE_TYPE)
    _UE_CapabilityRAT_Container_rat_Type = ENUM(name='rat-Type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RAT-Type')))
    _UE_CapabilityRAT_Container_ueCapabilityRAT_Container = OCT_STR(name='ueCapabilityRAT-Container', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    UE_CapabilityRAT_Container._cont = ASN1Dict([
        ('rat-Type', _UE_CapabilityRAT_Container_rat_Type),
        ('ueCapabilityRAT-Container', _UE_CapabilityRAT_Container_ueCapabilityRAT_Container),
        ])
    UE_CapabilityRAT_Container._ext = None
    
    #-----< UE-EUTRA-Capability >-----#
    UE_EUTRA_Capability = SEQ(name='UE-EUTRA-Capability', mode=MODE_TYPE)
    _UE_EUTRA_Capability_accessStratumRelease = ENUM(name='accessStratumRelease', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'AccessStratumRelease')))
    _UE_EUTRA_Capability_ue_Category = INT(name='ue-Category', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UE_EUTRA_Capability_ue_Category._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    _UE_EUTRA_Capability_pdcp_Parameters = SEQ(name='pdcp-Parameters', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PDCP-Parameters')))
    _UE_EUTRA_Capability_phyLayerParameters = SEQ(name='phyLayerParameters', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhyLayerParameters')))
    _UE_EUTRA_Capability_rf_Parameters = SEQ(name='rf-Parameters', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RF-Parameters')))
    _UE_EUTRA_Capability_measParameters = SEQ(name='measParameters', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasParameters')))
    _UE_EUTRA_Capability_featureGroupIndicators = BIT_STR(name='featureGroupIndicators', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UE_EUTRA_Capability_featureGroupIndicators._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    _UE_EUTRA_Capability_interRAT_Parameters = SEQ(name='interRAT-Parameters', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UE_EUTRA_Capability_interRAT_Parameters_utraFDD = SEQ(name='utraFDD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IRAT-ParametersUTRA-FDD')), opt=True)
    __UE_EUTRA_Capability_interRAT_Parameters_utraTDD128 = SEQ(name='utraTDD128', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IRAT-ParametersUTRA-TDD128')), opt=True)
    __UE_EUTRA_Capability_interRAT_Parameters_utraTDD384 = SEQ(name='utraTDD384', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IRAT-ParametersUTRA-TDD384')), opt=True)
    __UE_EUTRA_Capability_interRAT_Parameters_utraTDD768 = SEQ(name='utraTDD768', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IRAT-ParametersUTRA-TDD768')), opt=True)
    __UE_EUTRA_Capability_interRAT_Parameters_geran = SEQ(name='geran', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IRAT-ParametersGERAN')), opt=True)
    __UE_EUTRA_Capability_interRAT_Parameters_cdma2000_HRPD = SEQ(name='cdma2000-HRPD', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IRAT-ParametersCDMA2000-HRPD')), opt=True)
    __UE_EUTRA_Capability_interRAT_Parameters_cdma2000_1xRTT = SEQ(name='cdma2000-1xRTT', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'IRAT-ParametersCDMA2000-1XRTT')), opt=True)
    _UE_EUTRA_Capability_interRAT_Parameters._cont = ASN1Dict([
        ('utraFDD', __UE_EUTRA_Capability_interRAT_Parameters_utraFDD),
        ('utraTDD128', __UE_EUTRA_Capability_interRAT_Parameters_utraTDD128),
        ('utraTDD384', __UE_EUTRA_Capability_interRAT_Parameters_utraTDD384),
        ('utraTDD768', __UE_EUTRA_Capability_interRAT_Parameters_utraTDD768),
        ('geran', __UE_EUTRA_Capability_interRAT_Parameters_geran),
        ('cdma2000-HRPD', __UE_EUTRA_Capability_interRAT_Parameters_cdma2000_HRPD),
        ('cdma2000-1xRTT', __UE_EUTRA_Capability_interRAT_Parameters_cdma2000_1xRTT),
        ])
    _UE_EUTRA_Capability_interRAT_Parameters._ext = None
    _UE_EUTRA_Capability_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UE_EUTRA_Capability_nonCriticalExtension._cont = ASN1Dict([
        ])
    _UE_EUTRA_Capability_nonCriticalExtension._ext = None
    UE_EUTRA_Capability._cont = ASN1Dict([
        ('accessStratumRelease', _UE_EUTRA_Capability_accessStratumRelease),
        ('ue-Category', _UE_EUTRA_Capability_ue_Category),
        ('pdcp-Parameters', _UE_EUTRA_Capability_pdcp_Parameters),
        ('phyLayerParameters', _UE_EUTRA_Capability_phyLayerParameters),
        ('rf-Parameters', _UE_EUTRA_Capability_rf_Parameters),
        ('measParameters', _UE_EUTRA_Capability_measParameters),
        ('featureGroupIndicators', _UE_EUTRA_Capability_featureGroupIndicators),
        ('interRAT-Parameters', _UE_EUTRA_Capability_interRAT_Parameters),
        ('nonCriticalExtension', _UE_EUTRA_Capability_nonCriticalExtension),
        ])
    UE_EUTRA_Capability._ext = None
    
    #-----< AccessStratumRelease >-----#
    AccessStratumRelease = ENUM(name='AccessStratumRelease', mode=MODE_TYPE)
    AccessStratumRelease._cont = ASN1Dict([('rel8', 0), ('spare7', 1), ('spare6', 2), ('spare5', 3), ('spare4', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    AccessStratumRelease._ext = []
    
    #-----< PDCP-Parameters >-----#
    PDCP_Parameters = SEQ(name='PDCP-Parameters', mode=MODE_TYPE)
    _PDCP_Parameters_supportedROHC_Profiles = SEQ(name='supportedROHC-Profiles', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0001 = BOOL(name='profile0x0001', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0002 = BOOL(name='profile0x0002', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0003 = BOOL(name='profile0x0003', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0004 = BOOL(name='profile0x0004', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0006 = BOOL(name='profile0x0006', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0101 = BOOL(name='profile0x0101', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0102 = BOOL(name='profile0x0102', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0103 = BOOL(name='profile0x0103', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0104 = BOOL(name='profile0x0104', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDCP_Parameters_supportedROHC_Profiles._cont = ASN1Dict([
        ('profile0x0001', __PDCP_Parameters_supportedROHC_Profiles_profile0x0001),
        ('profile0x0002', __PDCP_Parameters_supportedROHC_Profiles_profile0x0002),
        ('profile0x0003', __PDCP_Parameters_supportedROHC_Profiles_profile0x0003),
        ('profile0x0004', __PDCP_Parameters_supportedROHC_Profiles_profile0x0004),
        ('profile0x0006', __PDCP_Parameters_supportedROHC_Profiles_profile0x0006),
        ('profile0x0101', __PDCP_Parameters_supportedROHC_Profiles_profile0x0101),
        ('profile0x0102', __PDCP_Parameters_supportedROHC_Profiles_profile0x0102),
        ('profile0x0103', __PDCP_Parameters_supportedROHC_Profiles_profile0x0103),
        ('profile0x0104', __PDCP_Parameters_supportedROHC_Profiles_profile0x0104),
        ])
    _PDCP_Parameters_supportedROHC_Profiles._ext = None
    _PDCP_Parameters_maxNumberROHC_ContextSessions = ENUM(name='maxNumberROHC-ContextSessions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default='cs16')
    _PDCP_Parameters_maxNumberROHC_ContextSessions._cont = ASN1Dict([('cs2', 0), ('cs4', 1), ('cs8', 2), ('cs12', 3), ('cs16', 4), ('cs24', 5), ('cs32', 6), ('cs48', 7), ('cs64', 8), ('cs128', 9), ('cs256', 10), ('cs512', 11), ('cs1024', 12), ('cs16384', 13), ('spare2', 14), ('spare1', 15)])
    _PDCP_Parameters_maxNumberROHC_ContextSessions._ext = None
    PDCP_Parameters._cont = ASN1Dict([
        ('supportedROHC-Profiles', _PDCP_Parameters_supportedROHC_Profiles),
        ('maxNumberROHC-ContextSessions', _PDCP_Parameters_maxNumberROHC_ContextSessions),
        ])
    PDCP_Parameters._ext = []
    
    #-----< PhyLayerParameters >-----#
    PhyLayerParameters = SEQ(name='PhyLayerParameters', mode=MODE_TYPE)
    _PhyLayerParameters_ue_TxAntennaSelectionSupported = BOOL(name='ue-TxAntennaSelectionSupported', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PhyLayerParameters_ue_SpecificRefSigsSupported = BOOL(name='ue-SpecificRefSigsSupported', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PhyLayerParameters._cont = ASN1Dict([
        ('ue-TxAntennaSelectionSupported', _PhyLayerParameters_ue_TxAntennaSelectionSupported),
        ('ue-SpecificRefSigsSupported', _PhyLayerParameters_ue_SpecificRefSigsSupported),
        ])
    PhyLayerParameters._ext = None
    
    #-----< RF-Parameters >-----#
    RF_Parameters = SEQ(name='RF-Parameters', mode=MODE_TYPE)
    _RF_Parameters_supportedBandListEUTRA = SEQ_OF(name='supportedBandListEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandListEUTRA')))
    RF_Parameters._cont = ASN1Dict([
        ('supportedBandListEUTRA', _RF_Parameters_supportedBandListEUTRA),
        ])
    RF_Parameters._ext = None
    
    #-----< SupportedBandListEUTRA >-----#
    SupportedBandListEUTRA = SEQ_OF(name='SupportedBandListEUTRA', mode=MODE_TYPE)
    _SupportedBandListEUTRA__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandEUTRA')))
    SupportedBandListEUTRA._cont = _SupportedBandListEUTRA__item_
    SupportedBandListEUTRA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< SupportedBandEUTRA >-----#
    SupportedBandEUTRA = SEQ(name='SupportedBandEUTRA', mode=MODE_TYPE)
    _SupportedBandEUTRA_bandEUTRA = INT(name='bandEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SupportedBandEUTRA_bandEUTRA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _SupportedBandEUTRA_halfDuplex = BOOL(name='halfDuplex', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SupportedBandEUTRA._cont = ASN1Dict([
        ('bandEUTRA', _SupportedBandEUTRA_bandEUTRA),
        ('halfDuplex', _SupportedBandEUTRA_halfDuplex),
        ])
    SupportedBandEUTRA._ext = None
    
    #-----< MeasParameters >-----#
    MeasParameters = SEQ(name='MeasParameters', mode=MODE_TYPE)
    _MeasParameters_bandListEUTRA = SEQ_OF(name='bandListEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandListEUTRA')))
    MeasParameters._cont = ASN1Dict([
        ('bandListEUTRA', _MeasParameters_bandListEUTRA),
        ])
    MeasParameters._ext = None
    
    #-----< BandListEUTRA >-----#
    BandListEUTRA = SEQ_OF(name='BandListEUTRA', mode=MODE_TYPE)
    _BandListEUTRA__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandInfoEUTRA')))
    BandListEUTRA._cont = _BandListEUTRA__item_
    BandListEUTRA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< BandInfoEUTRA >-----#
    BandInfoEUTRA = SEQ(name='BandInfoEUTRA', mode=MODE_TYPE)
    _BandInfoEUTRA_interFreqBandList = SEQ_OF(name='interFreqBandList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'InterFreqBandList')))
    _BandInfoEUTRA_interRAT_BandList = SEQ_OF(name='interRAT-BandList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'InterRAT-BandList')), opt=True)
    BandInfoEUTRA._cont = ASN1Dict([
        ('interFreqBandList', _BandInfoEUTRA_interFreqBandList),
        ('interRAT-BandList', _BandInfoEUTRA_interRAT_BandList),
        ])
    BandInfoEUTRA._ext = None
    
    #-----< InterFreqBandList >-----#
    InterFreqBandList = SEQ_OF(name='InterFreqBandList', mode=MODE_TYPE)
    _InterFreqBandList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'InterFreqBandInfo')))
    InterFreqBandList._cont = _InterFreqBandList__item_
    InterFreqBandList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< InterFreqBandInfo >-----#
    InterFreqBandInfo = SEQ(name='InterFreqBandInfo', mode=MODE_TYPE)
    _InterFreqBandInfo_interFreqNeedForGaps = BOOL(name='interFreqNeedForGaps', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    InterFreqBandInfo._cont = ASN1Dict([
        ('interFreqNeedForGaps', _InterFreqBandInfo_interFreqNeedForGaps),
        ])
    InterFreqBandInfo._ext = None
    
    #-----< InterRAT-BandList >-----#
    InterRAT_BandList = SEQ_OF(name='InterRAT-BandList', mode=MODE_TYPE)
    _InterRAT_BandList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'InterRAT-BandInfo')))
    InterRAT_BandList._cont = _InterRAT_BandList__item_
    InterRAT_BandList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< InterRAT-BandInfo >-----#
    InterRAT_BandInfo = SEQ(name='InterRAT-BandInfo', mode=MODE_TYPE)
    _InterRAT_BandInfo_interRAT_NeedForGaps = BOOL(name='interRAT-NeedForGaps', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    InterRAT_BandInfo._cont = ASN1Dict([
        ('interRAT-NeedForGaps', _InterRAT_BandInfo_interRAT_NeedForGaps),
        ])
    InterRAT_BandInfo._ext = None
    
    #-----< IRAT-ParametersUTRA-FDD >-----#
    IRAT_ParametersUTRA_FDD = SEQ(name='IRAT-ParametersUTRA-FDD', mode=MODE_TYPE)
    _IRAT_ParametersUTRA_FDD_supportedBandListUTRA_FDD = SEQ_OF(name='supportedBandListUTRA-FDD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandListUTRA-FDD')))
    IRAT_ParametersUTRA_FDD._cont = ASN1Dict([
        ('supportedBandListUTRA-FDD', _IRAT_ParametersUTRA_FDD_supportedBandListUTRA_FDD),
        ])
    IRAT_ParametersUTRA_FDD._ext = None
    
    #-----< SupportedBandListUTRA-FDD >-----#
    SupportedBandListUTRA_FDD = SEQ_OF(name='SupportedBandListUTRA-FDD', mode=MODE_TYPE)
    _SupportedBandListUTRA_FDD__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandUTRA-FDD')))
    SupportedBandListUTRA_FDD._cont = _SupportedBandListUTRA_FDD__item_
    SupportedBandListUTRA_FDD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< SupportedBandUTRA-FDD >-----#
    SupportedBandUTRA_FDD = ENUM(name='SupportedBandUTRA-FDD', mode=MODE_TYPE)
    SupportedBandUTRA_FDD._cont = ASN1Dict([('bandI', 0), ('bandII', 1), ('bandIII', 2), ('bandIV', 3), ('bandV', 4), ('bandVI', 5), ('bandVII', 6), ('bandVIII', 7), ('bandIX', 8), ('bandX', 9), ('bandXI', 10), ('bandXII', 11), ('bandXIII', 12), ('bandXIV', 13), ('bandXV', 14), ('bandXVI', 15), ('bandXVII-8a0', 16), ('bandXVIII-8a0', 17), ('bandXIX-8a0', 18), ('bandXX-8a0', 19), ('bandXXI-8a0', 20), ('bandXXII-8a0', 21), ('bandXXIII-8a0', 22), ('bandXXIV-8a0', 23), ('bandXXV-8a0', 24), ('bandXXVI-8a0', 25), ('bandXXVII-8a0', 26), ('bandXXVIII-8a0', 27), ('bandXXIX-8a0', 28), ('bandXXX-8a0', 29), ('bandXXXI-8a0', 30), ('bandXXXII-8a0', 31)])
    SupportedBandUTRA_FDD._ext = ['bandXVII-8a0', 'bandXVIII-8a0', 'bandXIX-8a0', 'bandXX-8a0', 'bandXXI-8a0', 'bandXXII-8a0', 'bandXXIII-8a0', 'bandXXIV-8a0', 'bandXXV-8a0', 'bandXXVI-8a0', 'bandXXVII-8a0', 'bandXXVIII-8a0', 'bandXXIX-8a0', 'bandXXX-8a0', 'bandXXXI-8a0', 'bandXXXII-8a0']
    
    #-----< IRAT-ParametersUTRA-TDD128 >-----#
    IRAT_ParametersUTRA_TDD128 = SEQ(name='IRAT-ParametersUTRA-TDD128', mode=MODE_TYPE)
    _IRAT_ParametersUTRA_TDD128_supportedBandListUTRA_TDD128 = SEQ_OF(name='supportedBandListUTRA-TDD128', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandListUTRA-TDD128')))
    IRAT_ParametersUTRA_TDD128._cont = ASN1Dict([
        ('supportedBandListUTRA-TDD128', _IRAT_ParametersUTRA_TDD128_supportedBandListUTRA_TDD128),
        ])
    IRAT_ParametersUTRA_TDD128._ext = None
    
    #-----< SupportedBandListUTRA-TDD128 >-----#
    SupportedBandListUTRA_TDD128 = SEQ_OF(name='SupportedBandListUTRA-TDD128', mode=MODE_TYPE)
    _SupportedBandListUTRA_TDD128__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandUTRA-TDD128')))
    SupportedBandListUTRA_TDD128._cont = _SupportedBandListUTRA_TDD128__item_
    SupportedBandListUTRA_TDD128._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< SupportedBandUTRA-TDD128 >-----#
    SupportedBandUTRA_TDD128 = ENUM(name='SupportedBandUTRA-TDD128', mode=MODE_TYPE)
    SupportedBandUTRA_TDD128._cont = ASN1Dict([('a', 0), ('b', 1), ('c', 2), ('d', 3), ('e', 4), ('f', 5), ('g', 6), ('h', 7), ('i', 8), ('j', 9), ('k', 10), ('l', 11), ('m', 12), ('n', 13), ('o', 14), ('p', 15)])
    SupportedBandUTRA_TDD128._ext = []
    
    #-----< IRAT-ParametersUTRA-TDD384 >-----#
    IRAT_ParametersUTRA_TDD384 = SEQ(name='IRAT-ParametersUTRA-TDD384', mode=MODE_TYPE)
    _IRAT_ParametersUTRA_TDD384_supportedBandListUTRA_TDD384 = SEQ_OF(name='supportedBandListUTRA-TDD384', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandListUTRA-TDD384')))
    IRAT_ParametersUTRA_TDD384._cont = ASN1Dict([
        ('supportedBandListUTRA-TDD384', _IRAT_ParametersUTRA_TDD384_supportedBandListUTRA_TDD384),
        ])
    IRAT_ParametersUTRA_TDD384._ext = None
    
    #-----< SupportedBandListUTRA-TDD384 >-----#
    SupportedBandListUTRA_TDD384 = SEQ_OF(name='SupportedBandListUTRA-TDD384', mode=MODE_TYPE)
    _SupportedBandListUTRA_TDD384__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandUTRA-TDD384')))
    SupportedBandListUTRA_TDD384._cont = _SupportedBandListUTRA_TDD384__item_
    SupportedBandListUTRA_TDD384._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< SupportedBandUTRA-TDD384 >-----#
    SupportedBandUTRA_TDD384 = ENUM(name='SupportedBandUTRA-TDD384', mode=MODE_TYPE)
    SupportedBandUTRA_TDD384._cont = ASN1Dict([('a', 0), ('b', 1), ('c', 2), ('d', 3), ('e', 4), ('f', 5), ('g', 6), ('h', 7), ('i', 8), ('j', 9), ('k', 10), ('l', 11), ('m', 12), ('n', 13), ('o', 14), ('p', 15)])
    SupportedBandUTRA_TDD384._ext = []
    
    #-----< IRAT-ParametersUTRA-TDD768 >-----#
    IRAT_ParametersUTRA_TDD768 = SEQ(name='IRAT-ParametersUTRA-TDD768', mode=MODE_TYPE)
    _IRAT_ParametersUTRA_TDD768_supportedBandListUTRA_TDD768 = SEQ_OF(name='supportedBandListUTRA-TDD768', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandListUTRA-TDD768')))
    IRAT_ParametersUTRA_TDD768._cont = ASN1Dict([
        ('supportedBandListUTRA-TDD768', _IRAT_ParametersUTRA_TDD768_supportedBandListUTRA_TDD768),
        ])
    IRAT_ParametersUTRA_TDD768._ext = None
    
    #-----< SupportedBandListUTRA-TDD768 >-----#
    SupportedBandListUTRA_TDD768 = SEQ_OF(name='SupportedBandListUTRA-TDD768', mode=MODE_TYPE)
    _SupportedBandListUTRA_TDD768__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandUTRA-TDD768')))
    SupportedBandListUTRA_TDD768._cont = _SupportedBandListUTRA_TDD768__item_
    SupportedBandListUTRA_TDD768._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< SupportedBandUTRA-TDD768 >-----#
    SupportedBandUTRA_TDD768 = ENUM(name='SupportedBandUTRA-TDD768', mode=MODE_TYPE)
    SupportedBandUTRA_TDD768._cont = ASN1Dict([('a', 0), ('b', 1), ('c', 2), ('d', 3), ('e', 4), ('f', 5), ('g', 6), ('h', 7), ('i', 8), ('j', 9), ('k', 10), ('l', 11), ('m', 12), ('n', 13), ('o', 14), ('p', 15)])
    SupportedBandUTRA_TDD768._ext = []
    
    #-----< IRAT-ParametersGERAN >-----#
    IRAT_ParametersGERAN = SEQ(name='IRAT-ParametersGERAN', mode=MODE_TYPE)
    _IRAT_ParametersGERAN_supportedBandListGERAN = SEQ_OF(name='supportedBandListGERAN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandListGERAN')))
    _IRAT_ParametersGERAN_interRAT_PS_HO_ToGERAN = BOOL(name='interRAT-PS-HO-ToGERAN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    IRAT_ParametersGERAN._cont = ASN1Dict([
        ('supportedBandListGERAN', _IRAT_ParametersGERAN_supportedBandListGERAN),
        ('interRAT-PS-HO-ToGERAN', _IRAT_ParametersGERAN_interRAT_PS_HO_ToGERAN),
        ])
    IRAT_ParametersGERAN._ext = None
    
    #-----< SupportedBandListGERAN >-----#
    SupportedBandListGERAN = SEQ_OF(name='SupportedBandListGERAN', mode=MODE_TYPE)
    _SupportedBandListGERAN__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandGERAN')))
    SupportedBandListGERAN._cont = _SupportedBandListGERAN__item_
    SupportedBandListGERAN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< SupportedBandGERAN >-----#
    SupportedBandGERAN = ENUM(name='SupportedBandGERAN', mode=MODE_TYPE)
    SupportedBandGERAN._cont = ASN1Dict([('gsm450', 0), ('gsm480', 1), ('gsm710', 2), ('gsm750', 3), ('gsm810', 4), ('gsm850', 5), ('gsm900P', 6), ('gsm900E', 7), ('gsm900R', 8), ('gsm1800', 9), ('gsm1900', 10), ('spare5', 11), ('spare4', 12), ('spare3', 13), ('spare2', 14), ('spare1', 15)])
    SupportedBandGERAN._ext = []
    
    #-----< IRAT-ParametersCDMA2000-HRPD >-----#
    IRAT_ParametersCDMA2000_HRPD = SEQ(name='IRAT-ParametersCDMA2000-HRPD', mode=MODE_TYPE)
    _IRAT_ParametersCDMA2000_HRPD_supportedBandListHRPD = SEQ_OF(name='supportedBandListHRPD', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandListHRPD')))
    _IRAT_ParametersCDMA2000_HRPD_tx_ConfigHRPD = ENUM(name='tx-ConfigHRPD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRAT_ParametersCDMA2000_HRPD_tx_ConfigHRPD._cont = ASN1Dict([('single', 0), ('dual', 1)])
    _IRAT_ParametersCDMA2000_HRPD_tx_ConfigHRPD._ext = None
    _IRAT_ParametersCDMA2000_HRPD_rx_ConfigHRPD = ENUM(name='rx-ConfigHRPD', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRAT_ParametersCDMA2000_HRPD_rx_ConfigHRPD._cont = ASN1Dict([('single', 0), ('dual', 1)])
    _IRAT_ParametersCDMA2000_HRPD_rx_ConfigHRPD._ext = None
    IRAT_ParametersCDMA2000_HRPD._cont = ASN1Dict([
        ('supportedBandListHRPD', _IRAT_ParametersCDMA2000_HRPD_supportedBandListHRPD),
        ('tx-ConfigHRPD', _IRAT_ParametersCDMA2000_HRPD_tx_ConfigHRPD),
        ('rx-ConfigHRPD', _IRAT_ParametersCDMA2000_HRPD_rx_ConfigHRPD),
        ])
    IRAT_ParametersCDMA2000_HRPD._ext = None
    
    #-----< SupportedBandListHRPD >-----#
    SupportedBandListHRPD = SEQ_OF(name='SupportedBandListHRPD', mode=MODE_TYPE)
    _SupportedBandListHRPD__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandclassCDMA2000')))
    SupportedBandListHRPD._cont = _SupportedBandListHRPD__item_
    SupportedBandListHRPD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< IRAT-ParametersCDMA2000-1XRTT >-----#
    IRAT_ParametersCDMA2000_1XRTT = SEQ(name='IRAT-ParametersCDMA2000-1XRTT', mode=MODE_TYPE)
    _IRAT_ParametersCDMA2000_1XRTT_supportedBandList1XRTT = SEQ_OF(name='supportedBandList1XRTT', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SupportedBandList1XRTT')))
    _IRAT_ParametersCDMA2000_1XRTT_tx_Config1XRTT = ENUM(name='tx-Config1XRTT', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRAT_ParametersCDMA2000_1XRTT_tx_Config1XRTT._cont = ASN1Dict([('single', 0), ('dual', 1)])
    _IRAT_ParametersCDMA2000_1XRTT_tx_Config1XRTT._ext = None
    _IRAT_ParametersCDMA2000_1XRTT_rx_Config1XRTT = ENUM(name='rx-Config1XRTT', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IRAT_ParametersCDMA2000_1XRTT_rx_Config1XRTT._cont = ASN1Dict([('single', 0), ('dual', 1)])
    _IRAT_ParametersCDMA2000_1XRTT_rx_Config1XRTT._ext = None
    IRAT_ParametersCDMA2000_1XRTT._cont = ASN1Dict([
        ('supportedBandList1XRTT', _IRAT_ParametersCDMA2000_1XRTT_supportedBandList1XRTT),
        ('tx-Config1XRTT', _IRAT_ParametersCDMA2000_1XRTT_tx_Config1XRTT),
        ('rx-Config1XRTT', _IRAT_ParametersCDMA2000_1XRTT_rx_Config1XRTT),
        ])
    IRAT_ParametersCDMA2000_1XRTT._ext = None
    
    #-----< SupportedBandList1XRTT >-----#
    SupportedBandList1XRTT = SEQ_OF(name='SupportedBandList1XRTT', mode=MODE_TYPE)
    _SupportedBandList1XRTT__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'BandclassCDMA2000')))
    SupportedBandList1XRTT._cont = _SupportedBandList1XRTT__item_
    SupportedBandList1XRTT._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< UE-TimersAndConstants >-----#
    UE_TimersAndConstants = SEQ(name='UE-TimersAndConstants', mode=MODE_TYPE)
    _UE_TimersAndConstants_t300 = ENUM(name='t300', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UE_TimersAndConstants_t300._cont = ASN1Dict([('ms100', 0), ('ms200', 1), ('ms300', 2), ('ms400', 3), ('ms600', 4), ('ms1000', 5), ('ms1500', 6), ('ms2000', 7)])
    _UE_TimersAndConstants_t300._ext = None
    _UE_TimersAndConstants_t301 = ENUM(name='t301', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UE_TimersAndConstants_t301._cont = ASN1Dict([('ms100', 0), ('ms200', 1), ('ms300', 2), ('ms400', 3), ('ms600', 4), ('ms1000', 5), ('ms1500', 6), ('ms2000', 7)])
    _UE_TimersAndConstants_t301._ext = None
    _UE_TimersAndConstants_t310 = ENUM(name='t310', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UE_TimersAndConstants_t310._cont = ASN1Dict([('ms0', 0), ('ms50', 1), ('ms100', 2), ('ms200', 3), ('ms500', 4), ('ms1000', 5), ('ms2000', 6)])
    _UE_TimersAndConstants_t310._ext = None
    _UE_TimersAndConstants_n310 = ENUM(name='n310', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UE_TimersAndConstants_n310._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n3', 2), ('n4', 3), ('n6', 4), ('n8', 5), ('n10', 6), ('n20', 7)])
    _UE_TimersAndConstants_n310._ext = None
    _UE_TimersAndConstants_t311 = ENUM(name='t311', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UE_TimersAndConstants_t311._cont = ASN1Dict([('ms1000', 0), ('ms3000', 1), ('ms5000', 2), ('ms10000', 3), ('ms15000', 4), ('ms20000', 5), ('ms30000', 6)])
    _UE_TimersAndConstants_t311._ext = None
    _UE_TimersAndConstants_n311 = ENUM(name='n311', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UE_TimersAndConstants_n311._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n3', 2), ('n4', 3), ('n5', 4), ('n6', 5), ('n8', 6), ('n10', 7)])
    _UE_TimersAndConstants_n311._ext = None
    UE_TimersAndConstants._cont = ASN1Dict([
        ('t300', _UE_TimersAndConstants_t300),
        ('t301', _UE_TimersAndConstants_t301),
        ('t310', _UE_TimersAndConstants_t310),
        ('n310', _UE_TimersAndConstants_n310),
        ('t311', _UE_TimersAndConstants_t311),
        ('n311', _UE_TimersAndConstants_n311),
        ])
    UE_TimersAndConstants._ext = []
    
    #-----< maxBands >-----#
    maxBands = INT(name='maxBands', mode=MODE_VALUE)
    maxBands._val = 64
    
    #-----< maxCDMA-BandClass >-----#
    maxCDMA_BandClass = INT(name='maxCDMA-BandClass', mode=MODE_VALUE)
    maxCDMA_BandClass._val = 32
    
    #-----< maxCellBlack >-----#
    maxCellBlack = INT(name='maxCellBlack', mode=MODE_VALUE)
    maxCellBlack._val = 16
    
    #-----< maxCellInter >-----#
    maxCellInter = INT(name='maxCellInter', mode=MODE_VALUE)
    maxCellInter._val = 16
    
    #-----< maxCellIntra >-----#
    maxCellIntra = INT(name='maxCellIntra', mode=MODE_VALUE)
    maxCellIntra._val = 16
    
    #-----< maxCellMeas >-----#
    maxCellMeas = INT(name='maxCellMeas', mode=MODE_VALUE)
    maxCellMeas._val = 32
    
    #-----< maxCellReport >-----#
    maxCellReport = INT(name='maxCellReport', mode=MODE_VALUE)
    maxCellReport._val = 8
    
    #-----< maxDRB >-----#
    maxDRB = INT(name='maxDRB', mode=MODE_VALUE)
    maxDRB._val = 11
    
    #-----< maxEARFCN >-----#
    maxEARFCN = INT(name='maxEARFCN', mode=MODE_VALUE)
    maxEARFCN._val = 65535
    
    #-----< maxFreq >-----#
    maxFreq = INT(name='maxFreq', mode=MODE_VALUE)
    maxFreq._val = 8
    
    #-----< maxGERAN-SI >-----#
    maxGERAN_SI = INT(name='maxGERAN-SI', mode=MODE_VALUE)
    maxGERAN_SI._val = 10
    
    #-----< maxGNFG >-----#
    maxGNFG = INT(name='maxGNFG', mode=MODE_VALUE)
    maxGNFG._val = 16
    
    #-----< maxMBSFN-Allocations >-----#
    maxMBSFN_Allocations = INT(name='maxMBSFN-Allocations', mode=MODE_VALUE)
    maxMBSFN_Allocations._val = 8
    
    #-----< maxMCS-1 >-----#
    maxMCS_1 = INT(name='maxMCS-1', mode=MODE_VALUE)
    maxMCS_1._val = 16
    
    #-----< maxMeasId >-----#
    maxMeasId = INT(name='maxMeasId', mode=MODE_VALUE)
    maxMeasId._val = 32
    
    #-----< maxObjectId >-----#
    maxObjectId = INT(name='maxObjectId', mode=MODE_VALUE)
    maxObjectId._val = 32
    
    #-----< maxPageRec >-----#
    maxPageRec = INT(name='maxPageRec', mode=MODE_VALUE)
    maxPageRec._val = 16
    
    #-----< maxPNOffset >-----#
    maxPNOffset = INT(name='maxPNOffset', mode=MODE_VALUE)
    maxPNOffset._val = 511
    
    #-----< maxRAT-Capabilities >-----#
    maxRAT_Capabilities = INT(name='maxRAT-Capabilities', mode=MODE_VALUE)
    maxRAT_Capabilities._val = 8
    
    #-----< maxReportConfigId >-----#
    maxReportConfigId = INT(name='maxReportConfigId', mode=MODE_VALUE)
    maxReportConfigId._val = 32
    
    #-----< maxSIB >-----#
    maxSIB = INT(name='maxSIB', mode=MODE_VALUE)
    maxSIB._val = 32
    
    #-----< maxSIB-1 >-----#
    maxSIB_1 = INT(name='maxSIB-1', mode=MODE_VALUE)
    maxSIB_1._val = 31
    
    #-----< maxSI-Message >-----#
    maxSI_Message = INT(name='maxSI-Message', mode=MODE_VALUE)
    maxSI_Message._val = 32
    
    #-----< maxUTRA-FDD-Carrier >-----#
    maxUTRA_FDD_Carrier = INT(name='maxUTRA-FDD-Carrier', mode=MODE_VALUE)
    maxUTRA_FDD_Carrier._val = 16
    
    #-----< maxUTRA-TDD-Carrier >-----#
    maxUTRA_TDD_Carrier = INT(name='maxUTRA-TDD-Carrier', mode=MODE_VALUE)
    maxUTRA_TDD_Carrier._val = 16
    
    _all_ = [
        _BCCH_BCH_Message_message,
        BCCH_BCH_Message,
        BCCH_BCH_MessageType,
        _BCCH_DL_SCH_Message_message,
        BCCH_DL_SCH_Message,
        __BCCH_DL_SCH_MessageType_c1_systemInformation,
        __BCCH_DL_SCH_MessageType_c1_systemInformationBlockType1,
        _BCCH_DL_SCH_MessageType_c1,
        _BCCH_DL_SCH_MessageType_messageClassExtension,
        BCCH_DL_SCH_MessageType,
        _PCCH_Message_message,
        PCCH_Message,
        __PCCH_MessageType_c1_paging,
        _PCCH_MessageType_c1,
        _PCCH_MessageType_messageClassExtension,
        PCCH_MessageType,
        _DL_CCCH_Message_message,
        DL_CCCH_Message,
        __DL_CCCH_MessageType_c1_rrcConnectionReestablishment,
        __DL_CCCH_MessageType_c1_rrcConnectionReestablishmentReject,
        __DL_CCCH_MessageType_c1_rrcConnectionReject,
        __DL_CCCH_MessageType_c1_rrcConnectionSetup,
        _DL_CCCH_MessageType_c1,
        _DL_CCCH_MessageType_messageClassExtension,
        DL_CCCH_MessageType,
        _DL_DCCH_Message_message,
        DL_DCCH_Message,
        __DL_DCCH_MessageType_c1_csfbParametersResponseCDMA2000,
        __DL_DCCH_MessageType_c1_dlInformationTransfer,
        __DL_DCCH_MessageType_c1_handoverFromEUTRAPreparationRequest,
        __DL_DCCH_MessageType_c1_mobilityFromEUTRACommand,
        __DL_DCCH_MessageType_c1_rrcConnectionReconfiguration,
        __DL_DCCH_MessageType_c1_rrcConnectionRelease,
        __DL_DCCH_MessageType_c1_securityModeCommand,
        __DL_DCCH_MessageType_c1_ueCapabilityEnquiry,
        __DL_DCCH_MessageType_c1_counterCheck,
        __DL_DCCH_MessageType_c1_spare7,
        __DL_DCCH_MessageType_c1_spare6,
        __DL_DCCH_MessageType_c1_spare5,
        __DL_DCCH_MessageType_c1_spare4,
        __DL_DCCH_MessageType_c1_spare3,
        __DL_DCCH_MessageType_c1_spare2,
        __DL_DCCH_MessageType_c1_spare1,
        _DL_DCCH_MessageType_c1,
        _DL_DCCH_MessageType_messageClassExtension,
        DL_DCCH_MessageType,
        _UL_CCCH_Message_message,
        UL_CCCH_Message,
        __UL_CCCH_MessageType_c1_rrcConnectionReestablishmentRequest,
        __UL_CCCH_MessageType_c1_rrcConnectionRequest,
        _UL_CCCH_MessageType_c1,
        _UL_CCCH_MessageType_messageClassExtension,
        UL_CCCH_MessageType,
        _UL_DCCH_Message_message,
        UL_DCCH_Message,
        __UL_DCCH_MessageType_c1_csfbParametersRequestCDMA2000,
        __UL_DCCH_MessageType_c1_measurementReport,
        __UL_DCCH_MessageType_c1_rrcConnectionReconfigurationComplete,
        __UL_DCCH_MessageType_c1_rrcConnectionReestablishmentComplete,
        __UL_DCCH_MessageType_c1_rrcConnectionSetupComplete,
        __UL_DCCH_MessageType_c1_securityModeComplete,
        __UL_DCCH_MessageType_c1_securityModeFailure,
        __UL_DCCH_MessageType_c1_ueCapabilityInformation,
        __UL_DCCH_MessageType_c1_ulHandoverPreparationTransfer,
        __UL_DCCH_MessageType_c1_ulInformationTransfer,
        __UL_DCCH_MessageType_c1_counterCheckResponse,
        __UL_DCCH_MessageType_c1_spare5,
        __UL_DCCH_MessageType_c1_spare4,
        __UL_DCCH_MessageType_c1_spare3,
        __UL_DCCH_MessageType_c1_spare2,
        __UL_DCCH_MessageType_c1_spare1,
        _UL_DCCH_MessageType_c1,
        _UL_DCCH_MessageType_messageClassExtension,
        UL_DCCH_MessageType,
        _CounterCheck_rrc_TransactionIdentifier,
        ___CounterCheck_criticalExtensions_c1_counterCheck_r8,
        ___CounterCheck_criticalExtensions_c1_spare3,
        ___CounterCheck_criticalExtensions_c1_spare2,
        ___CounterCheck_criticalExtensions_c1_spare1,
        __CounterCheck_criticalExtensions_c1,
        __CounterCheck_criticalExtensions_criticalExtensionsFuture,
        _CounterCheck_criticalExtensions,
        CounterCheck,
        _CounterCheck_r8_IEs_drb_CountMSB_InfoList,
        _CounterCheck_r8_IEs_nonCriticalExtension,
        CounterCheck_r8_IEs,
        _DRB_CountMSB_InfoList__item_,
        DRB_CountMSB_InfoList,
        _DRB_CountMSB_Info_drb_Identity,
        _DRB_CountMSB_Info_countMSB_Uplink,
        _DRB_CountMSB_Info_countMSB_Downlink,
        DRB_CountMSB_Info,
        _CounterCheckResponse_rrc_TransactionIdentifier,
        __CounterCheckResponse_criticalExtensions_counterCheckResponse_r8,
        __CounterCheckResponse_criticalExtensions_criticalExtensionsFuture,
        _CounterCheckResponse_criticalExtensions,
        CounterCheckResponse,
        _CounterCheckResponse_r8_IEs_drb_CountInfoList,
        _CounterCheckResponse_r8_IEs_nonCriticalExtension,
        CounterCheckResponse_r8_IEs,
        _DRB_CountInfoList__item_,
        DRB_CountInfoList,
        _DRB_CountInfo_drb_Identity,
        _DRB_CountInfo_count_Uplink,
        _DRB_CountInfo_count_Downlink,
        DRB_CountInfo,
        __CSFBParametersRequestCDMA2000_criticalExtensions_csfbParametersRequestCDMA2000_r8,
        __CSFBParametersRequestCDMA2000_criticalExtensions_criticalExtensionsFuture,
        _CSFBParametersRequestCDMA2000_criticalExtensions,
        CSFBParametersRequestCDMA2000,
        _CSFBParametersRequestCDMA2000_r8_IEs_nonCriticalExtension,
        CSFBParametersRequestCDMA2000_r8_IEs,
        _CSFBParametersResponseCDMA2000_rrc_TransactionIdentifier,
        __CSFBParametersResponseCDMA2000_criticalExtensions_csfbParametersResponseCDMA2000_r8,
        __CSFBParametersResponseCDMA2000_criticalExtensions_criticalExtensionsFuture,
        _CSFBParametersResponseCDMA2000_criticalExtensions,
        CSFBParametersResponseCDMA2000,
        _CSFBParametersResponseCDMA2000_r8_IEs_rand,
        _CSFBParametersResponseCDMA2000_r8_IEs_mobilityParameters,
        _CSFBParametersResponseCDMA2000_r8_IEs_nonCriticalExtension,
        CSFBParametersResponseCDMA2000_r8_IEs,
        _DLInformationTransfer_rrc_TransactionIdentifier,
        ___DLInformationTransfer_criticalExtensions_c1_dlInformationTransfer_r8,
        ___DLInformationTransfer_criticalExtensions_c1_spare3,
        ___DLInformationTransfer_criticalExtensions_c1_spare2,
        ___DLInformationTransfer_criticalExtensions_c1_spare1,
        __DLInformationTransfer_criticalExtensions_c1,
        __DLInformationTransfer_criticalExtensions_criticalExtensionsFuture,
        _DLInformationTransfer_criticalExtensions,
        DLInformationTransfer,
        __DLInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoNAS,
        __DLInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_1XRTT,
        __DLInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_HRPD,
        _DLInformationTransfer_r8_IEs_dedicatedInfoType,
        _DLInformationTransfer_r8_IEs_nonCriticalExtension,
        DLInformationTransfer_r8_IEs,
        _HandoverFromEUTRAPreparationRequest_rrc_TransactionIdentifier,
        ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_handoverFromEUTRAPreparationRequest_r8,
        ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_spare3,
        ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_spare2,
        ___HandoverFromEUTRAPreparationRequest_criticalExtensions_c1_spare1,
        __HandoverFromEUTRAPreparationRequest_criticalExtensions_c1,
        __HandoverFromEUTRAPreparationRequest_criticalExtensions_criticalExtensionsFuture,
        _HandoverFromEUTRAPreparationRequest_criticalExtensions,
        HandoverFromEUTRAPreparationRequest,
        _HandoverFromEUTRAPreparationRequest_r8_IEs_cdma2000_Type,
        _HandoverFromEUTRAPreparationRequest_r8_IEs_rand,
        _HandoverFromEUTRAPreparationRequest_r8_IEs_mobilityParameters,
        _HandoverFromEUTRAPreparationRequest_r8_IEs_nonCriticalExtension,
        HandoverFromEUTRAPreparationRequest_r8_IEs,
        _MasterInformationBlock_dl_Bandwidth,
        _MasterInformationBlock_phich_Config,
        _MasterInformationBlock_systemFrameNumber,
        _MasterInformationBlock_spare,
        MasterInformationBlock,
        ___MeasurementReport_criticalExtensions_c1_measurementReport_r8,
        ___MeasurementReport_criticalExtensions_c1_spare7,
        ___MeasurementReport_criticalExtensions_c1_spare6,
        ___MeasurementReport_criticalExtensions_c1_spare5,
        ___MeasurementReport_criticalExtensions_c1_spare4,
        ___MeasurementReport_criticalExtensions_c1_spare3,
        ___MeasurementReport_criticalExtensions_c1_spare2,
        ___MeasurementReport_criticalExtensions_c1_spare1,
        __MeasurementReport_criticalExtensions_c1,
        __MeasurementReport_criticalExtensions_criticalExtensionsFuture,
        _MeasurementReport_criticalExtensions,
        MeasurementReport,
        _MeasurementReport_r8_IEs_measResults,
        _MeasurementReport_r8_IEs_nonCriticalExtension,
        MeasurementReport_r8_IEs,
        _MobilityFromEUTRACommand_rrc_TransactionIdentifier,
        ___MobilityFromEUTRACommand_criticalExtensions_c1_mobilityFromEUTRACommand_r8,
        ___MobilityFromEUTRACommand_criticalExtensions_c1_spare3,
        ___MobilityFromEUTRACommand_criticalExtensions_c1_spare2,
        ___MobilityFromEUTRACommand_criticalExtensions_c1_spare1,
        __MobilityFromEUTRACommand_criticalExtensions_c1,
        __MobilityFromEUTRACommand_criticalExtensions_criticalExtensionsFuture,
        _MobilityFromEUTRACommand_criticalExtensions,
        MobilityFromEUTRACommand,
        _MobilityFromEUTRACommand_r8_IEs_cs_FallbackIndicator,
        __MobilityFromEUTRACommand_r8_IEs_purpose_handover,
        __MobilityFromEUTRACommand_r8_IEs_purpose_cellChangeOrder,
        _MobilityFromEUTRACommand_r8_IEs_purpose,
        _MobilityFromEUTRACommand_r8_IEs_nonCriticalExtension,
        MobilityFromEUTRACommand_r8_IEs,
        _Handover_targetRAT_Type,
        _Handover_targetRAT_MessageContainer,
        _Handover_nas_SecurityParamFromEUTRA,
        _Handover_systemInformation,
        Handover,
        _CellChangeOrder_t304,
        ___CellChangeOrder_targetRAT_Type_geran_physCellId,
        ___CellChangeOrder_targetRAT_Type_geran_carrierFreq,
        ___CellChangeOrder_targetRAT_Type_geran_networkControlOrder,
        ___CellChangeOrder_targetRAT_Type_geran_systemInformation,
        __CellChangeOrder_targetRAT_Type_geran,
        _CellChangeOrder_targetRAT_Type,
        CellChangeOrder,
        _SI_OrPSI_GERAN_si,
        _SI_OrPSI_GERAN_psi,
        SI_OrPSI_GERAN,
        _SystemInfoListGERAN__item_,
        SystemInfoListGERAN,
        _Paging_pagingRecordList,
        _Paging_systemInfoModification,
        _Paging_etws_Indication,
        _Paging_nonCriticalExtension,
        Paging,
        _PagingRecordList__item_,
        PagingRecordList,
        _PagingRecord_ue_Identity,
        _PagingRecord_cn_Domain,
        PagingRecord,
        _PagingUE_Identity_s_TMSI,
        _PagingUE_Identity_imsi,
        PagingUE_Identity,
        _IMSI__item_,
        IMSI,
        IMSI_Digit,
        _RRCConnectionReconfiguration_rrc_TransactionIdentifier,
        ___RRCConnectionReconfiguration_criticalExtensions_c1_rrcConnectionReconfiguration_r8,
        ___RRCConnectionReconfiguration_criticalExtensions_c1_spare7,
        ___RRCConnectionReconfiguration_criticalExtensions_c1_spare6,
        ___RRCConnectionReconfiguration_criticalExtensions_c1_spare5,
        ___RRCConnectionReconfiguration_criticalExtensions_c1_spare4,
        ___RRCConnectionReconfiguration_criticalExtensions_c1_spare3,
        ___RRCConnectionReconfiguration_criticalExtensions_c1_spare2,
        ___RRCConnectionReconfiguration_criticalExtensions_c1_spare1,
        __RRCConnectionReconfiguration_criticalExtensions_c1,
        __RRCConnectionReconfiguration_criticalExtensions_criticalExtensionsFuture,
        _RRCConnectionReconfiguration_criticalExtensions,
        RRCConnectionReconfiguration,
        _RRCConnectionReconfiguration_r8_IEs_measConfig,
        _RRCConnectionReconfiguration_r8_IEs_mobilityControlInfo,
        __RRCConnectionReconfiguration_r8_IEs_dedicatedInfoNASList__item_,
        _RRCConnectionReconfiguration_r8_IEs_dedicatedInfoNASList,
        _RRCConnectionReconfiguration_r8_IEs_radioResourceConfigDedicated,
        _RRCConnectionReconfiguration_r8_IEs_securityConfigHO,
        _RRCConnectionReconfiguration_r8_IEs_nonCriticalExtension,
        RRCConnectionReconfiguration_r8_IEs,
        ___SecurityConfigHO_handoverType_intraLTE_securityAlgorithmConfig,
        ___SecurityConfigHO_handoverType_intraLTE_keyChangeIndicator,
        ___SecurityConfigHO_handoverType_intraLTE_nextHopChainingCount,
        __SecurityConfigHO_handoverType_intraLTE,
        ___SecurityConfigHO_handoverType_interRAT_securityAlgorithmConfig,
        ___SecurityConfigHO_handoverType_interRAT_nas_SecurityParamToEUTRA,
        __SecurityConfigHO_handoverType_interRAT,
        _SecurityConfigHO_handoverType,
        SecurityConfigHO,
        _RRCConnectionReconfigurationComplete_rrc_TransactionIdentifier,
        __RRCConnectionReconfigurationComplete_criticalExtensions_rrcConnectionReconfigurationComplete_r8,
        __RRCConnectionReconfigurationComplete_criticalExtensions_criticalExtensionsFuture,
        _RRCConnectionReconfigurationComplete_criticalExtensions,
        RRCConnectionReconfigurationComplete,
        _RRCConnectionReconfigurationComplete_r8_IEs_nonCriticalExtension,
        RRCConnectionReconfigurationComplete_r8_IEs,
        _RRCConnectionReestablishment_rrc_TransactionIdentifier,
        ___RRCConnectionReestablishment_criticalExtensions_c1_rrcConnectionReestablishment_r8,
        ___RRCConnectionReestablishment_criticalExtensions_c1_spare7,
        ___RRCConnectionReestablishment_criticalExtensions_c1_spare6,
        ___RRCConnectionReestablishment_criticalExtensions_c1_spare5,
        ___RRCConnectionReestablishment_criticalExtensions_c1_spare4,
        ___RRCConnectionReestablishment_criticalExtensions_c1_spare3,
        ___RRCConnectionReestablishment_criticalExtensions_c1_spare2,
        ___RRCConnectionReestablishment_criticalExtensions_c1_spare1,
        __RRCConnectionReestablishment_criticalExtensions_c1,
        __RRCConnectionReestablishment_criticalExtensions_criticalExtensionsFuture,
        _RRCConnectionReestablishment_criticalExtensions,
        RRCConnectionReestablishment,
        _RRCConnectionReestablishment_r8_IEs_radioResourceConfigDedicated,
        _RRCConnectionReestablishment_r8_IEs_nextHopChainingCount,
        _RRCConnectionReestablishment_r8_IEs_nonCriticalExtension,
        RRCConnectionReestablishment_r8_IEs,
        _RRCConnectionReestablishmentComplete_rrc_TransactionIdentifier,
        __RRCConnectionReestablishmentComplete_criticalExtensions_rrcConnectionReestablishmentComplete_r8,
        __RRCConnectionReestablishmentComplete_criticalExtensions_criticalExtensionsFuture,
        _RRCConnectionReestablishmentComplete_criticalExtensions,
        RRCConnectionReestablishmentComplete,
        _RRCConnectionReestablishmentComplete_r8_IEs_nonCriticalExtension,
        RRCConnectionReestablishmentComplete_r8_IEs,
        __RRCConnectionReestablishmentReject_criticalExtensions_rrcConnectionReestablishmentReject_r8,
        __RRCConnectionReestablishmentReject_criticalExtensions_criticalExtensionsFuture,
        _RRCConnectionReestablishmentReject_criticalExtensions,
        RRCConnectionReestablishmentReject,
        _RRCConnectionReestablishmentReject_r8_IEs_nonCriticalExtension,
        RRCConnectionReestablishmentReject_r8_IEs,
        __RRCConnectionReestablishmentRequest_criticalExtensions_rrcConnectionReestablishmentRequest_r8,
        __RRCConnectionReestablishmentRequest_criticalExtensions_criticalExtensionsFuture,
        _RRCConnectionReestablishmentRequest_criticalExtensions,
        RRCConnectionReestablishmentRequest,
        _RRCConnectionReestablishmentRequest_r8_IEs_ue_Identity,
        _RRCConnectionReestablishmentRequest_r8_IEs_reestablishmentCause,
        _RRCConnectionReestablishmentRequest_r8_IEs_spare,
        RRCConnectionReestablishmentRequest_r8_IEs,
        _ReestabUE_Identity_c_RNTI,
        _ReestabUE_Identity_physCellId,
        _ReestabUE_Identity_shortMAC_I,
        ReestabUE_Identity,
        ReestablishmentCause,
        ___RRCConnectionReject_criticalExtensions_c1_rrcConnectionReject_r8,
        ___RRCConnectionReject_criticalExtensions_c1_spare3,
        ___RRCConnectionReject_criticalExtensions_c1_spare2,
        ___RRCConnectionReject_criticalExtensions_c1_spare1,
        __RRCConnectionReject_criticalExtensions_c1,
        __RRCConnectionReject_criticalExtensions_criticalExtensionsFuture,
        _RRCConnectionReject_criticalExtensions,
        RRCConnectionReject,
        _RRCConnectionReject_r8_IEs_waitTime,
        _RRCConnectionReject_r8_IEs_nonCriticalExtension,
        RRCConnectionReject_r8_IEs,
        _RRCConnectionRelease_rrc_TransactionIdentifier,
        ___RRCConnectionRelease_criticalExtensions_c1_rrcConnectionRelease_r8,
        ___RRCConnectionRelease_criticalExtensions_c1_spare3,
        ___RRCConnectionRelease_criticalExtensions_c1_spare2,
        ___RRCConnectionRelease_criticalExtensions_c1_spare1,
        __RRCConnectionRelease_criticalExtensions_c1,
        __RRCConnectionRelease_criticalExtensions_criticalExtensionsFuture,
        _RRCConnectionRelease_criticalExtensions,
        RRCConnectionRelease,
        _RRCConnectionRelease_r8_IEs_releaseCause,
        _RRCConnectionRelease_r8_IEs_redirectedCarrierInfo,
        _RRCConnectionRelease_r8_IEs_idleModeMobilityControlInfo,
        _RRCConnectionRelease_r8_IEs_nonCriticalExtension,
        RRCConnectionRelease_r8_IEs,
        ReleaseCause,
        _RedirectedCarrierInfo_eutra,
        _RedirectedCarrierInfo_geran,
        _RedirectedCarrierInfo_utra_FDD,
        _RedirectedCarrierInfo_utra_TDD,
        _RedirectedCarrierInfo_cdma2000_HRPD,
        _RedirectedCarrierInfo_cdma2000_1xRTT,
        RedirectedCarrierInfo,
        _IdleModeMobilityControlInfo_freqPriorityListEUTRA,
        _IdleModeMobilityControlInfo_freqPriorityListGERAN,
        _IdleModeMobilityControlInfo_freqPriorityListUTRA_FDD,
        _IdleModeMobilityControlInfo_freqPriorityListUTRA_TDD,
        _IdleModeMobilityControlInfo_bandClassPriorityListHRPD,
        _IdleModeMobilityControlInfo_bandClassPriorityList1XRTT,
        _IdleModeMobilityControlInfo_t320,
        IdleModeMobilityControlInfo,
        _FreqPriorityListEUTRA__item_,
        FreqPriorityListEUTRA,
        _FreqPriorityEUTRA_carrierFreq,
        _FreqPriorityEUTRA_cellReselectionPriority,
        FreqPriorityEUTRA,
        _FreqsPriorityListGERAN__item_,
        FreqsPriorityListGERAN,
        _FreqsPriorityGERAN_carrierFreqs,
        _FreqsPriorityGERAN_cellReselectionPriority,
        FreqsPriorityGERAN,
        _FreqPriorityListUTRA_FDD__item_,
        FreqPriorityListUTRA_FDD,
        _FreqPriorityUTRA_FDD_carrierFreq,
        _FreqPriorityUTRA_FDD_cellReselectionPriority,
        FreqPriorityUTRA_FDD,
        _FreqPriorityListUTRA_TDD__item_,
        FreqPriorityListUTRA_TDD,
        _FreqPriorityUTRA_TDD_carrierFreq,
        _FreqPriorityUTRA_TDD_cellReselectionPriority,
        FreqPriorityUTRA_TDD,
        _BandClassPriorityListHRPD__item_,
        BandClassPriorityListHRPD,
        _BandClassPriorityHRPD_bandClass,
        _BandClassPriorityHRPD_cellReselectionPriority,
        BandClassPriorityHRPD,
        _BandClassPriorityList1XRTT__item_,
        BandClassPriorityList1XRTT,
        _BandClassPriority1XRTT_bandClass,
        _BandClassPriority1XRTT_cellReselectionPriority,
        BandClassPriority1XRTT,
        __RRCConnectionRequest_criticalExtensions_rrcConnectionRequest_r8,
        __RRCConnectionRequest_criticalExtensions_criticalExtensionsFuture,
        _RRCConnectionRequest_criticalExtensions,
        RRCConnectionRequest,
        _RRCConnectionRequest_r8_IEs_ue_Identity,
        _RRCConnectionRequest_r8_IEs_establishmentCause,
        _RRCConnectionRequest_r8_IEs_spare,
        RRCConnectionRequest_r8_IEs,
        _InitialUE_Identity_s_TMSI,
        _InitialUE_Identity_randomValue,
        InitialUE_Identity,
        EstablishmentCause,
        _RRCConnectionSetup_rrc_TransactionIdentifier,
        ___RRCConnectionSetup_criticalExtensions_c1_rrcConnectionSetup_r8,
        ___RRCConnectionSetup_criticalExtensions_c1_spare7,
        ___RRCConnectionSetup_criticalExtensions_c1_spare6,
        ___RRCConnectionSetup_criticalExtensions_c1_spare5,
        ___RRCConnectionSetup_criticalExtensions_c1_spare4,
        ___RRCConnectionSetup_criticalExtensions_c1_spare3,
        ___RRCConnectionSetup_criticalExtensions_c1_spare2,
        ___RRCConnectionSetup_criticalExtensions_c1_spare1,
        __RRCConnectionSetup_criticalExtensions_c1,
        __RRCConnectionSetup_criticalExtensions_criticalExtensionsFuture,
        _RRCConnectionSetup_criticalExtensions,
        RRCConnectionSetup,
        _RRCConnectionSetup_r8_IEs_radioResourceConfigDedicated,
        _RRCConnectionSetup_r8_IEs_nonCriticalExtension,
        RRCConnectionSetup_r8_IEs,
        _RRCConnectionSetupComplete_rrc_TransactionIdentifier,
        ___RRCConnectionSetupComplete_criticalExtensions_c1_rrcConnectionSetupComplete_r8,
        ___RRCConnectionSetupComplete_criticalExtensions_c1_spare3,
        ___RRCConnectionSetupComplete_criticalExtensions_c1_spare2,
        ___RRCConnectionSetupComplete_criticalExtensions_c1_spare1,
        __RRCConnectionSetupComplete_criticalExtensions_c1,
        __RRCConnectionSetupComplete_criticalExtensions_criticalExtensionsFuture,
        _RRCConnectionSetupComplete_criticalExtensions,
        RRCConnectionSetupComplete,
        _RRCConnectionSetupComplete_r8_IEs_selectedPLMN_Identity,
        _RRCConnectionSetupComplete_r8_IEs_registeredMME,
        _RRCConnectionSetupComplete_r8_IEs_dedicatedInfoNAS,
        _RRCConnectionSetupComplete_r8_IEs_nonCriticalExtension,
        RRCConnectionSetupComplete_r8_IEs,
        _RegisteredMME_plmn_Identity,
        _RegisteredMME_mmegi,
        _RegisteredMME_mmec,
        RegisteredMME,
        _SecurityModeCommand_rrc_TransactionIdentifier,
        ___SecurityModeCommand_criticalExtensions_c1_securityModeCommand_r8,
        ___SecurityModeCommand_criticalExtensions_c1_spare3,
        ___SecurityModeCommand_criticalExtensions_c1_spare2,
        ___SecurityModeCommand_criticalExtensions_c1_spare1,
        __SecurityModeCommand_criticalExtensions_c1,
        __SecurityModeCommand_criticalExtensions_criticalExtensionsFuture,
        _SecurityModeCommand_criticalExtensions,
        SecurityModeCommand,
        _SecurityModeCommand_r8_IEs_securityConfigSMC,
        _SecurityModeCommand_r8_IEs_nonCriticalExtension,
        SecurityModeCommand_r8_IEs,
        _SecurityConfigSMC_securityAlgorithmConfig,
        SecurityConfigSMC,
        _SecurityModeComplete_rrc_TransactionIdentifier,
        __SecurityModeComplete_criticalExtensions_securityModeComplete_r8,
        __SecurityModeComplete_criticalExtensions_criticalExtensionsFuture,
        _SecurityModeComplete_criticalExtensions,
        SecurityModeComplete,
        _SecurityModeComplete_r8_IEs_nonCriticalExtension,
        SecurityModeComplete_r8_IEs,
        _SecurityModeFailure_rrc_TransactionIdentifier,
        __SecurityModeFailure_criticalExtensions_securityModeFailure_r8,
        __SecurityModeFailure_criticalExtensions_criticalExtensionsFuture,
        _SecurityModeFailure_criticalExtensions,
        SecurityModeFailure,
        _SecurityModeFailure_r8_IEs_nonCriticalExtension,
        SecurityModeFailure_r8_IEs,
        __SystemInformation_criticalExtensions_systemInformation_r8,
        __SystemInformation_criticalExtensions_criticalExtensionsFuture,
        _SystemInformation_criticalExtensions,
        SystemInformation,
        ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib2,
        ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib3,
        ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib4,
        ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib5,
        ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib6,
        ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib7,
        ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib8,
        ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib9,
        ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib10,
        ___SystemInformation_r8_IEs_sib_TypeAndInfo__item__sib11,
        __SystemInformation_r8_IEs_sib_TypeAndInfo__item_,
        _SystemInformation_r8_IEs_sib_TypeAndInfo,
        _SystemInformation_r8_IEs_nonCriticalExtension,
        SystemInformation_r8_IEs,
        __SystemInformationBlockType1_cellAccessRelatedInfo_plmn_IdentityList,
        __SystemInformationBlockType1_cellAccessRelatedInfo_trackingAreaCode,
        __SystemInformationBlockType1_cellAccessRelatedInfo_cellIdentity,
        __SystemInformationBlockType1_cellAccessRelatedInfo_cellBarred,
        __SystemInformationBlockType1_cellAccessRelatedInfo_intraFreqReselection,
        __SystemInformationBlockType1_cellAccessRelatedInfo_csg_Indication,
        __SystemInformationBlockType1_cellAccessRelatedInfo_csg_Identity,
        _SystemInformationBlockType1_cellAccessRelatedInfo,
        __SystemInformationBlockType1_cellSelectionInfo_q_RxLevMin,
        __SystemInformationBlockType1_cellSelectionInfo_q_RxLevMinOffset,
        _SystemInformationBlockType1_cellSelectionInfo,
        _SystemInformationBlockType1_p_Max,
        _SystemInformationBlockType1_freqBandIndicator,
        _SystemInformationBlockType1_schedulingInfoList,
        _SystemInformationBlockType1_tdd_Config,
        _SystemInformationBlockType1_si_WindowLength,
        _SystemInformationBlockType1_systemInfoValueTag,
        _SystemInformationBlockType1_nonCriticalExtension,
        SystemInformationBlockType1,
        _PLMN_IdentityList__item_,
        PLMN_IdentityList,
        _PLMN_IdentityInfo_plmn_Identity,
        _PLMN_IdentityInfo_cellReservedForOperatorUse,
        PLMN_IdentityInfo,
        _SchedulingInfoList__item_,
        SchedulingInfoList,
        _SchedulingInfo_si_Periodicity,
        _SchedulingInfo_sib_MappingInfo,
        SchedulingInfo,
        _SIB_MappingInfo__item_,
        SIB_MappingInfo,
        SIB_Type,
        _UECapabilityEnquiry_rrc_TransactionIdentifier,
        ___UECapabilityEnquiry_criticalExtensions_c1_ueCapabilityEnquiry_r8,
        ___UECapabilityEnquiry_criticalExtensions_c1_spare3,
        ___UECapabilityEnquiry_criticalExtensions_c1_spare2,
        ___UECapabilityEnquiry_criticalExtensions_c1_spare1,
        __UECapabilityEnquiry_criticalExtensions_c1,
        __UECapabilityEnquiry_criticalExtensions_criticalExtensionsFuture,
        _UECapabilityEnquiry_criticalExtensions,
        UECapabilityEnquiry,
        _UECapabilityEnquiry_r8_IEs_ue_CapabilityRequest,
        _UECapabilityEnquiry_r8_IEs_nonCriticalExtension,
        UECapabilityEnquiry_r8_IEs,
        _UE_CapabilityRequest__item_,
        UE_CapabilityRequest,
        _UECapabilityInformation_rrc_TransactionIdentifier,
        ___UECapabilityInformation_criticalExtensions_c1_ueCapabilityInformation_r8,
        ___UECapabilityInformation_criticalExtensions_c1_spare7,
        ___UECapabilityInformation_criticalExtensions_c1_spare6,
        ___UECapabilityInformation_criticalExtensions_c1_spare5,
        ___UECapabilityInformation_criticalExtensions_c1_spare4,
        ___UECapabilityInformation_criticalExtensions_c1_spare3,
        ___UECapabilityInformation_criticalExtensions_c1_spare2,
        ___UECapabilityInformation_criticalExtensions_c1_spare1,
        __UECapabilityInformation_criticalExtensions_c1,
        __UECapabilityInformation_criticalExtensions_criticalExtensionsFuture,
        _UECapabilityInformation_criticalExtensions,
        UECapabilityInformation,
        _UECapabilityInformation_r8_IEs_ue_CapabilityRAT_ContainerList,
        _UECapabilityInformation_r8_IEs_nonCriticalExtension,
        UECapabilityInformation_r8_IEs,
        ___ULHandoverPreparationTransfer_criticalExtensions_c1_ulHandoverPreparationTransfer_r8,
        ___ULHandoverPreparationTransfer_criticalExtensions_c1_spare3,
        ___ULHandoverPreparationTransfer_criticalExtensions_c1_spare2,
        ___ULHandoverPreparationTransfer_criticalExtensions_c1_spare1,
        __ULHandoverPreparationTransfer_criticalExtensions_c1,
        __ULHandoverPreparationTransfer_criticalExtensions_criticalExtensionsFuture,
        _ULHandoverPreparationTransfer_criticalExtensions,
        ULHandoverPreparationTransfer,
        _ULHandoverPreparationTransfer_r8_IEs_cdma2000_Type,
        _ULHandoverPreparationTransfer_r8_IEs_meid,
        _ULHandoverPreparationTransfer_r8_IEs_dedicatedInfo,
        _ULHandoverPreparationTransfer_r8_IEs_nonCriticalExtension,
        ULHandoverPreparationTransfer_r8_IEs,
        ___ULInformationTransfer_criticalExtensions_c1_ulInformationTransfer_r8,
        ___ULInformationTransfer_criticalExtensions_c1_spare3,
        ___ULInformationTransfer_criticalExtensions_c1_spare2,
        ___ULInformationTransfer_criticalExtensions_c1_spare1,
        __ULInformationTransfer_criticalExtensions_c1,
        __ULInformationTransfer_criticalExtensions_criticalExtensionsFuture,
        _ULInformationTransfer_criticalExtensions,
        ULInformationTransfer,
        __ULInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoNAS,
        __ULInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_1XRTT,
        __ULInformationTransfer_r8_IEs_dedicatedInfoType_dedicatedInfoCDMA2000_HRPD,
        _ULInformationTransfer_r8_IEs_dedicatedInfoType,
        _ULInformationTransfer_r8_IEs_nonCriticalExtension,
        ULInformationTransfer_r8_IEs,
        __SystemInformationBlockType2_ac_BarringInfo_ac_BarringForEmergency,
        __SystemInformationBlockType2_ac_BarringInfo_ac_BarringForMO_Signalling,
        __SystemInformationBlockType2_ac_BarringInfo_ac_BarringForMO_Data,
        _SystemInformationBlockType2_ac_BarringInfo,
        _SystemInformationBlockType2_radioResourceConfigCommon,
        _SystemInformationBlockType2_ue_TimersAndConstants,
        __SystemInformationBlockType2_freqInfo_ul_CarrierFreq,
        __SystemInformationBlockType2_freqInfo_ul_Bandwidth,
        __SystemInformationBlockType2_freqInfo_additionalSpectrumEmission,
        _SystemInformationBlockType2_freqInfo,
        _SystemInformationBlockType2_mbsfn_SubframeConfigList,
        _SystemInformationBlockType2_timeAlignmentTimerCommon,
        SystemInformationBlockType2,
        _AC_BarringConfig_ac_BarringFactor,
        _AC_BarringConfig_ac_BarringTime,
        _AC_BarringConfig_ac_BarringForSpecialAC,
        AC_BarringConfig,
        _MBSFN_SubframeConfigList__item_,
        MBSFN_SubframeConfigList,
        _MBSFN_SubframeConfig_radioframeAllocationPeriod,
        _MBSFN_SubframeConfig_radioframeAllocationOffset,
        __MBSFN_SubframeConfig_subframeAllocation_oneFrame,
        __MBSFN_SubframeConfig_subframeAllocation_fourFrames,
        _MBSFN_SubframeConfig_subframeAllocation,
        MBSFN_SubframeConfig,
        __SystemInformationBlockType3_cellReselectionInfoCommon_q_Hyst,
        ___SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_mobilityStateParameters,
        ____SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF_sf_Medium,
        ____SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF_sf_High,
        ___SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars_q_HystSF,
        __SystemInformationBlockType3_cellReselectionInfoCommon_speedStateReselectionPars,
        _SystemInformationBlockType3_cellReselectionInfoCommon,
        __SystemInformationBlockType3_cellReselectionServingFreqInfo_s_NonIntraSearch,
        __SystemInformationBlockType3_cellReselectionServingFreqInfo_threshServingLow,
        __SystemInformationBlockType3_cellReselectionServingFreqInfo_cellReselectionPriority,
        _SystemInformationBlockType3_cellReselectionServingFreqInfo,
        __SystemInformationBlockType3_intraFreqCellReselectionInfo_q_RxLevMin,
        __SystemInformationBlockType3_intraFreqCellReselectionInfo_p_Max,
        __SystemInformationBlockType3_intraFreqCellReselectionInfo_s_IntraSearch,
        __SystemInformationBlockType3_intraFreqCellReselectionInfo_allowedMeasBandwidth,
        __SystemInformationBlockType3_intraFreqCellReselectionInfo_presenceAntennaPort1,
        __SystemInformationBlockType3_intraFreqCellReselectionInfo_neighCellConfig,
        __SystemInformationBlockType3_intraFreqCellReselectionInfo_t_ReselectionEUTRA,
        __SystemInformationBlockType3_intraFreqCellReselectionInfo_t_ReselectionEUTRA_SF,
        _SystemInformationBlockType3_intraFreqCellReselectionInfo,
        SystemInformationBlockType3,
        _SystemInformationBlockType4_intraFreqNeighCellList,
        _SystemInformationBlockType4_intraFreqBlackCellList,
        _SystemInformationBlockType4_csg_PhysCellIdRange,
        SystemInformationBlockType4,
        _IntraFreqNeighCellList__item_,
        IntraFreqNeighCellList,
        _IntraFreqNeighCellInfo_physCellId,
        _IntraFreqNeighCellInfo_q_OffsetCell,
        IntraFreqNeighCellInfo,
        _IntraFreqBlackCellList__item_,
        IntraFreqBlackCellList,
        _SystemInformationBlockType5_interFreqCarrierFreqList,
        SystemInformationBlockType5,
        _InterFreqCarrierFreqList__item_,
        InterFreqCarrierFreqList,
        _InterFreqCarrierFreqInfo_dl_CarrierFreq,
        _InterFreqCarrierFreqInfo_q_RxLevMin,
        _InterFreqCarrierFreqInfo_p_Max,
        _InterFreqCarrierFreqInfo_t_ReselectionEUTRA,
        _InterFreqCarrierFreqInfo_t_ReselectionEUTRA_SF,
        _InterFreqCarrierFreqInfo_threshX_High,
        _InterFreqCarrierFreqInfo_threshX_Low,
        _InterFreqCarrierFreqInfo_allowedMeasBandwidth,
        _InterFreqCarrierFreqInfo_presenceAntennaPort1,
        _InterFreqCarrierFreqInfo_cellReselectionPriority,
        _InterFreqCarrierFreqInfo_neighCellConfig,
        _InterFreqCarrierFreqInfo_q_OffsetFreq,
        _InterFreqCarrierFreqInfo_interFreqNeighCellList,
        _InterFreqCarrierFreqInfo_interFreqBlackCellList,
        InterFreqCarrierFreqInfo,
        _InterFreqNeighCellList__item_,
        InterFreqNeighCellList,
        _InterFreqNeighCellInfo_physCellId,
        _InterFreqNeighCellInfo_q_OffsetCell,
        InterFreqNeighCellInfo,
        _InterFreqBlackCellList__item_,
        InterFreqBlackCellList,
        _SystemInformationBlockType6_carrierFreqListUTRA_FDD,
        _SystemInformationBlockType6_carrierFreqListUTRA_TDD,
        _SystemInformationBlockType6_t_ReselectionUTRA,
        _SystemInformationBlockType6_t_ReselectionUTRA_SF,
        SystemInformationBlockType6,
        _CarrierFreqListUTRA_FDD__item_,
        CarrierFreqListUTRA_FDD,
        _CarrierFreqUTRA_FDD_carrierFreq,
        _CarrierFreqUTRA_FDD_cellReselectionPriority,
        _CarrierFreqUTRA_FDD_threshX_High,
        _CarrierFreqUTRA_FDD_threshX_Low,
        _CarrierFreqUTRA_FDD_q_RxLevMin,
        _CarrierFreqUTRA_FDD_p_MaxUTRA,
        _CarrierFreqUTRA_FDD_q_QualMin,
        CarrierFreqUTRA_FDD,
        _CarrierFreqListUTRA_TDD__item_,
        CarrierFreqListUTRA_TDD,
        _CarrierFreqUTRA_TDD_carrierFreq,
        _CarrierFreqUTRA_TDD_cellReselectionPriority,
        _CarrierFreqUTRA_TDD_threshX_High,
        _CarrierFreqUTRA_TDD_threshX_Low,
        _CarrierFreqUTRA_TDD_q_RxLevMin,
        _CarrierFreqUTRA_TDD_p_MaxUTRA,
        CarrierFreqUTRA_TDD,
        _SystemInformationBlockType7_t_ReselectionGERAN,
        _SystemInformationBlockType7_t_ReselectionGERAN_SF,
        _SystemInformationBlockType7_carrierFreqsInfoList,
        SystemInformationBlockType7,
        _CarrierFreqsInfoListGERAN__item_,
        CarrierFreqsInfoListGERAN,
        _CarrierFreqsInfoGERAN_carrierFreqs,
        __CarrierFreqsInfoGERAN_commonInfo_cellReselectionPriority,
        __CarrierFreqsInfoGERAN_commonInfo_ncc_Permitted,
        __CarrierFreqsInfoGERAN_commonInfo_q_RxLevMin,
        __CarrierFreqsInfoGERAN_commonInfo_p_MaxGERAN,
        __CarrierFreqsInfoGERAN_commonInfo_threshX_High,
        __CarrierFreqsInfoGERAN_commonInfo_threshX_Low,
        _CarrierFreqsInfoGERAN_commonInfo,
        CarrierFreqsInfoGERAN,
        _SystemInformationBlockType8_systemTimeInfo,
        _SystemInformationBlockType8_searchWindowSize,
        __SystemInformationBlockType8_parametersHRPD_preRegistrationInfoHRPD,
        __SystemInformationBlockType8_parametersHRPD_cellReselectionParametersHRPD,
        _SystemInformationBlockType8_parametersHRPD,
        __SystemInformationBlockType8_parameters1XRTT_csfb_RegistrationParam1XRTT,
        __SystemInformationBlockType8_parameters1XRTT_longCodeState1XRTT,
        __SystemInformationBlockType8_parameters1XRTT_cellReselectionParameters1XRTT,
        _SystemInformationBlockType8_parameters1XRTT,
        SystemInformationBlockType8,
        _CellReselectionParametersCDMA2000_bandClassList,
        _CellReselectionParametersCDMA2000_neighCellList,
        _CellReselectionParametersCDMA2000_t_ReselectionCDMA2000,
        _CellReselectionParametersCDMA2000_t_ReselectionCDMA2000_SF,
        CellReselectionParametersCDMA2000,
        _NeighCellListCDMA2000__item_,
        NeighCellListCDMA2000,
        _NeighCellCDMA2000_bandClass,
        _NeighCellCDMA2000_neighCellsPerFreqList,
        NeighCellCDMA2000,
        _NeighCellsPerBandclassListCDMA2000__item_,
        NeighCellsPerBandclassListCDMA2000,
        _NeighCellsPerBandclassCDMA2000_arfcn,
        _NeighCellsPerBandclassCDMA2000_physCellIdList,
        NeighCellsPerBandclassCDMA2000,
        _PhysCellIdListCDMA2000__item_,
        PhysCellIdListCDMA2000,
        _BandClassListCDMA2000__item_,
        BandClassListCDMA2000,
        _BandClassInfoCDMA2000_bandClass,
        _BandClassInfoCDMA2000_cellReselectionPriority,
        _BandClassInfoCDMA2000_threshX_High,
        _BandClassInfoCDMA2000_threshX_Low,
        BandClassInfoCDMA2000,
        _SystemInformationBlockType9_hnb_Name,
        SystemInformationBlockType9,
        _SystemInformationBlockType10_messageIdentifier,
        _SystemInformationBlockType10_serialNumber,
        _SystemInformationBlockType10_warningType,
        _SystemInformationBlockType10_warningSecurityInfo,
        SystemInformationBlockType10,
        _SystemInformationBlockType11_messageIdentifier,
        _SystemInformationBlockType11_serialNumber,
        _SystemInformationBlockType11_warningMessageSegmentType,
        _SystemInformationBlockType11_warningMessageSegmentNumber,
        _SystemInformationBlockType11_warningMessageSegment,
        _SystemInformationBlockType11_dataCodingScheme,
        SystemInformationBlockType11,
        _AntennaInfoCommon_antennaPortsCount,
        AntennaInfoCommon,
        _AntennaInfoDedicated_transmissionMode,
        __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm3,
        __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm3,
        __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm4,
        __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm4,
        __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm5,
        __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm5,
        __AntennaInfoDedicated_codebookSubsetRestriction_n2TxAntenna_tm6,
        __AntennaInfoDedicated_codebookSubsetRestriction_n4TxAntenna_tm6,
        _AntennaInfoDedicated_codebookSubsetRestriction,
        __AntennaInfoDedicated_ue_TransmitAntennaSelection_release,
        __AntennaInfoDedicated_ue_TransmitAntennaSelection_setup,
        _AntennaInfoDedicated_ue_TransmitAntennaSelection,
        AntennaInfoDedicated,
        _CQI_ReportConfig_cqi_ReportModeAperiodic,
        _CQI_ReportConfig_nomPDSCH_RS_EPRE_Offset,
        _CQI_ReportConfig_cqi_ReportPeriodic,
        CQI_ReportConfig,
        _CQI_ReportPeriodic_release,
        __CQI_ReportPeriodic_setup_cqi_PUCCH_ResourceIndex,
        __CQI_ReportPeriodic_setup_cqi_pmi_ConfigIndex,
        ___CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_widebandCQI,
        ____CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_subbandCQI_k,
        ___CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic_subbandCQI,
        __CQI_ReportPeriodic_setup_cqi_FormatIndicatorPeriodic,
        __CQI_ReportPeriodic_setup_ri_ConfigIndex,
        __CQI_ReportPeriodic_setup_simultaneousAckNackAndCQI,
        _CQI_ReportPeriodic_setup,
        CQI_ReportPeriodic,
        DRB_Identity,
        __LogicalChannelConfig_ul_SpecificParameters_priority,
        __LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate,
        __LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration,
        __LogicalChannelConfig_ul_SpecificParameters_logicalChannelGroup,
        _LogicalChannelConfig_ul_SpecificParameters,
        LogicalChannelConfig,
        __MAC_MainConfig_ul_SCH_Config_maxHARQ_Tx,
        __MAC_MainConfig_ul_SCH_Config_periodicBSR_Timer,
        __MAC_MainConfig_ul_SCH_Config_retxBSR_Timer,
        __MAC_MainConfig_ul_SCH_Config_ttiBundling,
        _MAC_MainConfig_ul_SCH_Config,
        _MAC_MainConfig_drx_Config,
        _MAC_MainConfig_timeAlignmentTimerDedicated,
        __MAC_MainConfig_phr_Config_release,
        ___MAC_MainConfig_phr_Config_setup_periodicPHR_Timer,
        ___MAC_MainConfig_phr_Config_setup_prohibitPHR_Timer,
        ___MAC_MainConfig_phr_Config_setup_dl_PathlossChange,
        __MAC_MainConfig_phr_Config_setup,
        _MAC_MainConfig_phr_Config,
        MAC_MainConfig,
        _DRX_Config_release,
        __DRX_Config_setup_onDurationTimer,
        __DRX_Config_setup_drx_InactivityTimer,
        __DRX_Config_setup_drx_RetransmissionTimer,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf10,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf20,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf32,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf40,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf64,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf80,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf128,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf160,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf256,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf320,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf512,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf640,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf1024,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf1280,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf2048,
        ___DRX_Config_setup_longDRX_CycleStartOffset_sf2560,
        __DRX_Config_setup_longDRX_CycleStartOffset,
        ___DRX_Config_setup_shortDRX_shortDRX_Cycle,
        ___DRX_Config_setup_shortDRX_drxShortCycleTimer,
        __DRX_Config_setup_shortDRX,
        _DRX_Config_setup,
        DRX_Config,
        _PDCP_Config_discardTimer,
        __PDCP_Config_rlc_AM_statusReportRequired,
        _PDCP_Config_rlc_AM,
        __PDCP_Config_rlc_UM_pdcp_SN_Size,
        _PDCP_Config_rlc_UM,
        __PDCP_Config_headerCompression_notUsed,
        ___PDCP_Config_headerCompression_rohc_maxCID,
        ____PDCP_Config_headerCompression_rohc_profiles_profile0x0001,
        ____PDCP_Config_headerCompression_rohc_profiles_profile0x0002,
        ____PDCP_Config_headerCompression_rohc_profiles_profile0x0003,
        ____PDCP_Config_headerCompression_rohc_profiles_profile0x0004,
        ____PDCP_Config_headerCompression_rohc_profiles_profile0x0006,
        ____PDCP_Config_headerCompression_rohc_profiles_profile0x0101,
        ____PDCP_Config_headerCompression_rohc_profiles_profile0x0102,
        ____PDCP_Config_headerCompression_rohc_profiles_profile0x0103,
        ____PDCP_Config_headerCompression_rohc_profiles_profile0x0104,
        ___PDCP_Config_headerCompression_rohc_profiles,
        __PDCP_Config_headerCompression_rohc,
        _PDCP_Config_headerCompression,
        PDCP_Config,
        _PDSCH_ConfigCommon_referenceSignalPower,
        _PDSCH_ConfigCommon_p_b,
        PDSCH_ConfigCommon,
        _PDSCH_ConfigDedicated_p_a,
        PDSCH_ConfigDedicated,
        _PHICH_Config_phich_Duration,
        _PHICH_Config_phich_Resource,
        PHICH_Config,
        _PhysicalConfigDedicated_pdsch_ConfigDedicated,
        _PhysicalConfigDedicated_pucch_ConfigDedicated,
        _PhysicalConfigDedicated_pusch_ConfigDedicated,
        _PhysicalConfigDedicated_uplinkPowerControlDedicated,
        _PhysicalConfigDedicated_tpc_PDCCH_ConfigPUCCH,
        _PhysicalConfigDedicated_tpc_PDCCH_ConfigPUSCH,
        _PhysicalConfigDedicated_cqi_ReportConfig,
        _PhysicalConfigDedicated_soundingRS_UL_ConfigDedicated,
        __PhysicalConfigDedicated_antennaInfo_explicitValue,
        __PhysicalConfigDedicated_antennaInfo_defaultValue,
        _PhysicalConfigDedicated_antennaInfo,
        _PhysicalConfigDedicated_schedulingRequestConfig,
        PhysicalConfigDedicated,
        P_Max,
        _PRACH_ConfigSIB_rootSequenceIndex,
        _PRACH_ConfigSIB_prach_ConfigInfo,
        PRACH_ConfigSIB,
        _PRACH_Config_rootSequenceIndex,
        _PRACH_Config_prach_ConfigInfo,
        PRACH_Config,
        _PRACH_ConfigInfo_prach_ConfigIndex,
        _PRACH_ConfigInfo_highSpeedFlag,
        _PRACH_ConfigInfo_zeroCorrelationZoneConfig,
        _PRACH_ConfigInfo_prach_FreqOffset,
        PRACH_ConfigInfo,
        PresenceAntennaPort1,
        _PUCCH_ConfigCommon_deltaPUCCH_Shift,
        _PUCCH_ConfigCommon_nRB_CQI,
        _PUCCH_ConfigCommon_nCS_AN,
        _PUCCH_ConfigCommon_n1PUCCH_AN,
        PUCCH_ConfigCommon,
        __PUCCH_ConfigDedicated_ackNackRepetition_release,
        ___PUCCH_ConfigDedicated_ackNackRepetition_setup_repetitionFactor,
        ___PUCCH_ConfigDedicated_ackNackRepetition_setup_n1PUCCH_AN_Rep,
        __PUCCH_ConfigDedicated_ackNackRepetition_setup,
        _PUCCH_ConfigDedicated_ackNackRepetition,
        _PUCCH_ConfigDedicated_tdd_AckNackFeedbackMode,
        PUCCH_ConfigDedicated,
        __PUSCH_ConfigCommon_pusch_ConfigBasic_n_SB,
        __PUSCH_ConfigCommon_pusch_ConfigBasic_hoppingMode,
        __PUSCH_ConfigCommon_pusch_ConfigBasic_pusch_HoppingOffset,
        __PUSCH_ConfigCommon_pusch_ConfigBasic_enable64QAM,
        _PUSCH_ConfigCommon_pusch_ConfigBasic,
        _PUSCH_ConfigCommon_ul_ReferenceSignalsPUSCH,
        PUSCH_ConfigCommon,
        _PUSCH_ConfigDedicated_betaOffset_ACK_Index,
        _PUSCH_ConfigDedicated_betaOffset_RI_Index,
        _PUSCH_ConfigDedicated_betaOffset_CQI_Index,
        PUSCH_ConfigDedicated,
        _UL_ReferenceSignalsPUSCH_groupHoppingEnabled,
        _UL_ReferenceSignalsPUSCH_groupAssignmentPUSCH,
        _UL_ReferenceSignalsPUSCH_sequenceHoppingEnabled,
        _UL_ReferenceSignalsPUSCH_cyclicShift,
        UL_ReferenceSignalsPUSCH,
        __RACH_ConfigCommon_preambleInfo_numberOfRA_Preambles,
        ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_sizeOfRA_PreamblesGroupA,
        ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_messageSizeGroupA,
        ___RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig_messagePowerOffsetGroupB,
        __RACH_ConfigCommon_preambleInfo_preamblesGroupAConfig,
        _RACH_ConfigCommon_preambleInfo,
        __RACH_ConfigCommon_powerRampingParameters_powerRampingStep,
        __RACH_ConfigCommon_powerRampingParameters_preambleInitialReceivedTargetPower,
        _RACH_ConfigCommon_powerRampingParameters,
        __RACH_ConfigCommon_ra_SupervisionInfo_preambleTransMax,
        __RACH_ConfigCommon_ra_SupervisionInfo_ra_ResponseWindowSize,
        __RACH_ConfigCommon_ra_SupervisionInfo_mac_ContentionResolutionTimer,
        _RACH_ConfigCommon_ra_SupervisionInfo,
        _RACH_ConfigCommon_maxHARQ_Msg3Tx,
        RACH_ConfigCommon,
        _RACH_ConfigDedicated_ra_PreambleIndex,
        _RACH_ConfigDedicated_ra_PRACH_MaskIndex,
        RACH_ConfigDedicated,
        _RadioResourceConfigCommonSIB_rach_ConfigCommon,
        _RadioResourceConfigCommonSIB_bcch_Config,
        _RadioResourceConfigCommonSIB_pcch_Config,
        _RadioResourceConfigCommonSIB_prach_Config,
        _RadioResourceConfigCommonSIB_pdsch_ConfigCommon,
        _RadioResourceConfigCommonSIB_pusch_ConfigCommon,
        _RadioResourceConfigCommonSIB_pucch_ConfigCommon,
        _RadioResourceConfigCommonSIB_soundingRS_UL_ConfigCommon,
        _RadioResourceConfigCommonSIB_uplinkPowerControlCommon,
        _RadioResourceConfigCommonSIB_ul_CyclicPrefixLength,
        RadioResourceConfigCommonSIB,
        _RadioResourceConfigCommon_rach_ConfigCommon,
        _RadioResourceConfigCommon_prach_Config,
        _RadioResourceConfigCommon_pdsch_ConfigCommon,
        _RadioResourceConfigCommon_pusch_ConfigCommon,
        _RadioResourceConfigCommon_phich_Config,
        _RadioResourceConfigCommon_pucch_ConfigCommon,
        _RadioResourceConfigCommon_soundingRS_UL_ConfigCommon,
        _RadioResourceConfigCommon_uplinkPowerControlCommon,
        _RadioResourceConfigCommon_antennaInfoCommon,
        _RadioResourceConfigCommon_p_Max,
        _RadioResourceConfigCommon_tdd_Config,
        _RadioResourceConfigCommon_ul_CyclicPrefixLength,
        RadioResourceConfigCommon,
        _BCCH_Config_modificationPeriodCoeff,
        BCCH_Config,
        _PCCH_Config_defaultPagingCycle,
        _PCCH_Config_nB,
        PCCH_Config,
        UL_CyclicPrefixLength,
        _RadioResourceConfigDedicated_srb_ToAddModList,
        _RadioResourceConfigDedicated_drb_ToAddModList,
        _RadioResourceConfigDedicated_drb_ToReleaseList,
        __RadioResourceConfigDedicated_mac_MainConfig_explicitValue,
        __RadioResourceConfigDedicated_mac_MainConfig_defaultValue,
        _RadioResourceConfigDedicated_mac_MainConfig,
        _RadioResourceConfigDedicated_sps_Config,
        _RadioResourceConfigDedicated_physicalConfigDedicated,
        RadioResourceConfigDedicated,
        _SRB_ToAddModList__item_,
        SRB_ToAddModList,
        _SRB_ToAddMod_srb_Identity,
        __SRB_ToAddMod_rlc_Config_explicitValue,
        __SRB_ToAddMod_rlc_Config_defaultValue,
        _SRB_ToAddMod_rlc_Config,
        __SRB_ToAddMod_logicalChannelConfig_explicitValue,
        __SRB_ToAddMod_logicalChannelConfig_defaultValue,
        _SRB_ToAddMod_logicalChannelConfig,
        SRB_ToAddMod,
        _DRB_ToAddModList__item_,
        DRB_ToAddModList,
        _DRB_ToAddMod_eps_BearerIdentity,
        _DRB_ToAddMod_drb_Identity,
        _DRB_ToAddMod_pdcp_Config,
        _DRB_ToAddMod_rlc_Config,
        _DRB_ToAddMod_logicalChannelIdentity,
        _DRB_ToAddMod_logicalChannelConfig,
        DRB_ToAddMod,
        _DRB_ToReleaseList__item_,
        DRB_ToReleaseList,
        __RLC_Config_am_ul_AM_RLC,
        __RLC_Config_am_dl_AM_RLC,
        _RLC_Config_am,
        __RLC_Config_um_Bi_Directional_ul_UM_RLC,
        __RLC_Config_um_Bi_Directional_dl_UM_RLC,
        _RLC_Config_um_Bi_Directional,
        __RLC_Config_um_Uni_Directional_UL_ul_UM_RLC,
        _RLC_Config_um_Uni_Directional_UL,
        __RLC_Config_um_Uni_Directional_DL_dl_UM_RLC,
        _RLC_Config_um_Uni_Directional_DL,
        RLC_Config,
        _UL_AM_RLC_t_PollRetransmit,
        _UL_AM_RLC_pollPDU,
        _UL_AM_RLC_pollByte,
        _UL_AM_RLC_maxRetxThreshold,
        UL_AM_RLC,
        _DL_AM_RLC_t_Reordering,
        _DL_AM_RLC_t_StatusProhibit,
        DL_AM_RLC,
        _UL_UM_RLC_sn_FieldLength,
        UL_UM_RLC,
        _DL_UM_RLC_sn_FieldLength,
        _DL_UM_RLC_t_Reordering,
        DL_UM_RLC,
        SN_FieldLength,
        T_PollRetransmit,
        PollPDU,
        PollByte,
        T_Reordering,
        T_StatusProhibit,
        _SchedulingRequestConfig_release,
        __SchedulingRequestConfig_setup_sr_PUCCH_ResourceIndex,
        __SchedulingRequestConfig_setup_sr_ConfigIndex,
        __SchedulingRequestConfig_setup_dsr_TransMax,
        _SchedulingRequestConfig_setup,
        SchedulingRequestConfig,
        _SoundingRS_UL_ConfigCommon_release,
        __SoundingRS_UL_ConfigCommon_setup_srs_BandwidthConfig,
        __SoundingRS_UL_ConfigCommon_setup_srs_SubframeConfig,
        __SoundingRS_UL_ConfigCommon_setup_ackNackSRS_SimultaneousTransmission,
        __SoundingRS_UL_ConfigCommon_setup_srs_MaxUpPts,
        _SoundingRS_UL_ConfigCommon_setup,
        SoundingRS_UL_ConfigCommon,
        _SoundingRS_UL_ConfigDedicated_release,
        __SoundingRS_UL_ConfigDedicated_setup_srs_Bandwidth,
        __SoundingRS_UL_ConfigDedicated_setup_srs_HoppingBandwidth,
        __SoundingRS_UL_ConfigDedicated_setup_freqDomainPosition,
        __SoundingRS_UL_ConfigDedicated_setup_duration,
        __SoundingRS_UL_ConfigDedicated_setup_srs_ConfigIndex,
        __SoundingRS_UL_ConfigDedicated_setup_transmissionComb,
        __SoundingRS_UL_ConfigDedicated_setup_cyclicShift,
        _SoundingRS_UL_ConfigDedicated_setup,
        SoundingRS_UL_ConfigDedicated,
        _SPS_Config_semiPersistSchedC_RNTI,
        _SPS_Config_sps_ConfigDL,
        _SPS_Config_sps_ConfigUL,
        SPS_Config,
        _SPS_ConfigDL_release,
        __SPS_ConfigDL_setup_semiPersistSchedIntervalDL,
        __SPS_ConfigDL_setup_numberOfConfSPS_Processes,
        __SPS_ConfigDL_setup_n1_PUCCH_AN_PersistentList,
        _SPS_ConfigDL_setup,
        SPS_ConfigDL,
        _SPS_ConfigUL_release,
        __SPS_ConfigUL_setup_semiPersistSchedIntervalUL,
        __SPS_ConfigUL_setup_implicitReleaseAfter,
        ___SPS_ConfigUL_setup_p0_Persistent_p0_NominalPUSCH_Persistent,
        ___SPS_ConfigUL_setup_p0_Persistent_p0_UE_PUSCH_Persistent,
        __SPS_ConfigUL_setup_p0_Persistent,
        __SPS_ConfigUL_setup_twoIntervalsConfig,
        _SPS_ConfigUL_setup,
        SPS_ConfigUL,
        _N1_PUCCH_AN_PersistentList__item_,
        N1_PUCCH_AN_PersistentList,
        _TDD_Config_subframeAssignment,
        _TDD_Config_specialSubframePatterns,
        TDD_Config,
        TimeAlignmentTimer,
        _TPC_PDCCH_Config_release,
        __TPC_PDCCH_Config_setup_tpc_RNTI,
        __TPC_PDCCH_Config_setup_tpc_Index,
        _TPC_PDCCH_Config_setup,
        TPC_PDCCH_Config,
        _TPC_Index_indexOfFormat3,
        _TPC_Index_indexOfFormat3A,
        TPC_Index,
        _UplinkPowerControlCommon_p0_NominalPUSCH,
        _UplinkPowerControlCommon_alpha,
        _UplinkPowerControlCommon_p0_NominalPUCCH,
        _UplinkPowerControlCommon_deltaFList_PUCCH,
        _UplinkPowerControlCommon_deltaPreambleMsg3,
        UplinkPowerControlCommon,
        _UplinkPowerControlDedicated_p0_UE_PUSCH,
        _UplinkPowerControlDedicated_deltaMCS_Enabled,
        _UplinkPowerControlDedicated_accumulationEnabled,
        _UplinkPowerControlDedicated_p0_UE_PUCCH,
        _UplinkPowerControlDedicated_pSRS_Offset,
        _UplinkPowerControlDedicated_filterCoefficient,
        UplinkPowerControlDedicated,
        _DeltaFList_PUCCH_deltaF_PUCCH_Format1,
        _DeltaFList_PUCCH_deltaF_PUCCH_Format1b,
        _DeltaFList_PUCCH_deltaF_PUCCH_Format2,
        _DeltaFList_PUCCH_deltaF_PUCCH_Format2a,
        _DeltaFList_PUCCH_deltaF_PUCCH_Format2b,
        DeltaFList_PUCCH,
        NextHopChainingCount,
        _SecurityAlgorithmConfig_cipheringAlgorithm,
        _SecurityAlgorithmConfig_integrityProtAlgorithm,
        SecurityAlgorithmConfig,
        ShortMAC_I,
        AdditionalSpectrumEmission,
        ARFCN_ValueCDMA2000,
        ARFCN_ValueEUTRA,
        ARFCN_ValueGERAN,
        ARFCN_ValueUTRA,
        BandclassCDMA2000,
        BandIndicatorGERAN,
        _CarrierFreqCDMA2000_bandClass,
        _CarrierFreqCDMA2000_arfcn,
        CarrierFreqCDMA2000,
        _CarrierFreqGERAN_arfcn,
        _CarrierFreqGERAN_bandIndicator,
        CarrierFreqGERAN,
        _CarrierFreqsGERAN_startingARFCN,
        _CarrierFreqsGERAN_bandIndicator,
        __CarrierFreqsGERAN_followingARFCNs_explicitListOfARFCNs,
        ___CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs_arfcn_Spacing,
        ___CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs_numberOfFollowingARFCNs,
        __CarrierFreqsGERAN_followingARFCNs_equallySpacedARFCNs,
        __CarrierFreqsGERAN_followingARFCNs_variableBitMapOfARFCNs,
        _CarrierFreqsGERAN_followingARFCNs,
        CarrierFreqsGERAN,
        _ExplicitListOfARFCNs__item_,
        ExplicitListOfARFCNs,
        CDMA2000_Type,
        CellIdentity,
        _CellIndexList__item_,
        CellIndexList,
        CellIndex,
        CellReselectionPriority,
        _CSFB_RegistrationParam1XRTT_sid,
        _CSFB_RegistrationParam1XRTT_nid,
        _CSFB_RegistrationParam1XRTT_multipleSID,
        _CSFB_RegistrationParam1XRTT_multipleNID,
        _CSFB_RegistrationParam1XRTT_homeReg,
        _CSFB_RegistrationParam1XRTT_foreignSIDReg,
        _CSFB_RegistrationParam1XRTT_foreignNIDReg,
        _CSFB_RegistrationParam1XRTT_parameterReg,
        _CSFB_RegistrationParam1XRTT_powerUpReg,
        _CSFB_RegistrationParam1XRTT_registrationPeriod,
        _CSFB_RegistrationParam1XRTT_registrationZone,
        _CSFB_RegistrationParam1XRTT_totalZone,
        _CSFB_RegistrationParam1XRTT_zoneTimer,
        CSFB_RegistrationParam1XRTT,
        _CellGlobalIdEUTRA_plmn_Identity,
        _CellGlobalIdEUTRA_cellIdentity,
        CellGlobalIdEUTRA,
        _CellGlobalIdUTRA_plmn_Identity,
        _CellGlobalIdUTRA_cellIdentity,
        CellGlobalIdUTRA,
        _CellGlobalIdGERAN_plmn_Identity,
        _CellGlobalIdGERAN_locationAreaCode,
        _CellGlobalIdGERAN_cellIdentity,
        CellGlobalIdGERAN,
        _CellGlobalIdCDMA2000_cellGlobalId1XRTT,
        _CellGlobalIdCDMA2000_cellGlobalIdHRPD,
        CellGlobalIdCDMA2000,
        _MobilityControlInfo_targetPhysCellId,
        _MobilityControlInfo_carrierFreq,
        _MobilityControlInfo_carrierBandwidth,
        _MobilityControlInfo_additionalSpectrumEmission,
        _MobilityControlInfo_t304,
        _MobilityControlInfo_newUE_Identity,
        _MobilityControlInfo_radioResourceConfigCommon,
        _MobilityControlInfo_rach_ConfigDedicated,
        MobilityControlInfo,
        _CarrierBandwidthEUTRA_dl_Bandwidth,
        _CarrierBandwidthEUTRA_ul_Bandwidth,
        CarrierBandwidthEUTRA,
        _CarrierFreqEUTRA_dl_CarrierFreq,
        _CarrierFreqEUTRA_ul_CarrierFreq,
        CarrierFreqEUTRA,
        MobilityParametersCDMA2000,
        _MobilityStateParameters_t_Evaluation,
        _MobilityStateParameters_t_HystNormal,
        _MobilityStateParameters_n_CellChangeMedium,
        _MobilityStateParameters_n_CellChangeHigh,
        MobilityStateParameters,
        PhysCellId,
        _PhysCellIdRange_start,
        _PhysCellIdRange_range,
        PhysCellIdRange,
        PhysCellIdCDMA2000,
        _PhysCellIdGERAN_networkColourCode,
        _PhysCellIdGERAN_baseStationColourCode,
        PhysCellIdGERAN,
        PhysCellIdUTRA_FDD,
        PhysCellIdUTRA_TDD,
        _PLMN_Identity_mcc,
        _PLMN_Identity_mnc,
        PLMN_Identity,
        _MCC__item_,
        MCC,
        _MNC__item_,
        MNC,
        MCC_MNC_Digit,
        _PreRegistrationInfoHRPD_preRegistrationAllowed,
        _PreRegistrationInfoHRPD_preRegistrationZoneId,
        _PreRegistrationInfoHRPD_secondaryPreRegistrationZoneIdList,
        PreRegistrationInfoHRPD,
        _SecondaryPreRegistrationZoneIdListHRPD__item_,
        SecondaryPreRegistrationZoneIdListHRPD,
        PreRegistrationZoneIdHRPD,
        Q_RxLevMin,
        Q_OffsetRange,
        Q_OffsetRangeInterRAT,
        ReselectionThreshold,
        _SpeedStateScaleFactors_sf_Medium,
        _SpeedStateScaleFactors_sf_High,
        SpeedStateScaleFactors,
        _SystemTimeInfoCDMA2000_cdma_EUTRA_Synchronisation,
        __SystemTimeInfoCDMA2000_cdma_SystemTime_synchronousSystemTime,
        __SystemTimeInfoCDMA2000_cdma_SystemTime_asynchronousSystemTime,
        _SystemTimeInfoCDMA2000_cdma_SystemTime,
        SystemTimeInfoCDMA2000,
        TrackingAreaCode,
        T_Reselection,
        AllowedMeasBandwidth,
        Hysteresis,
        _MeasConfig_measObjectToRemoveList,
        _MeasConfig_measObjectToAddModList,
        _MeasConfig_reportConfigToRemoveList,
        _MeasConfig_reportConfigToAddModList,
        _MeasConfig_measIdToRemoveList,
        _MeasConfig_measIdToAddModList,
        _MeasConfig_quantityConfig,
        _MeasConfig_measGapConfig,
        _MeasConfig_s_Measure,
        _MeasConfig_preRegistrationInfoHRPD,
        __MeasConfig_speedStatePars_release,
        ___MeasConfig_speedStatePars_setup_mobilityStateParameters,
        ___MeasConfig_speedStatePars_setup_timeToTrigger_SF,
        __MeasConfig_speedStatePars_setup,
        _MeasConfig_speedStatePars,
        MeasConfig,
        _MeasIdToRemoveList__item_,
        MeasIdToRemoveList,
        _MeasObjectToRemoveList__item_,
        MeasObjectToRemoveList,
        _ReportConfigToRemoveList__item_,
        ReportConfigToRemoveList,
        _MeasGapConfig_release,
        ___MeasGapConfig_setup_gapOffset_gp0,
        ___MeasGapConfig_setup_gapOffset_gp1,
        __MeasGapConfig_setup_gapOffset,
        _MeasGapConfig_setup,
        MeasGapConfig,
        MeasId,
        _MeasIdToAddModList__item_,
        MeasIdToAddModList,
        _MeasIdToAddMod_measId,
        _MeasIdToAddMod_measObjectId,
        _MeasIdToAddMod_reportConfigId,
        MeasIdToAddMod,
        _MeasObjectCDMA2000_cdma2000_Type,
        _MeasObjectCDMA2000_carrierFreq,
        _MeasObjectCDMA2000_searchWindowSize,
        _MeasObjectCDMA2000_offsetFreq,
        _MeasObjectCDMA2000_cellsToRemoveList,
        _MeasObjectCDMA2000_cellsToAddModList,
        _MeasObjectCDMA2000_cellForWhichToReportCGI,
        MeasObjectCDMA2000,
        _CellsToAddModListCDMA2000__item_,
        CellsToAddModListCDMA2000,
        _CellsToAddModCDMA2000_cellIndex,
        _CellsToAddModCDMA2000_physCellId,
        CellsToAddModCDMA2000,
        _MeasObjectEUTRA_carrierFreq,
        _MeasObjectEUTRA_allowedMeasBandwidth,
        _MeasObjectEUTRA_presenceAntennaPort1,
        _MeasObjectEUTRA_neighCellConfig,
        _MeasObjectEUTRA_offsetFreq,
        _MeasObjectEUTRA_cellsToRemoveList,
        _MeasObjectEUTRA_cellsToAddModList,
        _MeasObjectEUTRA_blackCellsToRemoveList,
        _MeasObjectEUTRA_blackCellsToAddModList,
        _MeasObjectEUTRA_cellForWhichToReportCGI,
        MeasObjectEUTRA,
        _CellsToAddModList__item_,
        CellsToAddModList,
        _CellsToAddMod_cellIndex,
        _CellsToAddMod_physCellId,
        _CellsToAddMod_cellIndividualOffset,
        CellsToAddMod,
        _BlackCellsToAddModList__item_,
        BlackCellsToAddModList,
        _BlackCellsToAddMod_cellIndex,
        _BlackCellsToAddMod_physCellIdRange,
        BlackCellsToAddMod,
        _MeasObjectGERAN_carrierFreqs,
        _MeasObjectGERAN_offsetFreq,
        _MeasObjectGERAN_ncc_Permitted,
        _MeasObjectGERAN_cellForWhichToReportCGI,
        MeasObjectGERAN,
        MeasObjectId,
        _MeasObjectToAddModList__item_,
        MeasObjectToAddModList,
        _MeasObjectToAddMod_measObjectId,
        __MeasObjectToAddMod_measObject_measObjectEUTRA,
        __MeasObjectToAddMod_measObject_measObjectUTRA,
        __MeasObjectToAddMod_measObject_measObjectGERAN,
        __MeasObjectToAddMod_measObject_measObjectCDMA2000,
        _MeasObjectToAddMod_measObject,
        MeasObjectToAddMod,
        _MeasObjectUTRA_carrierFreq,
        _MeasObjectUTRA_offsetFreq,
        _MeasObjectUTRA_cellsToRemoveList,
        __MeasObjectUTRA_cellsToAddModList_cellsToAddModListUTRA_FDD,
        __MeasObjectUTRA_cellsToAddModList_cellsToAddModListUTRA_TDD,
        _MeasObjectUTRA_cellsToAddModList,
        __MeasObjectUTRA_cellForWhichToReportCGI_utra_FDD,
        __MeasObjectUTRA_cellForWhichToReportCGI_utra_TDD,
        _MeasObjectUTRA_cellForWhichToReportCGI,
        MeasObjectUTRA,
        _CellsToAddModListUTRA_FDD__item_,
        CellsToAddModListUTRA_FDD,
        _CellsToAddModUTRA_FDD_cellIndex,
        _CellsToAddModUTRA_FDD_physCellId,
        CellsToAddModUTRA_FDD,
        _CellsToAddModListUTRA_TDD__item_,
        CellsToAddModListUTRA_TDD,
        _CellsToAddModUTRA_TDD_cellIndex,
        _CellsToAddModUTRA_TDD_physCellId,
        CellsToAddModUTRA_TDD,
        _MeasResults_measId,
        __MeasResults_measResultServCell_rsrpResult,
        __MeasResults_measResultServCell_rsrqResult,
        _MeasResults_measResultServCell,
        __MeasResults_measResultNeighCells_measResultListEUTRA,
        __MeasResults_measResultNeighCells_measResultListUTRA,
        __MeasResults_measResultNeighCells_measResultListGERAN,
        __MeasResults_measResultNeighCells_measResultsCDMA2000,
        _MeasResults_measResultNeighCells,
        MeasResults,
        _MeasResultListEUTRA__item_,
        MeasResultListEUTRA,
        _MeasResultEUTRA_physCellId,
        __MeasResultEUTRA_cgi_Info_cellGlobalId,
        __MeasResultEUTRA_cgi_Info_trackingAreaCode,
        __MeasResultEUTRA_cgi_Info_plmn_IdentityList,
        _MeasResultEUTRA_cgi_Info,
        __MeasResultEUTRA_measResult_rsrpResult,
        __MeasResultEUTRA_measResult_rsrqResult,
        _MeasResultEUTRA_measResult,
        MeasResultEUTRA,
        _MeasResultListUTRA__item_,
        MeasResultListUTRA,
        __MeasResultUTRA_physCellId_fdd,
        __MeasResultUTRA_physCellId_tdd,
        _MeasResultUTRA_physCellId,
        __MeasResultUTRA_cgi_Info_cellGlobalId,
        __MeasResultUTRA_cgi_Info_locationAreaCode,
        __MeasResultUTRA_cgi_Info_routingAreaCode,
        __MeasResultUTRA_cgi_Info_plmn_IdentityList,
        _MeasResultUTRA_cgi_Info,
        __MeasResultUTRA_measResult_utra_RSCP,
        __MeasResultUTRA_measResult_utra_EcN0,
        _MeasResultUTRA_measResult,
        MeasResultUTRA,
        _MeasResultListGERAN__item_,
        MeasResultListGERAN,
        _MeasResultGERAN_carrierFreq,
        _MeasResultGERAN_physCellId,
        __MeasResultGERAN_cgi_Info_cellGlobalId,
        __MeasResultGERAN_cgi_Info_routingAreaCode,
        _MeasResultGERAN_cgi_Info,
        __MeasResultGERAN_measResult_rssi,
        _MeasResultGERAN_measResult,
        MeasResultGERAN,
        _MeasResultsCDMA2000_preRegistrationStatusHRPD,
        _MeasResultsCDMA2000_measResultListCDMA2000,
        MeasResultsCDMA2000,
        _MeasResultListCDMA2000__item_,
        MeasResultListCDMA2000,
        _MeasResultCDMA2000_physCellId,
        _MeasResultCDMA2000_cgi_Info,
        __MeasResultCDMA2000_measResult_pilotPnPhase,
        __MeasResultCDMA2000_measResult_pilotStrength,
        _MeasResultCDMA2000_measResult,
        MeasResultCDMA2000,
        _PLMN_IdentityList2__item_,
        PLMN_IdentityList2,
        _QuantityConfig_quantityConfigEUTRA,
        _QuantityConfig_quantityConfigUTRA,
        _QuantityConfig_quantityConfigGERAN,
        _QuantityConfig_quantityConfigCDMA2000,
        QuantityConfig,
        _QuantityConfigEUTRA_filterCoefficientRSRP,
        _QuantityConfigEUTRA_filterCoefficientRSRQ,
        QuantityConfigEUTRA,
        _QuantityConfigUTRA_measQuantityUTRA_FDD,
        _QuantityConfigUTRA_measQuantityUTRA_TDD,
        _QuantityConfigUTRA_filterCoefficient,
        QuantityConfigUTRA,
        _QuantityConfigGERAN_measQuantityGERAN,
        _QuantityConfigGERAN_filterCoefficient,
        QuantityConfigGERAN,
        _QuantityConfigCDMA2000_measQuantityCDMA2000,
        QuantityConfigCDMA2000,
        _____ReportConfigEUTRA_triggerType_event_eventId_eventA1_a1_Threshold,
        ____ReportConfigEUTRA_triggerType_event_eventId_eventA1,
        _____ReportConfigEUTRA_triggerType_event_eventId_eventA2_a2_Threshold,
        ____ReportConfigEUTRA_triggerType_event_eventId_eventA2,
        _____ReportConfigEUTRA_triggerType_event_eventId_eventA3_a3_Offset,
        _____ReportConfigEUTRA_triggerType_event_eventId_eventA3_reportOnLeave,
        ____ReportConfigEUTRA_triggerType_event_eventId_eventA3,
        _____ReportConfigEUTRA_triggerType_event_eventId_eventA4_a4_Threshold,
        ____ReportConfigEUTRA_triggerType_event_eventId_eventA4,
        _____ReportConfigEUTRA_triggerType_event_eventId_eventA5_a5_Threshold1,
        _____ReportConfigEUTRA_triggerType_event_eventId_eventA5_a5_Threshold2,
        ____ReportConfigEUTRA_triggerType_event_eventId_eventA5,
        ___ReportConfigEUTRA_triggerType_event_eventId,
        ___ReportConfigEUTRA_triggerType_event_hysteresis,
        ___ReportConfigEUTRA_triggerType_event_timeToTrigger,
        __ReportConfigEUTRA_triggerType_event,
        ___ReportConfigEUTRA_triggerType_periodical_purpose,
        __ReportConfigEUTRA_triggerType_periodical,
        _ReportConfigEUTRA_triggerType,
        _ReportConfigEUTRA_triggerQuantity,
        _ReportConfigEUTRA_reportQuantity,
        _ReportConfigEUTRA_maxReportCells,
        _ReportConfigEUTRA_reportInterval,
        _ReportConfigEUTRA_reportAmount,
        ReportConfigEUTRA,
        _ThresholdEUTRA_threshold_RSRP,
        _ThresholdEUTRA_threshold_RSRQ,
        ThresholdEUTRA,
        ReportConfigId,
        ______ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold_b1_ThresholdUTRA,
        ______ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold_b1_ThresholdGERAN,
        ______ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold_b1_ThresholdCDMA2000,
        _____ReportConfigInterRAT_triggerType_event_eventId_eventB1_b1_Threshold,
        ____ReportConfigInterRAT_triggerType_event_eventId_eventB1,
        _____ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold1,
        ______ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2_b2_Threshold2UTRA,
        ______ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2_b2_Threshold2GERAN,
        ______ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2_b2_Threshold2CDMA2000,
        _____ReportConfigInterRAT_triggerType_event_eventId_eventB2_b2_Threshold2,
        ____ReportConfigInterRAT_triggerType_event_eventId_eventB2,
        ___ReportConfigInterRAT_triggerType_event_eventId,
        ___ReportConfigInterRAT_triggerType_event_hysteresis,
        ___ReportConfigInterRAT_triggerType_event_timeToTrigger,
        __ReportConfigInterRAT_triggerType_event,
        ___ReportConfigInterRAT_triggerType_periodical_purpose,
        __ReportConfigInterRAT_triggerType_periodical,
        _ReportConfigInterRAT_triggerType,
        _ReportConfigInterRAT_maxReportCells,
        _ReportConfigInterRAT_reportInterval,
        _ReportConfigInterRAT_reportAmount,
        ReportConfigInterRAT,
        _ThresholdUTRA_utra_RSCP,
        _ThresholdUTRA_utra_EcN0,
        ThresholdUTRA,
        ThresholdGERAN,
        ThresholdCDMA2000,
        _ReportConfigToAddModList__item_,
        ReportConfigToAddModList,
        _ReportConfigToAddMod_reportConfigId,
        __ReportConfigToAddMod_reportConfig_reportConfigEUTRA,
        __ReportConfigToAddMod_reportConfig_reportConfigInterRAT,
        _ReportConfigToAddMod_reportConfig,
        ReportConfigToAddMod,
        ReportInterval,
        RSRP_Range,
        RSRQ_Range,
        TimeToTrigger,
        C_RNTI,
        DedicatedInfoCDMA2000,
        DedicatedInfoNAS,
        FilterCoefficient,
        MMEC,
        NeighCellConfig,
        RAND_CDMA2000,
        RAT_Type,
        RRC_TransactionIdentifier,
        _S_TMSI_mmec,
        _S_TMSI_m_TMSI,
        S_TMSI,
        _UE_CapabilityRAT_ContainerList__item_,
        UE_CapabilityRAT_ContainerList,
        _UE_CapabilityRAT_Container_rat_Type,
        _UE_CapabilityRAT_Container_ueCapabilityRAT_Container,
        UE_CapabilityRAT_Container,
        _UE_EUTRA_Capability_accessStratumRelease,
        _UE_EUTRA_Capability_ue_Category,
        _UE_EUTRA_Capability_pdcp_Parameters,
        _UE_EUTRA_Capability_phyLayerParameters,
        _UE_EUTRA_Capability_rf_Parameters,
        _UE_EUTRA_Capability_measParameters,
        _UE_EUTRA_Capability_featureGroupIndicators,
        __UE_EUTRA_Capability_interRAT_Parameters_utraFDD,
        __UE_EUTRA_Capability_interRAT_Parameters_utraTDD128,
        __UE_EUTRA_Capability_interRAT_Parameters_utraTDD384,
        __UE_EUTRA_Capability_interRAT_Parameters_utraTDD768,
        __UE_EUTRA_Capability_interRAT_Parameters_geran,
        __UE_EUTRA_Capability_interRAT_Parameters_cdma2000_HRPD,
        __UE_EUTRA_Capability_interRAT_Parameters_cdma2000_1xRTT,
        _UE_EUTRA_Capability_interRAT_Parameters,
        _UE_EUTRA_Capability_nonCriticalExtension,
        UE_EUTRA_Capability,
        AccessStratumRelease,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0001,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0002,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0003,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0004,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0006,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0101,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0102,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0103,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0104,
        _PDCP_Parameters_supportedROHC_Profiles,
        _PDCP_Parameters_maxNumberROHC_ContextSessions,
        PDCP_Parameters,
        _PhyLayerParameters_ue_TxAntennaSelectionSupported,
        _PhyLayerParameters_ue_SpecificRefSigsSupported,
        PhyLayerParameters,
        _RF_Parameters_supportedBandListEUTRA,
        RF_Parameters,
        _SupportedBandListEUTRA__item_,
        SupportedBandListEUTRA,
        _SupportedBandEUTRA_bandEUTRA,
        _SupportedBandEUTRA_halfDuplex,
        SupportedBandEUTRA,
        _MeasParameters_bandListEUTRA,
        MeasParameters,
        _BandListEUTRA__item_,
        BandListEUTRA,
        _BandInfoEUTRA_interFreqBandList,
        _BandInfoEUTRA_interRAT_BandList,
        BandInfoEUTRA,
        _InterFreqBandList__item_,
        InterFreqBandList,
        _InterFreqBandInfo_interFreqNeedForGaps,
        InterFreqBandInfo,
        _InterRAT_BandList__item_,
        InterRAT_BandList,
        _InterRAT_BandInfo_interRAT_NeedForGaps,
        InterRAT_BandInfo,
        _IRAT_ParametersUTRA_FDD_supportedBandListUTRA_FDD,
        IRAT_ParametersUTRA_FDD,
        _SupportedBandListUTRA_FDD__item_,
        SupportedBandListUTRA_FDD,
        SupportedBandUTRA_FDD,
        _IRAT_ParametersUTRA_TDD128_supportedBandListUTRA_TDD128,
        IRAT_ParametersUTRA_TDD128,
        _SupportedBandListUTRA_TDD128__item_,
        SupportedBandListUTRA_TDD128,
        SupportedBandUTRA_TDD128,
        _IRAT_ParametersUTRA_TDD384_supportedBandListUTRA_TDD384,
        IRAT_ParametersUTRA_TDD384,
        _SupportedBandListUTRA_TDD384__item_,
        SupportedBandListUTRA_TDD384,
        SupportedBandUTRA_TDD384,
        _IRAT_ParametersUTRA_TDD768_supportedBandListUTRA_TDD768,
        IRAT_ParametersUTRA_TDD768,
        _SupportedBandListUTRA_TDD768__item_,
        SupportedBandListUTRA_TDD768,
        SupportedBandUTRA_TDD768,
        _IRAT_ParametersGERAN_supportedBandListGERAN,
        _IRAT_ParametersGERAN_interRAT_PS_HO_ToGERAN,
        IRAT_ParametersGERAN,
        _SupportedBandListGERAN__item_,
        SupportedBandListGERAN,
        SupportedBandGERAN,
        _IRAT_ParametersCDMA2000_HRPD_supportedBandListHRPD,
        _IRAT_ParametersCDMA2000_HRPD_tx_ConfigHRPD,
        _IRAT_ParametersCDMA2000_HRPD_rx_ConfigHRPD,
        IRAT_ParametersCDMA2000_HRPD,
        _SupportedBandListHRPD__item_,
        SupportedBandListHRPD,
        _IRAT_ParametersCDMA2000_1XRTT_supportedBandList1XRTT,
        _IRAT_ParametersCDMA2000_1XRTT_tx_Config1XRTT,
        _IRAT_ParametersCDMA2000_1XRTT_rx_Config1XRTT,
        IRAT_ParametersCDMA2000_1XRTT,
        _SupportedBandList1XRTT__item_,
        SupportedBandList1XRTT,
        _UE_TimersAndConstants_t300,
        _UE_TimersAndConstants_t301,
        _UE_TimersAndConstants_t310,
        _UE_TimersAndConstants_n310,
        _UE_TimersAndConstants_t311,
        _UE_TimersAndConstants_n311,
        UE_TimersAndConstants,
        maxBands,
        maxCDMA_BandClass,
        maxCellBlack,
        maxCellInter,
        maxCellIntra,
        maxCellMeas,
        maxCellReport,
        maxDRB,
        maxEARFCN,
        maxFreq,
        maxGERAN_SI,
        maxGNFG,
        maxMBSFN_Allocations,
        maxMCS_1,
        maxMeasId,
        maxObjectId,
        maxPageRec,
        maxPNOffset,
        maxRAT_Capabilities,
        maxReportConfigId,
        maxSIB,
        maxSIB_1,
        maxSI_Message,
        maxUTRA_FDD_Carrier,
        maxUTRA_TDD_Carrier,
    ]

class EUTRA_UE_Variables:

    _name_  = 'EUTRA-UE-Variables'
    _oid_   = []
    
    _obj_ = [
        'VarMeasConfig',
        'VarMeasReportList',
        'VarMeasReport',
        'CellsTriggeredList',
        'VarShortMAC-Input',
        ]
    _type_ = [
        'VarMeasConfig',
        'VarMeasReportList',
        'VarMeasReport',
        'CellsTriggeredList',
        'VarShortMAC-Input',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< VarMeasConfig >-----#
    VarMeasConfig = SEQ(name='VarMeasConfig', mode=MODE_TYPE)
    _VarMeasConfig_measIdList = SEQ_OF(name='measIdList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasIdToAddModList')), opt=True)
    _VarMeasConfig_measObjectList = SEQ_OF(name='measObjectList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasObjectToAddModList')), opt=True)
    _VarMeasConfig_reportConfigList = SEQ_OF(name='reportConfigList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ReportConfigToAddModList')), opt=True)
    _VarMeasConfig_quantityConfig = SEQ(name='quantityConfig', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'QuantityConfig')), opt=True)
    _VarMeasConfig_s_Measure = INT(name='s-Measure', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RSRP-Range')), opt=True)
    _VarMeasConfig_speedStatePars = CHOICE(name='speedStatePars', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __VarMeasConfig_speedStatePars_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __VarMeasConfig_speedStatePars_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___VarMeasConfig_speedStatePars_setup_mobilityStateParameters = SEQ(name='mobilityStateParameters', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MobilityStateParameters')))
    ___VarMeasConfig_speedStatePars_setup_timeToTrigger_SF = SEQ(name='timeToTrigger-SF', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SpeedStateScaleFactors')))
    __VarMeasConfig_speedStatePars_setup._cont = ASN1Dict([
        ('mobilityStateParameters', ___VarMeasConfig_speedStatePars_setup_mobilityStateParameters),
        ('timeToTrigger-SF', ___VarMeasConfig_speedStatePars_setup_timeToTrigger_SF),
        ])
    __VarMeasConfig_speedStatePars_setup._ext = None
    _VarMeasConfig_speedStatePars._cont = ASN1Dict([
        ('release', __VarMeasConfig_speedStatePars_release),
        ('setup', __VarMeasConfig_speedStatePars_setup),
        ])
    _VarMeasConfig_speedStatePars._ext = None
    VarMeasConfig._cont = ASN1Dict([
        ('measIdList', _VarMeasConfig_measIdList),
        ('measObjectList', _VarMeasConfig_measObjectList),
        ('reportConfigList', _VarMeasConfig_reportConfigList),
        ('quantityConfig', _VarMeasConfig_quantityConfig),
        ('s-Measure', _VarMeasConfig_s_Measure),
        ('speedStatePars', _VarMeasConfig_speedStatePars),
        ])
    VarMeasConfig._ext = None
    
    #-----< VarMeasReportList >-----#
    VarMeasReportList = SEQ_OF(name='VarMeasReportList', mode=MODE_TYPE)
    _VarMeasReportList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-UE-Variables', 'VarMeasReport')))
    VarMeasReportList._cont = _VarMeasReportList__item_
    VarMeasReportList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< VarMeasReport >-----#
    VarMeasReport = SEQ(name='VarMeasReport', mode=MODE_TYPE)
    _VarMeasReport_measId = INT(name='measId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasId')))
    _VarMeasReport_cellsTriggeredList = SEQ_OF(name='cellsTriggeredList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-UE-Variables', 'CellsTriggeredList')), opt=True)
    _VarMeasReport_numberOfReportsSent = INT(name='numberOfReportsSent', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    VarMeasReport._cont = ASN1Dict([
        ('measId', _VarMeasReport_measId),
        ('cellsTriggeredList', _VarMeasReport_cellsTriggeredList),
        ('numberOfReportsSent', _VarMeasReport_numberOfReportsSent),
        ])
    VarMeasReport._ext = None
    
    #-----< CellsTriggeredList >-----#
    CellsTriggeredList = SEQ_OF(name='CellsTriggeredList', mode=MODE_TYPE)
    _CellsTriggeredList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellId')))
    CellsTriggeredList._cont = _CellsTriggeredList__item_
    CellsTriggeredList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< VarShortMAC-Input >-----#
    VarShortMAC_Input = SEQ(name='VarShortMAC-Input', mode=MODE_TYPE)
    _VarShortMAC_Input_cellIdentity = BIT_STR(name='cellIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellIdentity')))
    _VarShortMAC_Input_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellId')))
    _VarShortMAC_Input_c_RNTI = BIT_STR(name='c-RNTI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'C-RNTI')))
    VarShortMAC_Input._cont = ASN1Dict([
        ('cellIdentity', _VarShortMAC_Input_cellIdentity),
        ('physCellId', _VarShortMAC_Input_physCellId),
        ('c-RNTI', _VarShortMAC_Input_c_RNTI),
        ])
    VarShortMAC_Input._ext = None
    
    _all_ = [
        _VarMeasConfig_measIdList,
        _VarMeasConfig_measObjectList,
        _VarMeasConfig_reportConfigList,
        _VarMeasConfig_quantityConfig,
        _VarMeasConfig_s_Measure,
        __VarMeasConfig_speedStatePars_release,
        ___VarMeasConfig_speedStatePars_setup_mobilityStateParameters,
        ___VarMeasConfig_speedStatePars_setup_timeToTrigger_SF,
        __VarMeasConfig_speedStatePars_setup,
        _VarMeasConfig_speedStatePars,
        VarMeasConfig,
        _VarMeasReportList__item_,
        VarMeasReportList,
        _VarMeasReport_measId,
        _VarMeasReport_cellsTriggeredList,
        _VarMeasReport_numberOfReportsSent,
        VarMeasReport,
        _CellsTriggeredList__item_,
        CellsTriggeredList,
        _VarShortMAC_Input_cellIdentity,
        _VarShortMAC_Input_physCellId,
        _VarShortMAC_Input_c_RNTI,
        VarShortMAC_Input,
    ]

class EUTRA_InterNodeDefinitions:

    _name_  = 'EUTRA-InterNodeDefinitions'
    _oid_   = []
    
    _obj_ = [
        'HandoverCommand',
        'HandoverCommand-r8-IEs',
        'HandoverPreparationInformation',
        'HandoverPreparationInformation-r8-IEs',
        'UERadioAccessCapabilityInformation',
        'UERadioAccessCapabilityInformation-r8-IEs',
        'AS-Config',
        'AS-Context',
        'ReestablishmentInfo',
        'AdditionalReestabInfoList',
        'AdditionalReestabInfo',
        'Key-eNodeB-Star',
        'RRM-Config',
        'maxReestabInfo',
        ]
    _type_ = [
        'HandoverCommand',
        'HandoverCommand-r8-IEs',
        'HandoverPreparationInformation',
        'HandoverPreparationInformation-r8-IEs',
        'UERadioAccessCapabilityInformation',
        'UERadioAccessCapabilityInformation-r8-IEs',
        'AS-Config',
        'AS-Context',
        'ReestablishmentInfo',
        'AdditionalReestabInfoList',
        'AdditionalReestabInfo',
        'Key-eNodeB-Star',
        'RRM-Config',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxReestabInfo',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< HandoverCommand >-----#
    HandoverCommand = SEQ(name='HandoverCommand', mode=MODE_TYPE)
    _HandoverCommand_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __HandoverCommand_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___HandoverCommand_criticalExtensions_c1_handoverCommand_r8 = SEQ(name='handoverCommand-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-InterNodeDefinitions', 'HandoverCommand-r8-IEs')))
    ___HandoverCommand_criticalExtensions_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverCommand_criticalExtensions_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverCommand_criticalExtensions_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverCommand_criticalExtensions_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverCommand_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverCommand_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverCommand_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverCommand_criticalExtensions_c1._cont = ASN1Dict([
        ('handoverCommand-r8', ___HandoverCommand_criticalExtensions_c1_handoverCommand_r8),
        ('spare7', ___HandoverCommand_criticalExtensions_c1_spare7),
        ('spare6', ___HandoverCommand_criticalExtensions_c1_spare6),
        ('spare5', ___HandoverCommand_criticalExtensions_c1_spare5),
        ('spare4', ___HandoverCommand_criticalExtensions_c1_spare4),
        ('spare3', ___HandoverCommand_criticalExtensions_c1_spare3),
        ('spare2', ___HandoverCommand_criticalExtensions_c1_spare2),
        ('spare1', ___HandoverCommand_criticalExtensions_c1_spare1),
        ])
    __HandoverCommand_criticalExtensions_c1._ext = None
    __HandoverCommand_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverCommand_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __HandoverCommand_criticalExtensions_criticalExtensionsFuture._ext = None
    _HandoverCommand_criticalExtensions._cont = ASN1Dict([
        ('c1', __HandoverCommand_criticalExtensions_c1),
        ('criticalExtensionsFuture', __HandoverCommand_criticalExtensions_criticalExtensionsFuture),
        ])
    _HandoverCommand_criticalExtensions._ext = None
    HandoverCommand._cont = ASN1Dict([
        ('criticalExtensions', _HandoverCommand_criticalExtensions),
        ])
    HandoverCommand._ext = None
    
    #-----< HandoverCommand-r8-IEs >-----#
    HandoverCommand_r8_IEs = SEQ(name='HandoverCommand-r8-IEs', mode=MODE_TYPE)
    _HandoverCommand_r8_IEs_handoverCommandMessage = OCT_STR(name='handoverCommandMessage', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverCommand_r8_IEs_handoverCommandMessage_contain = SEQ(name='_cont_handoverCommandMessage', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'DL-DCCH-Message')))
    _HandoverCommand_r8_IEs_handoverCommandMessage._const_cont = __HandoverCommand_r8_IEs_handoverCommandMessage_contain
    _HandoverCommand_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HandoverCommand_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _HandoverCommand_r8_IEs_nonCriticalExtension._ext = None
    HandoverCommand_r8_IEs._cont = ASN1Dict([
        ('handoverCommandMessage', _HandoverCommand_r8_IEs_handoverCommandMessage),
        ('nonCriticalExtension', _HandoverCommand_r8_IEs_nonCriticalExtension),
        ])
    HandoverCommand_r8_IEs._ext = None
    
    #-----< HandoverPreparationInformation >-----#
    HandoverPreparationInformation = SEQ(name='HandoverPreparationInformation', mode=MODE_TYPE)
    _HandoverPreparationInformation_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __HandoverPreparationInformation_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___HandoverPreparationInformation_criticalExtensions_c1_handoverPreparationInformation_r8 = SEQ(name='handoverPreparationInformation-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-InterNodeDefinitions', 'HandoverPreparationInformation-r8-IEs')))
    ___HandoverPreparationInformation_criticalExtensions_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverPreparationInformation_criticalExtensions_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverPreparationInformation_criticalExtensions_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverPreparationInformation_criticalExtensions_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverPreparationInformation_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverPreparationInformation_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverPreparationInformation_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverPreparationInformation_criticalExtensions_c1._cont = ASN1Dict([
        ('handoverPreparationInformation-r8', ___HandoverPreparationInformation_criticalExtensions_c1_handoverPreparationInformation_r8),
        ('spare7', ___HandoverPreparationInformation_criticalExtensions_c1_spare7),
        ('spare6', ___HandoverPreparationInformation_criticalExtensions_c1_spare6),
        ('spare5', ___HandoverPreparationInformation_criticalExtensions_c1_spare5),
        ('spare4', ___HandoverPreparationInformation_criticalExtensions_c1_spare4),
        ('spare3', ___HandoverPreparationInformation_criticalExtensions_c1_spare3),
        ('spare2', ___HandoverPreparationInformation_criticalExtensions_c1_spare2),
        ('spare1', ___HandoverPreparationInformation_criticalExtensions_c1_spare1),
        ])
    __HandoverPreparationInformation_criticalExtensions_c1._ext = None
    __HandoverPreparationInformation_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverPreparationInformation_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __HandoverPreparationInformation_criticalExtensions_criticalExtensionsFuture._ext = None
    _HandoverPreparationInformation_criticalExtensions._cont = ASN1Dict([
        ('c1', __HandoverPreparationInformation_criticalExtensions_c1),
        ('criticalExtensionsFuture', __HandoverPreparationInformation_criticalExtensions_criticalExtensionsFuture),
        ])
    _HandoverPreparationInformation_criticalExtensions._ext = None
    HandoverPreparationInformation._cont = ASN1Dict([
        ('criticalExtensions', _HandoverPreparationInformation_criticalExtensions),
        ])
    HandoverPreparationInformation._ext = None
    
    #-----< HandoverPreparationInformation-r8-IEs >-----#
    HandoverPreparationInformation_r8_IEs = SEQ(name='HandoverPreparationInformation-r8-IEs', mode=MODE_TYPE)
    _HandoverPreparationInformation_r8_IEs_ue_RadioAccessCapabilityInfo = SEQ_OF(name='ue-RadioAccessCapabilityInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UE-CapabilityRAT-ContainerList')))
    _HandoverPreparationInformation_r8_IEs_as_Config = SEQ(name='as-Config', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-InterNodeDefinitions', 'AS-Config')), opt=True)
    _HandoverPreparationInformation_r8_IEs_rrm_Config = SEQ(name='rrm-Config', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-InterNodeDefinitions', 'RRM-Config')), opt=True)
    _HandoverPreparationInformation_r8_IEs_as_Context = SEQ(name='as-Context', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-InterNodeDefinitions', 'AS-Context')), opt=True)
    _HandoverPreparationInformation_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HandoverPreparationInformation_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _HandoverPreparationInformation_r8_IEs_nonCriticalExtension._ext = None
    HandoverPreparationInformation_r8_IEs._cont = ASN1Dict([
        ('ue-RadioAccessCapabilityInfo', _HandoverPreparationInformation_r8_IEs_ue_RadioAccessCapabilityInfo),
        ('as-Config', _HandoverPreparationInformation_r8_IEs_as_Config),
        ('rrm-Config', _HandoverPreparationInformation_r8_IEs_rrm_Config),
        ('as-Context', _HandoverPreparationInformation_r8_IEs_as_Context),
        ('nonCriticalExtension', _HandoverPreparationInformation_r8_IEs_nonCriticalExtension),
        ])
    HandoverPreparationInformation_r8_IEs._ext = None
    
    #-----< UERadioAccessCapabilityInformation >-----#
    UERadioAccessCapabilityInformation = SEQ(name='UERadioAccessCapabilityInformation', mode=MODE_TYPE)
    _UERadioAccessCapabilityInformation_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __UERadioAccessCapabilityInformation_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___UERadioAccessCapabilityInformation_criticalExtensions_c1_ueRadioAccessCapabilityInformation_r8 = SEQ(name='ueRadioAccessCapabilityInformation-r8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-InterNodeDefinitions', 'UERadioAccessCapabilityInformation-r8-IEs')))
    ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UERadioAccessCapabilityInformation_criticalExtensions_c1._cont = ASN1Dict([
        ('ueRadioAccessCapabilityInformation-r8', ___UERadioAccessCapabilityInformation_criticalExtensions_c1_ueRadioAccessCapabilityInformation_r8),
        ('spare7', ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare7),
        ('spare6', ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare6),
        ('spare5', ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare5),
        ('spare4', ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare4),
        ('spare3', ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare3),
        ('spare2', ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare2),
        ('spare1', ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare1),
        ])
    __UERadioAccessCapabilityInformation_criticalExtensions_c1._ext = None
    __UERadioAccessCapabilityInformation_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UERadioAccessCapabilityInformation_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __UERadioAccessCapabilityInformation_criticalExtensions_criticalExtensionsFuture._ext = None
    _UERadioAccessCapabilityInformation_criticalExtensions._cont = ASN1Dict([
        ('c1', __UERadioAccessCapabilityInformation_criticalExtensions_c1),
        ('criticalExtensionsFuture', __UERadioAccessCapabilityInformation_criticalExtensions_criticalExtensionsFuture),
        ])
    _UERadioAccessCapabilityInformation_criticalExtensions._ext = None
    UERadioAccessCapabilityInformation._cont = ASN1Dict([
        ('criticalExtensions', _UERadioAccessCapabilityInformation_criticalExtensions),
        ])
    UERadioAccessCapabilityInformation._ext = None
    
    #-----< UERadioAccessCapabilityInformation-r8-IEs >-----#
    UERadioAccessCapabilityInformation_r8_IEs = SEQ(name='UERadioAccessCapabilityInformation-r8-IEs', mode=MODE_TYPE)
    _UERadioAccessCapabilityInformation_r8_IEs_ue_RadioAccessCapabilityInfo = OCT_STR(name='ue-RadioAccessCapabilityInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UERadioAccessCapabilityInformation_r8_IEs_ue_RadioAccessCapabilityInfo_contain = SEQ(name='_cont_ue-RadioAccessCapabilityInfo', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'UECapabilityInformation')))
    _UERadioAccessCapabilityInformation_r8_IEs_ue_RadioAccessCapabilityInfo._const_cont = __UERadioAccessCapabilityInformation_r8_IEs_ue_RadioAccessCapabilityInfo_contain
    _UERadioAccessCapabilityInformation_r8_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UERadioAccessCapabilityInformation_r8_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _UERadioAccessCapabilityInformation_r8_IEs_nonCriticalExtension._ext = None
    UERadioAccessCapabilityInformation_r8_IEs._cont = ASN1Dict([
        ('ue-RadioAccessCapabilityInfo', _UERadioAccessCapabilityInformation_r8_IEs_ue_RadioAccessCapabilityInfo),
        ('nonCriticalExtension', _UERadioAccessCapabilityInformation_r8_IEs_nonCriticalExtension),
        ])
    UERadioAccessCapabilityInformation_r8_IEs._ext = None
    
    #-----< AS-Config >-----#
    AS_Config = SEQ(name='AS-Config', mode=MODE_TYPE)
    _AS_Config_sourceMeasConfig = SEQ(name='sourceMeasConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MeasConfig')))
    _AS_Config_sourceRadioResourceConfig = SEQ(name='sourceRadioResourceConfig', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'RadioResourceConfigDedicated')))
    _AS_Config_sourceSecurityAlgorithmConfig = SEQ(name='sourceSecurityAlgorithmConfig', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SecurityAlgorithmConfig')))
    _AS_Config_sourceUE_Identity = BIT_STR(name='sourceUE-Identity', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'C-RNTI')))
    _AS_Config_sourceMasterInformationBlock = SEQ(name='sourceMasterInformationBlock', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'MasterInformationBlock')))
    _AS_Config_sourceSystemInformationBlockType1 = SEQ(name='sourceSystemInformationBlockType1', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType1')))
    _AS_Config_sourceSystemInformationBlockType2 = SEQ(name='sourceSystemInformationBlockType2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'SystemInformationBlockType2')))
    _AS_Config_antennaInfoCommon = SEQ(name='antennaInfoCommon', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'AntennaInfoCommon')))
    _AS_Config_sourceDl_CarrierFreq = INT(name='sourceDl-CarrierFreq', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ARFCN-ValueEUTRA')))
    AS_Config._cont = ASN1Dict([
        ('sourceMeasConfig', _AS_Config_sourceMeasConfig),
        ('sourceRadioResourceConfig', _AS_Config_sourceRadioResourceConfig),
        ('sourceSecurityAlgorithmConfig', _AS_Config_sourceSecurityAlgorithmConfig),
        ('sourceUE-Identity', _AS_Config_sourceUE_Identity),
        ('sourceMasterInformationBlock', _AS_Config_sourceMasterInformationBlock),
        ('sourceSystemInformationBlockType1', _AS_Config_sourceSystemInformationBlockType1),
        ('sourceSystemInformationBlockType2', _AS_Config_sourceSystemInformationBlockType2),
        ('antennaInfoCommon', _AS_Config_antennaInfoCommon),
        ('sourceDl-CarrierFreq', _AS_Config_sourceDl_CarrierFreq),
        ])
    AS_Config._ext = []
    
    #-----< AS-Context >-----#
    AS_Context = SEQ(name='AS-Context', mode=MODE_TYPE)
    _AS_Context_reestablishmentInfo = SEQ(name='reestablishmentInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-InterNodeDefinitions', 'ReestablishmentInfo')), opt=True)
    AS_Context._cont = ASN1Dict([
        ('reestablishmentInfo', _AS_Context_reestablishmentInfo),
        ])
    AS_Context._ext = None
    
    #-----< ReestablishmentInfo >-----#
    ReestablishmentInfo = SEQ(name='ReestablishmentInfo', mode=MODE_TYPE)
    _ReestablishmentInfo_sourcePhysCellId = INT(name='sourcePhysCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'PhysCellId')))
    _ReestablishmentInfo_targetCellShortMAC_I = BIT_STR(name='targetCellShortMAC-I', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ShortMAC-I')))
    _ReestablishmentInfo_additionalReestabInfoList = SEQ_OF(name='additionalReestabInfoList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-InterNodeDefinitions', 'AdditionalReestabInfoList')), opt=True)
    ReestablishmentInfo._cont = ASN1Dict([
        ('sourcePhysCellId', _ReestablishmentInfo_sourcePhysCellId),
        ('targetCellShortMAC-I', _ReestablishmentInfo_targetCellShortMAC_I),
        ('additionalReestabInfoList', _ReestablishmentInfo_additionalReestabInfoList),
        ])
    ReestablishmentInfo._ext = []
    
    #-----< AdditionalReestabInfoList >-----#
    AdditionalReestabInfoList = SEQ_OF(name='AdditionalReestabInfoList', mode=MODE_TYPE)
    _AdditionalReestabInfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EUTRA-InterNodeDefinitions', 'AdditionalReestabInfo')))
    AdditionalReestabInfoList._cont = _AdditionalReestabInfoList__item_
    AdditionalReestabInfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< AdditionalReestabInfo >-----#
    AdditionalReestabInfo = SEQ(name='AdditionalReestabInfo', mode=MODE_TYPE)
    _AdditionalReestabInfo_cellIdentity = BIT_STR(name='cellIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'CellIdentity')))
    _AdditionalReestabInfo_key_eNodeB_Star = BIT_STR(name='key-eNodeB-Star', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-InterNodeDefinitions', 'Key-eNodeB-Star')))
    _AdditionalReestabInfo_shortMAC_I = BIT_STR(name='shortMAC-I', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EUTRA-RRC-Definitions', 'ShortMAC-I')))
    AdditionalReestabInfo._cont = ASN1Dict([
        ('cellIdentity', _AdditionalReestabInfo_cellIdentity),
        ('key-eNodeB-Star', _AdditionalReestabInfo_key_eNodeB_Star),
        ('shortMAC-I', _AdditionalReestabInfo_shortMAC_I),
        ])
    AdditionalReestabInfo._ext = None
    
    #-----< Key-eNodeB-Star >-----#
    Key_eNodeB_Star = BIT_STR(name='Key-eNodeB-Star', mode=MODE_TYPE)
    Key_eNodeB_Star._const_sz = ASN1Set(rv=[256], rr=[], ev=None, er=[])
    
    #-----< RRM-Config >-----#
    RRM_Config = SEQ(name='RRM-Config', mode=MODE_TYPE)
    _RRM_Config_ue_InactiveTime = ENUM(name='ue-InactiveTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRM_Config_ue_InactiveTime._cont = ASN1Dict([('s1', 0), ('s2', 1), ('s3', 2), ('s5', 3), ('s7', 4), ('s10', 5), ('s15', 6), ('s20', 7), ('s25', 8), ('s30', 9), ('s40', 10), ('s50', 11), ('min1', 12), ('min1s20c', 13), ('min1s40', 14), ('min2', 15), ('min2s30', 16), ('min3', 17), ('min3s30', 18), ('min4', 19), ('min5', 20), ('min6', 21), ('min7', 22), ('min8', 23), ('min9', 24), ('min10', 25), ('min12', 26), ('min14', 27), ('min17', 28), ('min20', 29), ('min24', 30), ('min28', 31), ('min33', 32), ('min38', 33), ('min44', 34), ('min50', 35), ('hr1', 36), ('hr1min30', 37), ('hr2', 38), ('hr2min30', 39), ('hr3', 40), ('hr3min30', 41), ('hr4', 42), ('hr5', 43), ('hr6', 44), ('hr8', 45), ('hr10', 46), ('hr13', 47), ('hr16', 48), ('hr20', 49), ('day1', 50), ('day1hr12', 51), ('day2', 52), ('day2hr12', 53), ('day3', 54), ('day4', 55), ('day5', 56), ('day7', 57), ('day10', 58), ('day14', 59), ('day19', 60), ('day24', 61), ('day30', 62), ('dayMoreThan30', 63)])
    _RRM_Config_ue_InactiveTime._ext = None
    RRM_Config._cont = ASN1Dict([
        ('ue-InactiveTime', _RRM_Config_ue_InactiveTime),
        ])
    RRM_Config._ext = []
    
    #-----< maxReestabInfo >-----#
    maxReestabInfo = INT(name='maxReestabInfo', mode=MODE_VALUE)
    maxReestabInfo._val = 32
    
    _all_ = [
        ___HandoverCommand_criticalExtensions_c1_handoverCommand_r8,
        ___HandoverCommand_criticalExtensions_c1_spare7,
        ___HandoverCommand_criticalExtensions_c1_spare6,
        ___HandoverCommand_criticalExtensions_c1_spare5,
        ___HandoverCommand_criticalExtensions_c1_spare4,
        ___HandoverCommand_criticalExtensions_c1_spare3,
        ___HandoverCommand_criticalExtensions_c1_spare2,
        ___HandoverCommand_criticalExtensions_c1_spare1,
        __HandoverCommand_criticalExtensions_c1,
        __HandoverCommand_criticalExtensions_criticalExtensionsFuture,
        _HandoverCommand_criticalExtensions,
        HandoverCommand,
        __HandoverCommand_r8_IEs_handoverCommandMessage_contain,
        _HandoverCommand_r8_IEs_handoverCommandMessage,
        _HandoverCommand_r8_IEs_nonCriticalExtension,
        HandoverCommand_r8_IEs,
        ___HandoverPreparationInformation_criticalExtensions_c1_handoverPreparationInformation_r8,
        ___HandoverPreparationInformation_criticalExtensions_c1_spare7,
        ___HandoverPreparationInformation_criticalExtensions_c1_spare6,
        ___HandoverPreparationInformation_criticalExtensions_c1_spare5,
        ___HandoverPreparationInformation_criticalExtensions_c1_spare4,
        ___HandoverPreparationInformation_criticalExtensions_c1_spare3,
        ___HandoverPreparationInformation_criticalExtensions_c1_spare2,
        ___HandoverPreparationInformation_criticalExtensions_c1_spare1,
        __HandoverPreparationInformation_criticalExtensions_c1,
        __HandoverPreparationInformation_criticalExtensions_criticalExtensionsFuture,
        _HandoverPreparationInformation_criticalExtensions,
        HandoverPreparationInformation,
        _HandoverPreparationInformation_r8_IEs_ue_RadioAccessCapabilityInfo,
        _HandoverPreparationInformation_r8_IEs_as_Config,
        _HandoverPreparationInformation_r8_IEs_rrm_Config,
        _HandoverPreparationInformation_r8_IEs_as_Context,
        _HandoverPreparationInformation_r8_IEs_nonCriticalExtension,
        HandoverPreparationInformation_r8_IEs,
        ___UERadioAccessCapabilityInformation_criticalExtensions_c1_ueRadioAccessCapabilityInformation_r8,
        ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare7,
        ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare6,
        ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare5,
        ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare4,
        ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare3,
        ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare2,
        ___UERadioAccessCapabilityInformation_criticalExtensions_c1_spare1,
        __UERadioAccessCapabilityInformation_criticalExtensions_c1,
        __UERadioAccessCapabilityInformation_criticalExtensions_criticalExtensionsFuture,
        _UERadioAccessCapabilityInformation_criticalExtensions,
        UERadioAccessCapabilityInformation,
        __UERadioAccessCapabilityInformation_r8_IEs_ue_RadioAccessCapabilityInfo_contain,
        _UERadioAccessCapabilityInformation_r8_IEs_ue_RadioAccessCapabilityInfo,
        _UERadioAccessCapabilityInformation_r8_IEs_nonCriticalExtension,
        UERadioAccessCapabilityInformation_r8_IEs,
        _AS_Config_sourceMeasConfig,
        _AS_Config_sourceRadioResourceConfig,
        _AS_Config_sourceSecurityAlgorithmConfig,
        _AS_Config_sourceUE_Identity,
        _AS_Config_sourceMasterInformationBlock,
        _AS_Config_sourceSystemInformationBlockType1,
        _AS_Config_sourceSystemInformationBlockType2,
        _AS_Config_antennaInfoCommon,
        _AS_Config_sourceDl_CarrierFreq,
        AS_Config,
        _AS_Context_reestablishmentInfo,
        AS_Context,
        _ReestablishmentInfo_sourcePhysCellId,
        _ReestablishmentInfo_targetCellShortMAC_I,
        _ReestablishmentInfo_additionalReestabInfoList,
        ReestablishmentInfo,
        _AdditionalReestabInfoList__item_,
        AdditionalReestabInfoList,
        _AdditionalReestabInfo_cellIdentity,
        _AdditionalReestabInfo_key_eNodeB_Star,
        _AdditionalReestabInfo_shortMAC_I,
        AdditionalReestabInfo,
        Key_eNodeB_Star,
        _RRM_Config_ue_InactiveTime,
        RRM_Config,
        maxReestabInfo,
    ]

init_modules(EUTRA_RRC_Definitions, EUTRA_UE_Variables, EUTRA_InterNodeDefinitions)
